/**
* LICENSE DISCLAIMER
* This file has been generated by EvoMaster.
* The content of this file is not subject to the license of EvoMaster itself, i.e., LGPL.
* This generated software (i.e., the test suite in this file) can be freely used, modified, 
* and distributed as you see fit without any restrictions.
*/
import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.Arrays;
import  dto.*;
import  java.util.ArrayList;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.sql.dsl.SqlDsl.sql;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-10-05T16:58:17.457-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 11 tests
 * <br>
*  Covered targets: 640
 * <br>
*  Used time: 0h 12m 40s
 * <br>
*  Needed budget for current results: 98%
 * <br>
*  This file contains test cases that represent successful calls.
*/
public class EvoMaster_successes_Test {

    
    private static final SutHandler controller = new em.external.org.zalando.ExternalEvoMasterController("/Users/pgarrett/evoMaster/EMB/jdk_8_maven/cs/rest/original/catwatch/catwatch-backend/target/catwatch-sut.jar");
    private static String baseUrlOfSut;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetDatabase(Arrays.asList("LANGUAGE_LIST","MAINTAINERS","PROJECT","STATISTICS"));
        controller.resetStateOfSUT();
    }
    
    
    
    
    /**
    * Calls:
    * (200) GET:/languages
    */
    @Test(timeout = 60000)
    public void test_0_getOnLanguagesReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 21L)
                .d("ID", "268")
                .d("SNAPSHOT_DATE", "\"2069-08-30 22:20:07\"")
                .d("ALL_CONTRIBUTORS_COUNT", "300")
                .d("ALL_FORKS_COUNT", "787")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "919")
                .d("ORGANIZATION_NAME", "\"uZ\"")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "288")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "705")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=uZ&" + 
                    "q=Ilw_0h")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/projects
    */
    @Test(timeout = 60000)
    public void test_1_getOnProjectsReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/projects?" + 
                    "organizations=uxqcdkGaA5r&" + 
                    "offset=468&" + 
                    "start_date=2074-02-02T02%3A01%3A29Z&" + 
                    "sortBy=_EM_310_XYZ_&" + 
                    "q=iAooQAl&" + 
                    "language=8OjkB2xj")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/projects
    */
    @Test(timeout = 60000)
    public void test_2_getOnProjectsWithQueryParamsReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 10L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "NULL")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "651")
                .d("GIT_HUB_PROJECT_ID", "490")
                .d("LAST_PUSHED", "\"_EM_112_XYZ_\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "NULL")
                .d("SCORE", "NULL")
                .d("SNAPSHOT_DATE", "\"1982-10-20 20:20:13\"")
                .d("STARS_COUNT", "NULL")
                .d("URL", "\"_EM_113_XYZ_\"")
                .d("TITLE", "\"_EM_114_XYZ_\"")
                .d("IMAGE", "\"jyX4C5PncpoC\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_116_XYZ_")
                .get(baseUrlOfSut + "/projects?" + 
                    "limit=713&" + 
                    "language=mB&" + 
                    "EMextraParam123=bspT_1vGmRIt")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/projects
    */
    @Test(timeout = 60000)
    public void test_3_getOnProjectsWithQueryParamReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 27L)
                .d("ID", "166")
                .d("SNAPSHOT_DATE", "\"1947-12-31 05:54:11\"")
                .d("ALL_CONTRIBUTORS_COUNT", "367")
                .d("ALL_FORKS_COUNT", "269")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "523")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "\"U\"")
                .d("PRIVATE_PROJECT_COUNT", "-2008330116")
                .d("PROGRAM_LANGUAGES_COUNT", "160")
                .d("PUBLIC_PROJECT_COUNT", "325")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "504")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "658")
            .and().insertInto("PROJECT", 28L)
                .d("COMMITS_COUNT", "182")
                .d("CONTRIBUTORS_COUNT", "NULL")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "931")
                .d("GIT_HUB_PROJECT_ID", "756")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "\"_EM_514_XYZ_\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"Qph\"")
                .d("SCORE", "NULL")
                .d("SNAPSHOT_DATE", "\"1991-11-04 17:36:49\"")
                .d("STARS_COUNT", "997")
                .d("URL", "\"_EM_515_XYZ_\"")
                .d("TITLE", "\"v_wz\"")
                .d("IMAGE", "\"ZT3\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "720")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/projects?q=FMu93vKY8")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/languages
    */
    @Test(timeout = 60000)
    public void test_4_getOnLanguagesWithQueryParamsReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=MzD&" + 
                    "offset=1145304223&" + 
                    "EMextraParam123=_EM_16_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/projects
    */
    @Test(timeout = 60000)
    public void test_5_getOnProjectsReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/projects?" + 
                    "limit=654&" + 
                    "end_date=2020-06-17T06%3A47%3A17Z&" + 
                    "EMextraParam123=_EM_20_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/statistics
    */
    @Test(timeout = 60000)
    public void test_6_getOnStatisticsReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics?limit=ptR")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/statistics
    */
    @Test(timeout = 60000)
    public void test_7_getOnStatisticsReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/statistics?organizations=_EM_276_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/statistics/languages
    */
    @Test(timeout = 60000)
    public void test_8_getOnStatisticsLanguagesWithQueryParamsReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "q=yXFnu&" + 
                    "offset=FJnVXKjAJ_sc5wE4")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/statistics/languages
    */
    @Test(timeout = 60000)
    public void test_9_getOnStatisticsLanguagesWithQueryParamReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/statistics/languages?organizations=_EM_242_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/v2/api-docs
    */
    @Test(timeout = 60000)
    public void test_10_getOnApi_docsReturnsObject() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/v2/api-docs")
                .then()
                .statusCode(200);
    }


}
