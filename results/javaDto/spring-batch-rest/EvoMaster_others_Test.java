/**
* LICENSE DISCLAIMER
* This file has been generated by EvoMaster.
* The content of this file is not subject to the license of EvoMaster itself, i.e., LGPL.
* This generated software (i.e., the test suite in this file) can be freely used, modified, 
* and distributed as you see fit without any restrictions.
*/
import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.Arrays;
import  dto.*;
import  java.util.ArrayList;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-10-05T19:26:45.240-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 4 tests
 * <br>
*  Covered targets: 111
 * <br>
*  Used time: 0h 14m 29s
 * <br>
*  Needed budget for current results: 88%
 * <br>
*  This file contains test cases that represent failed calls, but not indicative of faults.
*/
public class EvoMaster_others_Test {

    
    private static final SutHandler controller = new em.external.spring.batch.rest.ExternalEvoMasterController("/Users/pgarrett/evoMaster/EMB/jdk_8_maven/cs/rest/original/spring-batch-rest/example/api/target/spring-batch-rest-sut.jar");
    private static String baseUrlOfSut;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetStateOfSUT();
    }
    
    
    
    
    /**
    * Calls:
    * (null) GET:/jobExecutions
    */
    @Test(timeout = 60000)
    public void test_0_getOnJobExecutionsWithQueryParamsEmptyJobNameReturnsNull() throws Exception {
        
        try{
            given().accept("*/*")
                    .header("x-EMextraHeader123", "42")
                    .get(baseUrlOfSut + "/jobExecutions?" + 
                        "jobName=&" + 
                        "exitCode=_EM_603_XYZ_&" + 
                        "limitPerJob=797");
        } catch(Exception e){
        }
    }
    
    
    /**
    * Calls:
    * (null) GET:/jobExecutions
    */
    @Test(timeout = 60000)
    public void test_1_getOnJobExecutionsReturnsNull() throws Exception {
        
        try{
            given().accept("*/*")
                    .header("x-EMextraHeader123", "")
                    .get(baseUrlOfSut + "/jobExecutions?" + 
                        "limitPerJob=282&" + 
                        "EMextraParam123=42");
        } catch(Exception e){
        }
    }
    
    
    /**
    * Calls:
    * (null) GET:/jobExecutions
    */
    @Test(timeout = 60000)
    public void test_2_getOnJobExecutionsReturnsNull() throws Exception {
        
        try{
            given().accept("*/*")
                    .header("x-EMextraHeader123", "")
                    .get(baseUrlOfSut + "/jobExecutions?" + 
                        "exitCode=COMPLETED&" + 
                        "limitPerJob=8799&" + 
                        "EMextraParam123=42");
        } catch(Exception e){
        }
    }
    
    
    /**
    * Calls:
    * (null) GET:/jobExecutions
    */
    @Test(timeout = 60000)
    public void test_3_getOnJobExecutionsReturnsNull() throws Exception {
        
        try{
            given().accept("*/*")
                    .header("x-EMextraHeader123", "")
                    .get(baseUrlOfSut + "/jobExecutions?" + 
                        "exitCode=_EM_531_XYZ_&" + 
                        "limitPerJob=929");
        } catch(Exception e){
        }
    }


}
