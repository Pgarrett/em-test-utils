/**
* LICENSE DISCLAIMER
* This file has been generated by EvoMaster.
* The content of this file is not subject to the license of EvoMaster itself, i.e., LGPL.
* This generated software (i.e., the test suite in this file) can be freely used, modified, 
* and distributed as you see fit without any restrictions.
*/
import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.Arrays;
import  dto.*;
import  java.util.ArrayList;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-10-05T17:49:14.440-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 45 tests
 * <br>
*  Covered targets: 646
 * <br>
*  Used time: 0h 10m 0s
 * <br>
*  Needed budget for current results: 99%
 * <br>
*  This file contains test cases that represent successful calls.
*/
public class EvoMaster_successes_Test {

    
    private static final SutHandler controller = new em.external.org.restncs.ExternalEvoMasterController("/Users/pgarrett/evoMaster/EMB/jdk_8_maven/cs/rest/artificial/ncs/target/rest-ncs-sut.jar");
    private static String baseUrlOfSut;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetStateOfSUT();
    }
    
    
    
    
    /**
    * Calls:
    * (200) GET:/v2/api-docs
    */
    @Test(timeout = 60000)
    public void test_0_getOnApi_docsReturnsObject() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/v2/api-docs")
                .then()
                .statusCode(200);
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/bessj/{n}/{x}
    */
    @Test(timeout = 60000)
    public void test_1_getOnBessjReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/bessj/331/-305858.3812200157")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(-0.0014223643394160772));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/bessj/{n}/{x}
    */
    @Test(timeout = 60000)
    public void test_2_getOnBessjReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/bessj/54/2.0E-8")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(0.0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/bessj/{n}/{x}
    */
    @Test(timeout = 60000)
    public void test_3_getOnBessjReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/bessj/3/8.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(-0.29113220692602515));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/bessj/{n}/{x}
    */
    @Test(timeout = 60000)
    public void test_4_getOnBessjReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/bessj/132/0.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(0.0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/bessj/{n}/{x}
    */
    @Test(timeout = 60000)
    public void test_5_getOnBessjReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/bessj/8/8.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(0.22345498635390812));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/expint/{n}/{x}
    */
    @Test(timeout = 60000)
    public void test_6_getOnExpintReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/expint/5/0.14218034191701512")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(0.2072406681057188));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/expint/{n}/{x}
    */
    @Test(timeout = 60000)
    public void test_7_getOnExpintReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_297_XYZ_")
                .get(baseUrlOfSut + "/api/expint/2097253/0.0?EMextraParam123=_EM_296_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(4.7681442191973113E-7));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/expint/{n}/{x}
    */
    @Test(timeout = 60000)
    public void test_8_getOnExpintReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_361_XYZ_")
                .get(baseUrlOfSut + "/api/expint/0/0.0848714242")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(10.8237890327032));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/expint/{n}/{x}
    */
    @Test(timeout = 60000)
    public void test_9_getOnExpintReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/expint/16777543/1.0?EMextraParam123=_EM_636_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(2.1926895924725276E-8));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/expint/{n}/{x}
    */
    @Test(timeout = 60000)
    public void test_10_getOnExpintReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/expint/382/1410.0854402107793")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(0.0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/expint/{n}/{x}
    */
    @Test(timeout = 60000)
    public void test_11_getOnExpintReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/expint/1/0.910519942680903")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(0.2554838941678968));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/expint/{n}/{x}
    */
    @Test(timeout = 60000)
    public void test_12_getOnExpintReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/expint/1041413759/0.38360531979204504?EMextraParam123=_EM_162_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(6.543031569561066E-10));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/gammq/{a}/{x}
    */
    @Test(timeout = 60000)
    public void test_13_getOnGammqReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/gammq/0.017097347999942225/16.62193854353701")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(6.234244217188592E-11));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/gammq/{a}/{x}
    */
    @Test(timeout = 60000)
    public void test_14_getOnGammqReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/gammq/0.15299760406323826/0.9539167903485198?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(0.041518546374585186));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/gammq/{a}/{x}
    */
    @Test(timeout = 60000)
    public void test_15_getOnGammqReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_88_XYZ_")
                .get(baseUrlOfSut + "/api/gammq/0.9176596233005705/0.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(1.0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/gammq/{a}/{x}
    */
    @Test(timeout = 60000)
    public void test_16_getOnGammqReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_480_XYZ_")
                .get(baseUrlOfSut + "/api/gammq/2.2471164185778946E307/156.3097542011602?EMextraParam123=_EM_479_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(1.0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/remainder/{a}/{b}
    */
    @Test(timeout = 60000)
    public void test_17_getOnRemaindReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/remainder/1211/-378")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", numberMatches(77.0))
                .body("'resultAsDouble'", nullValue());
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/remainder/{a}/{b}
    */
    @Test(timeout = 60000)
    public void test_18_getOnRemaindReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/remainder/-4034/-2017")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", numberMatches(0.0))
                .body("'resultAsDouble'", nullValue());
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/remainder/{a}/{b}
    */
    @Test(timeout = 60000)
    public void test_19_getOnRemaindReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/remainder/278/143")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", numberMatches(135.0))
                .body("'resultAsDouble'", nullValue());
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/remainder/{a}/{b}
    */
    @Test(timeout = 60000)
    public void test_20_getOnRemaindReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/remainder/-9165/611")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", numberMatches(0.0))
                .body("'resultAsDouble'", nullValue());
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/remainder/{a}/{b}
    */
    @Test(timeout = 60000)
    public void test_21_getOnRemaindReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/remainder/0/964?EMextraParam123=_EM_2383_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", numberMatches(-1.0))
                .body("'resultAsDouble'", nullValue());
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/remainder/{a}/{b}
    */
    @Test(timeout = 60000)
    public void test_22_getOnRemaindReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/remainder/759/0?EMextraParam123=_EM_2219_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", numberMatches(-1.0))
                .body("'resultAsDouble'", nullValue());
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/bessj/{n}/{x}
    */
    @Test(timeout = 60000)
    public void test_23_getOnBessjReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/bessj/7/7.670320776519316")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(0.2976968158568577));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/bessj/{n}/{x}
    */
    @Test(timeout = 60000)
    public void test_24_getOnWithQueryParamReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/bessj/116/-13536.625737866267?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(-0.004849331374285809));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/fisher/{m}/{n}/{x}
    */
    @Test(timeout = 60000)
    public void test_25_getOnFisherReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_9_XYZ_")
                .get(baseUrlOfSut + "/api/fisher/-7758/-3305/0.15642976917850393?EMextraParam123=_EM_8_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(0.0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/fisher/{m}/{n}/{x}
    */
    @Test(timeout = 60000)
    public void test_26_getOnFisherReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_0_XYZ_")
                .get(baseUrlOfSut + "/api/fisher/346/205/0.6638226145390494?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(4.161219224381751E-4));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/fisher/{m}/{n}/{x}
    */
    @Test(timeout = 60000)
    public void test_27_getOnFisherReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/fisher/471/517/0.8739026220491718?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(0.06785174926236147));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/fisher/{m}/{n}/{x}
    */
    @Test(timeout = 60000)
    public void test_28_getOnFisherReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/fisher/434/598/0.326998901638492?EMextraParam123=_EM_69_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(3.737917323506936E-17));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/fisher/{m}/{n}/{x}
    */
    @Test(timeout = 60000)
    public void test_29_getOnFisherReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/fisher/-268435383/768/0.5947866330741862")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(1.0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/fisher/{m}/{n}/{x}
    */
    @Test(timeout = 60000)
    public void test_30_getOnFisherReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/fisher/-524223/440/0.49195842470678774")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(1.0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/fisher/{m}/{n}/{x}
    */
    @Test(timeout = 60000)
    public void test_31_getOnFisherReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/fisher/65/440/0.49195842470678774")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(3.2939650334762153E-4));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/triangle/{a}/{b}/{c}
    */
    @Test(timeout = 60000)
    public void test_32_getOnTrianglReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_1_XYZ_")
                .get(baseUrlOfSut + "/api/triangle/811/1964678886/725")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", numberMatches(0.0))
                .body("'resultAsDouble'", nullValue());
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/triangle/{a}/{b}/{c}
    */
    @Test(timeout = 60000)
    public void test_33_getOnTrianglReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/triangle/700/577/700")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", numberMatches(2.0))
                .body("'resultAsDouble'", nullValue());
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/triangle/{a}/{b}/{c}
    */
    @Test(timeout = 60000)
    public void test_34_getOnTrianglReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_89_XYZ_")
                .get(baseUrlOfSut + "/api/triangle/111/414/804?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", numberMatches(0.0))
                .body("'resultAsDouble'", nullValue());
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/triangle/{a}/{b}/{c}
    */
    @Test(timeout = 60000)
    public void test_35_getOnTrianglReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/triangle/974/974/266?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", numberMatches(2.0))
                .body("'resultAsDouble'", nullValue());
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/triangle/{a}/{b}/{c}
    */
    @Test(timeout = 60000)
    public void test_36_getOnTrianglReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_32_XYZ_")
                .get(baseUrlOfSut + "/api/triangle/418/503/142")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", numberMatches(1.0))
                .body("'resultAsDouble'", nullValue());
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/triangle/{a}/{b}/{c}
    */
    @Test(timeout = 60000)
    public void test_37_getOnTrianglReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/triangle/633/67109309/-2096847?EMextraParam123=_EM_42_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", numberMatches(0.0))
                .body("'resultAsDouble'", nullValue());
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/triangle/{a}/{b}/{c}
    */
    @Test(timeout = 60000)
    public void test_38_getOnTrianglReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/triangle/-1675632053/984/980")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", numberMatches(0.0))
                .body("'resultAsDouble'", nullValue());
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/triangle/{a}/{b}/{c}
    */
    @Test(timeout = 60000)
    public void test_39_getOnTrianglReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/triangle/531/-2118581930/945")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", numberMatches(0.0))
                .body("'resultAsDouble'", nullValue());
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/triangle/{a}/{b}/{c}
    */
    @Test(timeout = 60000)
    public void test_40_getOnTrianglReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/triangle/682/492/610?EMextraParam123=_EM_7_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", numberMatches(1.0))
                .body("'resultAsDouble'", nullValue());
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/triangle/{a}/{b}/{c}
    */
    @Test(timeout = 60000)
    public void test_41_getOnTrianglReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/triangle/453/253/253?EMextraParam123=_EM_726_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", numberMatches(2.0))
                .body("'resultAsDouble'", nullValue());
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/triangle/{a}/{b}/{c}
    */
    @Test(timeout = 60000)
    public void test_42_getOnTrianglReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/triangle/667/24/538?EMextraParam123=_EM_59_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", numberMatches(0.0))
                .body("'resultAsDouble'", nullValue());
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/fisher/{m}/{n}/{x}
    */
    @Test(timeout = 60000)
    public void test_43_getOnFisherReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/fisher/346/205/-2.013104842147734E7")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", containsString("NaN"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/triangle/{a}/{b}/{c}
    */
    @Test(timeout = 60000)
    public void test_44_getOnTrianglReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/triangle/436/436/436")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", numberMatches(3.0))
                .body("'resultAsDouble'", nullValue());
    }


}
