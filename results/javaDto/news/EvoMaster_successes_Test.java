/**
* LICENSE DISCLAIMER
* This file has been generated by EvoMaster.
* The content of this file is not subject to the license of EvoMaster itself, i.e., LGPL.
* This generated software (i.e., the test suite in this file) can be freely used, modified, 
* and distributed as you see fit without any restrictions.
*/
import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.Arrays;
import  dto.*;
import  java.util.ArrayList;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.sql.dsl.SqlDsl.sql;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-10-05T18:02:24.873-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 112 tests
 * <br>
*  Covered targets: 576
 * <br>
*  Used time: 0h 10m 8s
 * <br>
*  Needed budget for current results: 73%
 * <br>
*  This file contains test cases that represent successful calls.
*/
public class EvoMaster_successes_Test {

    
    private static final SutHandler controller = new em.external.org.tsdes.ExternalEvoMasterController("/Users/pgarrett/evoMaster/EMB/jdk_8_maven/cs/rest/artificial/news/target/rest-news-sut.jar");
    private static String baseUrlOfSut;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetDatabase(Arrays.asList("NEWS_ENTITY","news_entity"));
        controller.resetStateOfSUT();
    }
    
    
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_0_getOnNewsWithQueryParamsEmptyCountryReturns1Element() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 213L)
                .d("ID", "946")
                .d("AUTHOR_ID", "\"1gpHlPbo31wNG\"")
                .d("COUNTRY", "\"\"")
                .d("CREATION_TIME", "\"2014-02-17 17:26:49\"")
                .d("TEXT", "\"_EM_5292_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=1gpHlPbo31wNG&" + 
                    "country=")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(1))
                .body("[0].'newsId'", containsString("946"))
                .body("[0].'authorId'", containsString("1gpHlPbo31wNG"))
                .body("[0].'text'", containsString("_EM_5292_XYZ_"))
                .body("[0].'country'", containsString(""))
                .body("[0].'creationTime'", containsString("2014-02-17T17:26:49-03:00"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/countries
    */
    @Test(timeout = 60000)
    public void test_1_getOnCountriesReturns247Elements() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 117L)
                .d("ID", "699")
                .d("AUTHOR_ID", "\"GxMw4iQctgPhmBFd\"")
                .d("COUNTRY", "\"J\"")
                .d("CREATION_TIME", "\"2095-05-08 01:19:03\"")
                .d("TEXT", "\"_EM_3134_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/countries")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(247))
                .body("", hasItems("Afghanistan", "Åland Islands", "Albania", "Algeria", "American Samoa", "Andorra", "Angola", "Anguilla", "Antigua and Barbuda", "Argentina", "Armenia", "Aruba", "Australia", "Austria", "Azerbaijan", "The Bahamas", "Bahrain", "Bangladesh", "Barbados", "Belarus", "Belgium", "Belize", "Benin", "Bermuda", "Bhutan", "Bolivia", "Bonaire", "Bosnia and Herzegovina", "Botswana", "Bouvet Island", "Brazil", "British Indian Ocean Territory", "United States Minor Outlying Islands", "British Virgin Islands", "Brunei", "Bulgaria", "Burkina Faso", "Burundi", "Cambodia", "Cameroon", "Canada", "Cape Verde", "Cayman Islands", "Central African Republic", "Chad", "Chile", "China", "Christmas Island", "Cocos (Keeling) Islands", "Colombia", "Comoros", "Republic of the Congo", "Democratic Republic of the Congo", "Cook Islands", "Costa Rica", "Croatia", "Cuba", "Curaçao", "Cyprus", "Czech Republic", "Denmark", "Djibouti", "Dominica", "Dominican Republic", "Ecuador", "Egypt", "El Salvador", "Equatorial Guinea", "Eritrea", "Estonia", "Ethiopia", "Falkland Islands", "Faroe Islands", "Fiji", "Finland", "France", "French Guiana", "French Polynesia", "French Southern and Antarctic Lands", "Gabon", "The Gambia", "Georgia", "Germany", "Ghana", "Gibraltar", "Greece", "Greenland", "Grenada", "Guadeloupe", "Guam", "Guatemala", "Guernsey", "Guinea", "Guinea-Bissau", "Guyana", "Haiti", "Heard Island and McDonald Islands", "Honduras", "Hong Kong", "Hungary", "Iceland", "India", "Indonesia", "Ivory Coast", "Iran", "Iraq", "Republic of Ireland", "Isle of Man", "Israel", "Italy", "Jamaica", "Japan", "Jersey", "Jordan", "Kazakhstan", "Kenya", "Kiribati", "Kuwait", "Kyrgyzstan", "Laos", "Latvia", "Lebanon", "Lesotho", "Liberia", "Libya", "Liechtenstein", "Lithuania", "Luxembourg", "Macau", "Republic of Macedonia", "Madagascar", "Malawi", "Malaysia", "Maldives", "Mali", "Malta", "Marshall Islands", "Martinique", "Mauritania", "Mauritius", "Mayotte", "Mexico", "Federated States of Micronesia", "Moldova", "Monaco", "Mongolia", "Montenegro", "Montserrat", "Morocco", "Mozambique", "Myanmar", "Namibia", "Nauru", "Nepal", "Netherlands", "New Caledonia", "New Zealand", "Nicaragua", "Niger", "Nigeria", "Niue", "Norfolk Island", "North Korea", "Northern Mariana Islands", "Norway", "Oman", "Pakistan", "Palau", "Palestine", "Panama", "Papua New Guinea", "Paraguay", "Peru", "Philippines", "Pitcairn Islands", "Poland", "Portugal", "Puerto Rico", "Qatar", "Republic of Kosovo", "Réunion", "Romania", "Russia", "Rwanda", "Saint Barthélemy", "Saint Helena", "Saint Kitts and Nevis", "Saint Lucia", "Saint Martin", "Saint Pierre and Miquelon", "Saint Vincent and the Grenadines", "Samoa", "San Marino", "São Tomé and Príncipe", "Saudi Arabia", "Senegal", "Serbia", "Seychelles", "Sierra Leone", "Singapore", "Sint Maarten", "Slovakia", "Slovenia", "Solomon Islands", "Somalia", "South Africa", "South Georgia", "South Korea", "South Sudan", "Spain", "Sri Lanka", "Sudan", "Suriname", "Svalbard and Jan Mayen", "Swaziland", "Sweden", "Switzerland", "Syria", "Taiwan", "Tajikistan", "Tanzania", "Thailand", "East Timor", "Togo", "Tokelau", "Tonga", "Trinidad and Tobago", "Tunisia", "Turkey", "Turkmenistan", "Turks and Caicos Islands", "Tuvalu", "Uganda", "Ukraine", "United Arab Emirates", "United Kingdom", "United States", "Uruguay", "Uzbekistan", "Vanuatu", "Venezuela", "Vietnam", "Wallis and Futuna", "Western Sahara", "Yemen", "Zambia", "Zimbabwe"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_2_getOnNewsWithQueryParamReturns1Element() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 8L)
                .d("ID", "188")
                .d("AUTHOR_ID", "\"8lENcXEASdTx3yAU\"")
                .d("COUNTRY", "\"WtkKSR6h\"")
                .d("CREATION_TIME", "\"2084-07-26 08:17:09\"")
                .d("TEXT", "\"xE7bWFaM6pa\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(1))
                .body("[0].'newsId'", containsString("188"))
                .body("[0].'authorId'", containsString("8lENcXEASdTx3yAU"))
                .body("[0].'text'", containsString("xE7bWFaM6pa"))
                .body("[0].'country'", containsString("WtkKSR6h"))
                .body("[0].'creationTime'", containsString("2084-07-26T08:17:09-03:00"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_3_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 48L)
                .d("ID", "4225")
                .d("AUTHOR_ID", "\"djVN81tqqD6Z30qp\"")
                .d("COUNTRY", "\"UzUZUreustjQTK\"")
                .d("CREATION_TIME", "\"2000-03-16 11:53:59\"")
                .d("TEXT", "\"ubIF0UPf\"")
            .and().insertInto("NEWS_ENTITY", 41L)
                .d("ID", "96")
                .d("AUTHOR_ID", "\"\"")
                .d("COUNTRY", "\"_EM_1387_XYZ_\"")
                .d("CREATION_TIME", "\"1986-01-28 02:51:01\"")
                .d("TEXT", "\"X\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=gepTW5nhZLTPn3i&" + 
                    "country=_EM_27006_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_4_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 48L)
                .d("ID", "129")
                .d("AUTHOR_ID", "\"djVN81tqqD6Z40qp\"")
                .d("COUNTRY", "\"UzUUUretUUhQT\"")
                .d("CREATION_TIME", "\"2000-03-16 11:53:59\"")
                .d("TEXT", "\"ubIFUVPf7\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?country=_EM_27006_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_5_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 48L)
                .d("ID", "-135039")
                .d("AUTHOR_ID", "\"oD6wGZRLdARfsnMN2\"")
                .d("COUNTRY", "\"UtVZUUveusUjQU\"")
                .d("CREATION_TIME", "\"2068-03-28 14:53:59\"")
                .d("TEXT", "\"628s\"")
            .and().insertInto("NEWS_ENTITY", 41L)
                .d("ID", "72")
                .d("AUTHOR_ID", "\"\"")
                .d("COUNTRY", "\"_EM_1387_XYZ_\"")
                .d("CREATION_TIME", "\"1986-01-28 02:59:01\"")
                .d("TEXT", "\"_EM_1388_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?country=_EM_23303_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_6_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 21L)
                .d("ID", "0")
                .d("AUTHOR_ID", "\"R1nHEfWQ\"")
                .d("COUNTRY", "\"F^\"")
                .d("CREATION_TIME", "\"1945-12-23 06:01:59\"")
                .d("TEXT", "\"ihYkwgwevP\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=R1nHEfWQ&" + 
                    "country=_EM_567_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_7_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 22L)
                .d("ID", "97")
                .d("AUTHOR_ID", "\"sF6pFh69Y6m1_kW\"")
                .d("COUNTRY", "\"dzxgAWBo\"")
                .d("CREATION_TIME", "\"1938-06-28 18:10:46\"")
                .d("TEXT", "\"_EM_729_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "_EM_536_XYZ_")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=_EM_534_XYZ_&" + 
                    "EMextraParam123=_EM_535_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_8_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 37L)
                .d("ID", "438")
                .d("AUTHOR_ID", "\"jan\"")
                .d("COUNTRY", "\"FdQci\"")
                .d("CREATION_TIME", "\"1947-11-08 17:32:43\"")
                .d("TEXT", "\"\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/news?" + 
                    "country=_EM_1081_XYZ_&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_9_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 231L)
                .d("ID", "-3805")
                .d("AUTHOR_ID", "\"d\"")
                .d("COUNTRY", "\"KdIB3UsHGE5drBlC\"")
                .d("CREATION_TIME", "\"1921-05-17 00:29:12\"")
                .d("TEXT", "\"_EM_7649_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=_EM_5502_XYZ_&" + 
                    "country=_EM_7647_XYZ_&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_10_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 231L)
                .d("ID", "291")
                .d("AUTHOR_ID", "\"e\"")
                .d("COUNTRY", "\"KdIB3UsHGE5drBlC\"")
                .d("CREATION_TIME", "\"1921-06-25 00:31:29\"")
                .d("TEXT", "\"r26MdBifZhgEKN2\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?authorId=_EM_5502_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_11_getOnNewsReturnsEmptyList() throws Exception {
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=_EM_1673_XYZ_&" + 
                    "country=Philippines&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_12_getOnNewsReturnsEmptyList() throws Exception {
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=_EM_1726_XYZ_&" + 
                    "country=Syria&" + 
                    "EMextraParam123=_EM_1727_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_13_getOnNewsReturnsEmptyList() throws Exception {
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?authorId=_EM_2642_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/countries
    */
    @Test(timeout = 60000)
    public void test_14_getOnCountriesWithQueryParamsReturns247Elements() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/countries?" + 
                    "EMextraParam123=42&" + 
                    "country=Niue")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(247))
                .body("", hasItems("Afghanistan", "Åland Islands", "Albania", "Algeria", "American Samoa", "Andorra", "Angola", "Anguilla", "Antigua and Barbuda", "Argentina", "Armenia", "Aruba", "Australia", "Austria", "Azerbaijan", "The Bahamas", "Bahrain", "Bangladesh", "Barbados", "Belarus", "Belgium", "Belize", "Benin", "Bermuda", "Bhutan", "Bolivia", "Bonaire", "Bosnia and Herzegovina", "Botswana", "Bouvet Island", "Brazil", "British Indian Ocean Territory", "United States Minor Outlying Islands", "British Virgin Islands", "Brunei", "Bulgaria", "Burkina Faso", "Burundi", "Cambodia", "Cameroon", "Canada", "Cape Verde", "Cayman Islands", "Central African Republic", "Chad", "Chile", "China", "Christmas Island", "Cocos (Keeling) Islands", "Colombia", "Comoros", "Republic of the Congo", "Democratic Republic of the Congo", "Cook Islands", "Costa Rica", "Croatia", "Cuba", "Curaçao", "Cyprus", "Czech Republic", "Denmark", "Djibouti", "Dominica", "Dominican Republic", "Ecuador", "Egypt", "El Salvador", "Equatorial Guinea", "Eritrea", "Estonia", "Ethiopia", "Falkland Islands", "Faroe Islands", "Fiji", "Finland", "France", "French Guiana", "French Polynesia", "French Southern and Antarctic Lands", "Gabon", "The Gambia", "Georgia", "Germany", "Ghana", "Gibraltar", "Greece", "Greenland", "Grenada", "Guadeloupe", "Guam", "Guatemala", "Guernsey", "Guinea", "Guinea-Bissau", "Guyana", "Haiti", "Heard Island and McDonald Islands", "Honduras", "Hong Kong", "Hungary", "Iceland", "India", "Indonesia", "Ivory Coast", "Iran", "Iraq", "Republic of Ireland", "Isle of Man", "Israel", "Italy", "Jamaica", "Japan", "Jersey", "Jordan", "Kazakhstan", "Kenya", "Kiribati", "Kuwait", "Kyrgyzstan", "Laos", "Latvia", "Lebanon", "Lesotho", "Liberia", "Libya", "Liechtenstein", "Lithuania", "Luxembourg", "Macau", "Republic of Macedonia", "Madagascar", "Malawi", "Malaysia", "Maldives", "Mali", "Malta", "Marshall Islands", "Martinique", "Mauritania", "Mauritius", "Mayotte", "Mexico", "Federated States of Micronesia", "Moldova", "Monaco", "Mongolia", "Montenegro", "Montserrat", "Morocco", "Mozambique", "Myanmar", "Namibia", "Nauru", "Nepal", "Netherlands", "New Caledonia", "New Zealand", "Nicaragua", "Niger", "Nigeria", "Niue", "Norfolk Island", "North Korea", "Northern Mariana Islands", "Norway", "Oman", "Pakistan", "Palau", "Palestine", "Panama", "Papua New Guinea", "Paraguay", "Peru", "Philippines", "Pitcairn Islands", "Poland", "Portugal", "Puerto Rico", "Qatar", "Republic of Kosovo", "Réunion", "Romania", "Russia", "Rwanda", "Saint Barthélemy", "Saint Helena", "Saint Kitts and Nevis", "Saint Lucia", "Saint Martin", "Saint Pierre and Miquelon", "Saint Vincent and the Grenadines", "Samoa", "San Marino", "São Tomé and Príncipe", "Saudi Arabia", "Senegal", "Serbia", "Seychelles", "Sierra Leone", "Singapore", "Sint Maarten", "Slovakia", "Slovenia", "Solomon Islands", "Somalia", "South Africa", "South Georgia", "South Korea", "South Sudan", "Spain", "Sri Lanka", "Sudan", "Suriname", "Svalbard and Jan Mayen", "Swaziland", "Sweden", "Switzerland", "Syria", "Taiwan", "Tajikistan", "Tanzania", "Thailand", "East Timor", "Togo", "Tokelau", "Tonga", "Trinidad and Tobago", "Tunisia", "Turkey", "Turkmenistan", "Turks and Caicos Islands", "Tuvalu", "Uganda", "Ukraine", "United Arab Emirates", "United Kingdom", "United States", "Uruguay", "Uzbekistan", "Vanuatu", "Venezuela", "Vietnam", "Wallis and Futuna", "Western Sahara", "Yemen", "Zambia", "Zimbabwe"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/countries
    */
    @Test(timeout = 60000)
    public void test_15_getOnCountriesWithQueryParamReturns247Elements() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 118L)
                .d("ID", "645")
                .d("AUTHOR_ID", "\"C2K2Xgz1u\"")
                .d("COUNTRY", "\"_lm_yN7N6\"")
                .d("CREATION_TIME", "\"1925-11-03 11:22:24\"")
                .d("TEXT", "\"QZzAMQdHp\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/countries?authorId=C2K2Xgz1u")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(247))
                .body("", hasItems("Afghanistan", "Åland Islands", "Albania", "Algeria", "American Samoa", "Andorra", "Angola", "Anguilla", "Antigua and Barbuda", "Argentina", "Armenia", "Aruba", "Australia", "Austria", "Azerbaijan", "The Bahamas", "Bahrain", "Bangladesh", "Barbados", "Belarus", "Belgium", "Belize", "Benin", "Bermuda", "Bhutan", "Bolivia", "Bonaire", "Bosnia and Herzegovina", "Botswana", "Bouvet Island", "Brazil", "British Indian Ocean Territory", "United States Minor Outlying Islands", "British Virgin Islands", "Brunei", "Bulgaria", "Burkina Faso", "Burundi", "Cambodia", "Cameroon", "Canada", "Cape Verde", "Cayman Islands", "Central African Republic", "Chad", "Chile", "China", "Christmas Island", "Cocos (Keeling) Islands", "Colombia", "Comoros", "Republic of the Congo", "Democratic Republic of the Congo", "Cook Islands", "Costa Rica", "Croatia", "Cuba", "Curaçao", "Cyprus", "Czech Republic", "Denmark", "Djibouti", "Dominica", "Dominican Republic", "Ecuador", "Egypt", "El Salvador", "Equatorial Guinea", "Eritrea", "Estonia", "Ethiopia", "Falkland Islands", "Faroe Islands", "Fiji", "Finland", "France", "French Guiana", "French Polynesia", "French Southern and Antarctic Lands", "Gabon", "The Gambia", "Georgia", "Germany", "Ghana", "Gibraltar", "Greece", "Greenland", "Grenada", "Guadeloupe", "Guam", "Guatemala", "Guernsey", "Guinea", "Guinea-Bissau", "Guyana", "Haiti", "Heard Island and McDonald Islands", "Honduras", "Hong Kong", "Hungary", "Iceland", "India", "Indonesia", "Ivory Coast", "Iran", "Iraq", "Republic of Ireland", "Isle of Man", "Israel", "Italy", "Jamaica", "Japan", "Jersey", "Jordan", "Kazakhstan", "Kenya", "Kiribati", "Kuwait", "Kyrgyzstan", "Laos", "Latvia", "Lebanon", "Lesotho", "Liberia", "Libya", "Liechtenstein", "Lithuania", "Luxembourg", "Macau", "Republic of Macedonia", "Madagascar", "Malawi", "Malaysia", "Maldives", "Mali", "Malta", "Marshall Islands", "Martinique", "Mauritania", "Mauritius", "Mayotte", "Mexico", "Federated States of Micronesia", "Moldova", "Monaco", "Mongolia", "Montenegro", "Montserrat", "Morocco", "Mozambique", "Myanmar", "Namibia", "Nauru", "Nepal", "Netherlands", "New Caledonia", "New Zealand", "Nicaragua", "Niger", "Nigeria", "Niue", "Norfolk Island", "North Korea", "Northern Mariana Islands", "Norway", "Oman", "Pakistan", "Palau", "Palestine", "Panama", "Papua New Guinea", "Paraguay", "Peru", "Philippines", "Pitcairn Islands", "Poland", "Portugal", "Puerto Rico", "Qatar", "Republic of Kosovo", "Réunion", "Romania", "Russia", "Rwanda", "Saint Barthélemy", "Saint Helena", "Saint Kitts and Nevis", "Saint Lucia", "Saint Martin", "Saint Pierre and Miquelon", "Saint Vincent and the Grenadines", "Samoa", "San Marino", "São Tomé and Príncipe", "Saudi Arabia", "Senegal", "Serbia", "Seychelles", "Sierra Leone", "Singapore", "Sint Maarten", "Slovakia", "Slovenia", "Solomon Islands", "Somalia", "South Africa", "South Georgia", "South Korea", "South Sudan", "Spain", "Sri Lanka", "Sudan", "Suriname", "Svalbard and Jan Mayen", "Swaziland", "Sweden", "Switzerland", "Syria", "Taiwan", "Tajikistan", "Tanzania", "Thailand", "East Timor", "Togo", "Tokelau", "Tonga", "Trinidad and Tobago", "Tunisia", "Turkey", "Turkmenistan", "Turks and Caicos Islands", "Tuvalu", "Uganda", "Ukraine", "United Arab Emirates", "United Kingdom", "United States", "Uruguay", "Uzbekistan", "Vanuatu", "Venezuela", "Vietnam", "Wallis and Futuna", "Western Sahara", "Yemen", "Zambia", "Zimbabwe"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_16_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 121L)
                .d("ID", "16777280")
                .d("AUTHOR_ID", "\"BxlKd688yYbbs3nR\"")
                .d("COUNTRY", "\"yKC0r6dbvnpS1rf\"")
                .d("CREATION_TIME", "\"2045-07-02 23:29:59\"")
                .d("TEXT", "\"W_ZYY\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "country=_EM_3171_XYZ_&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_17_getOnNewsReturnsEmptyList() throws Exception {
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=nyPt&" + 
                    "country=_EM_3710_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_18_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 34L)
                .d("ID", "800")
                .d("AUTHOR_ID", "\"2xqoU1e\"")
                .d("COUNTRY", "\"_EM_4156_XYZ_\"")
                .d("CREATION_TIME", "\"1959-11-20 11:13:26\"")
                .d("TEXT", "\"_EM_4157_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=_EM_4153_XYZ_&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_19_getOnNewsReturnsEmptyList() throws Exception {
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=_EM_4176_XYZ_&" + 
                    "country=08&" + 
                    "EMextraParam123=_EM_4177_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_20_getOnNewsReturnsEmptyList() throws Exception {
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "_EM_4200_XYZ_")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=_EM_4198_XYZ_&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_21_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 34L)
                .d("ID", "799")
                .d("AUTHOR_ID", "\"1xqgF2e\"")
                .d("COUNTRY", "\"N%oVhm1S\"")
                .d("CREATION_TIME", "\"1959-11-20 11:13:26\"")
                .d("TEXT", "\"tD8481Fz9M8\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=cyo&" + 
                    "country=_EM_4276_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_22_getOnNewsReturnsEmptyList() throws Exception {
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "_EM_4335_XYZ_")
                .get(baseUrlOfSut + "/news?" + 
                    "country=_EM_4334_XYZ_&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_23_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 34L)
                .d("ID", "2848")
                .d("AUTHOR_ID", "\"_EM_4379_XYZ_\"")
                .d("COUNTRY", "\"N5oFg]1S\"")
                .d("CREATION_TIME", "\"1900-03-20 14:43:27\"")
                .d("TEXT", "\"_EM_4380_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=2uoqH5n7t&" + 
                    "country=_EM_4377_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_24_getOnNewsReturnsEmptyList() throws Exception {
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/news?authorId=_EM_4898_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_25_getOnNewsReturnsEmptyList() throws Exception {
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=_EM_4958_XYZ_&" + 
                    "EMextraParam123=_EM_4959_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_26_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 207L)
                .d("ID", "898")
                .d("AUTHOR_ID", "\"HFnf8EMtw\"")
                .d("COUNTRY", "\"uGkOWBI4cI\"")
                .d("CREATION_TIME", "\"1930-05-21 16:14:29\"")
                .d("TEXT", "\"no\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=_EM_5252_XYZ_&" + 
                    "country=&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_27_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 237L)
                .d("ID", "0")
                .d("AUTHOR_ID", "\"gImpUJ2nfKrBaU\"")
                .d("COUNTRY", "\"3YKFUNa8gK\"")
                .d("CREATION_TIME", "\"2055-11-02 00:34:01\"")
                .d("TEXT", "\"KJNaai95Rkh\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=42&" + 
                    "country=_EM_5619_XYZ_&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_28_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 231L)
                .d("ID", "227")
                .d("AUTHOR_ID", "\"b\"")
                .d("COUNTRY", "\"UfUU3UsUUE5UrUlU\"")
                .d("CREATION_TIME", "\"2000-05-17 00:30:12\"")
                .d("TEXT", "\"_EM_5680_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=_EM_5502_XYZ_&" + 
                    "country=L")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_29_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 246L)
                .d("ID", "130")
                .d("AUTHOR_ID", "\"v4ovjQU3wj4\"")
                .d("COUNTRY", "\"8T1FK7fLUqvTg8\"")
                .d("CREATION_TIME", "\"1947-06-09 01:23:43\"")
                .d("TEXT", "\"m\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "country=_EM_5686_XYZ_&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_30_getOnNewsReturnsEmptyList() throws Exception {
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=_EM_5763_XYZ_&" + 
                    "country=_EM_5764_XYZ_&" + 
                    "EMextraParam123=_EM_5765_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_31_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 71L)
                .d("ID", "0")
                .d("AUTHOR_ID", "\"VUUYPOQUqz4ZkOF\"")
                .d("COUNTRY", "\"\"")
                .d("CREATION_TIME", "\"1976-11-25 12:54:11\"")
                .d("TEXT", "\"SB\"")
            .and().insertInto("NEWS_ENTITY", 55L)
                .d("ID", "793")
                .d("AUTHOR_ID", "\"\"")
                .d("COUNTRY", "\"Uzbekistan\"")
                .d("CREATION_TIME", "\"2077-08-26 00:13:44\"")
                .d("TEXT", "\"_EM_1641_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=_EM_6338_XYZ_&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_32_getOnNewsReturnsEmptyList() throws Exception {
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=_EM_6550_XYZ_&" + 
                    "EMextraParam123=_EM_6551_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_33_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 48L)
                .d("ID", "4194304")
                .d("AUTHOR_ID", "\"oD6wGZRLdARfsnMN2\"")
                .d("COUNTRY", "\"xtRZnveustjQf\"")
                .d("CREATION_TIME", "\"2068-07-24 14:21:59\"")
                .d("TEXT", "\"t\"")
            .and().insertInto("NEWS_ENTITY", 41L)
                .d("ID", "82")
                .d("AUTHOR_ID", "\"\"")
                .d("COUNTRY", "\"_EM_1387_XYZ_\"")
                .d("CREATION_TIME", "\"2000-09-28 02:59:01\"")
                .d("TEXT", "\"QTMy\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?country=_EM_6648_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_34_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 48L)
                .d("ID", "1")
                .d("AUTHOR_ID", "\"oD6wGZRLdARfsnMN2\"")
                .d("COUNTRY", "\"xtRZnveustjQf\"")
                .d("CREATION_TIME", "\"2068-03-28 14:53:59\"")
                .d("TEXT", "\"_EM_21228_XYZ_\"")
            .and().insertInto("NEWS_ENTITY", 41L)
                .d("ID", "86")
                .d("AUTHOR_ID", "\"\"")
                .d("COUNTRY", "\"_EM_1387_XYZ_\"")
                .d("CREATION_TIME", "\"2050-09-28 02:59:01\"")
                .d("TEXT", "\"_EM_1388_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=hR2llhin&" + 
                    "country=_EM_22092_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_35_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 48L)
                .d("ID", "0")
                .d("AUTHOR_ID", "\"UU7wGZRUdURfUnMNU\"")
                .d("COUNTRY", "\"xtRbnveustjQf\"")
                .d("CREATION_TIME", "\"2068-03-24 14:53:59\"")
                .d("TEXT", "\"_EM_6703_XYZ_\"")
            .and().insertInto("NEWS_ENTITY", 41L)
                .d("ID", "82")
                .d("AUTHOR_ID", "\"\"")
                .d("COUNTRY", "\"_EM_1387_XYZ_\"")
                .d("CREATION_TIME", "\"2050-09-28 02:59:01\"")
                .d("TEXT", "\"9zESC9rUaNYFW\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=ivOap2oKC9z&" + 
                    "country=_EM_6702_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_36_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 48L)
                .d("ID", "2")
                .d("AUTHOR_ID", "\"oD6wGZRLdARfsnMN2\"")
                .d("COUNTRY", "\"_EM_6992_XYZ_\"")
                .d("CREATION_TIME", "\"2068-03-24 11:29:29\"")
                .d("TEXT", "\"_EM_13377_XYZ_\"")
            .and().insertInto("NEWS_ENTITY", 41L)
                .d("ID", "82")
                .d("AUTHOR_ID", "\"\"")
                .d("COUNTRY", "\"_EM_1387_XYZ_\"")
                .d("CREATION_TIME", "\"1922-09-28 04:55:04\"")
                .d("TEXT", "\"sKkHzQwnUS3cB\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?country=_EM_6991_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_37_getOnNewsReturnsEmptyList() throws Exception {
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=_EM_7397_XYZ_&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_38_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 324L)
                .d("ID", "0")
                .d("AUTHOR_ID", "\"FXWC\u008AjohHGU55k\"")
                .d("COUNTRY", "\"w_jwypszImad\"")
                .d("CREATION_TIME", "\"2000-03-24 22:36:44\"")
                .d("TEXT", "\"j_idfb6ujDYrjU\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/news?" + 
                    "country=_EM_7403_XYZ_&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_39_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 325L)
                .d("ID", "187")
                .d("AUTHOR_ID", "\"0R9Q0O_PNjDYCd\"")
                .d("COUNTRY", "\"Kx8Vjy3wF75\"")
                .d("CREATION_TIME", "\"1919-03-30 03:32:07\"")
                .d("TEXT", "\"Gg1O6gbzMB\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=dN_F6Dp&" + 
                    "country=_EM_7414_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_40_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 330L)
                .d("ID", "0")
                .d("AUTHOR_ID", "\"_EM_7463_XYZ_\"")
                .d("COUNTRY", "\"_EM_7464_XYZ_\"")
                .d("CREATION_TIME", "\"1931-06-28 11:29:29\"")
                .d("TEXT", "\"UiwFgl\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=_EM_7462_XYZ_&" + 
                    "country=_EM_7461_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_41_getOnNewsReturnsEmptyList() throws Exception {
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=_EM_7590_XYZ_&" + 
                    "country=_EM_7591_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_42_getOnNewsReturnsEmptyList() throws Exception {
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "_EM_7595_XYZ_")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=U1kr7bx1nOnTxSRF&" + 
                    "country=_EM_7594_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_43_getOnNewsReturnsEmptyList() throws Exception {
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=_EM_7609_XYZ_&" + 
                    "country=_EM_7610_XYZ_&" + 
                    "EMextraParam123=_EM_7611_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_44_getOnNewsReturnsEmptyList() throws Exception {
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=XyVKS&" + 
                    "country=_EM_7849_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_45_getOnNewsReturnsEmptyList() throws Exception {
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?country=_EM_8021_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_46_getOnNewsReturnsEmptyList() throws Exception {
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=_EM_9513_XYZ_&" + 
                    "country=_EM_9514_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_47_getOnNewsReturnsEmptyList() throws Exception {
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?country=_EM_9521_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_48_getOnNewsReturnsEmptyList() throws Exception {
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?authorId=_EM_9658_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_49_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 67L)
                .d("ID", "4096")
                .d("AUTHOR_ID", "\"44UULU\"")
                .d("COUNTRY", "\"szHGej72\"")
                .d("CREATION_TIME", "\"2057-08-07 15:48:51\"")
                .d("TEXT", "\"o8\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=_EM_10167_XYZ_&" + 
                    "country=sfJgvZyjD_hCm")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_50_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 67L)
                .d("ID", "-262144")
                .d("AUTHOR_ID", "\"4UaULf\"")
                .d("COUNTRY", "\"szHGej72\"")
                .d("CREATION_TIME", "\"2057-08-07 23:16:19\"")
                .d("TEXT", "\"_EM_10319_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?country=_EM_10317_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_51_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 67L)
                .d("ID", "0")
                .d("AUTHOR_ID", "\"44aMLf\"")
                .d("COUNTRY", "\"uzHGej72\"")
                .d("CREATION_TIME", "\"2057-08-07 13:48:50\"")
                .d("TEXT", "\"_EM_10510_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=_EM_10508_XYZ_&" + 
                    "country=q")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_52_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 67L)
                .d("ID", "0")
                .d("AUTHOR_ID", "\"44aMLf\"")
                .d("COUNTRY", "\"szHGej72\"")
                .d("CREATION_TIME", "\"2057-08-07 15:48:51\"")
                .d("TEXT", "\"UU\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=xFD07ZbJPcxSs&" + 
                    "country=_EM_10521_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_53_getOnNewsReturnsEmptyList() throws Exception {
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?country=_EM_11455_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_54_getOnNewsReturnsEmptyList() throws Exception {
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?authorId=_EM_11611_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_55_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 67L)
                .d("ID", "-16384")
                .d("AUTHOR_ID", "\"_EM_11110_XYZ_\"")
                .d("COUNTRY", "\"szHHej7:\"")
                .d("CREATION_TIME", "\"2057-08-07 15:48:51\"")
                .d("TEXT", "\"jU\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=_EM_12081_XYZ_&" + 
                    "country=_EM_12082_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_56_getOnNewsReturnsEmptyList() throws Exception {
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=_EM_13796_XYZ_&" + 
                    "country=5GjmIBFF4uowLza")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_57_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 48L)
                .d("ID", "2097152")
                .d("AUTHOR_ID", "\"oD6wGZRLdARfsnMN\"")
                .d("COUNTRY", "\"_EM_14174_XYZ_\"")
                .d("CREATION_TIME", "\"2068-03-28 14:53:59\"")
                .d("TEXT", "\"_EM_14175_XYZ_\"")
            .and().insertInto("NEWS_ENTITY", 41L)
                .d("ID", "42")
                .d("AUTHOR_ID", "\"\"")
                .d("COUNTRY", "\"_EM_1387_XYZ_\"")
                .d("CREATION_TIME", "\"2050-09-28 02:59:01\"")
                .d("TEXT", "\"_EM_13968_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=_EM_13966_XYZ_&" + 
                    "country=lSA8qL0hK0GUJWU")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_58_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 48L)
                .d("ID", "0")
                .d("AUTHOR_ID", "\"oD6wGZRLdARfsnMN2\"")
                .d("COUNTRY", "\"xtRZnveustjQf\"")
                .d("CREATION_TIME", "\"2068-03-28 14:53:59\"")
                .d("TEXT", "\"s\"")
            .and().insertInto("NEWS_ENTITY", 41L)
                .d("ID", "82")
                .d("AUTHOR_ID", "\"\"")
                .d("COUNTRY", "\"_EM_1387_XYZ_\"")
                .d("CREATION_TIME", "\"2000-09-28 02:59:01\"")
                .d("TEXT", "\"G\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?authorId=_EM_17186_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_59_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 48L)
                .d("ID", "-131072")
                .d("AUTHOR_ID", "\"oD6wGZRLdARfsnMN2\"")
                .d("COUNTRY", "\"xtRZnveustjQf\"")
                .d("CREATION_TIME", "\"2072-04-28 14:53:59\"")
                .d("TEXT", "\"\"")
            .and().insertInto("NEWS_ENTITY", 41L)
                .d("ID", "82")
                .d("AUTHOR_ID", "\"\"")
                .d("COUNTRY", "\"_EM_1387_XYZ_\"")
                .d("CREATION_TIME", "\"2050-09-28 02:59:29\"")
                .d("TEXT", "\"_EM_14147_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?authorId=_EM_14146_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_60_getOnNewsReturnsEmptyList() throws Exception {
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?authorId=_EM_17007_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_61_getOnNewsReturnsEmptyList() throws Exception {
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=UV&" + 
                    "country=_EM_17029_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_62_getOnNewsReturnsEmptyList() throws Exception {
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?country=_EM_17973_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_63_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 1047L)
                .d("ID", "771")
                .d("AUTHOR_ID", "\"VOulsfJ5f3L\"")
                .d("COUNTRY", "\"\"")
                .d("CREATION_TIME", "\"2065-10-31 13:18:21\"")
                .d("TEXT", "\"J7C5bokf1Tzxb\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=_EM_18366_XYZ_&" + 
                    "country=uUvtDOKFNyZOA0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_64_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 48L)
                .d("ID", "0")
                .d("AUTHOR_ID", "\"oD6wGZRLdARfsnMN2\"")
                .d("COUNTRY", "\"\"")
                .d("CREATION_TIME", "\"2068-01-28 14:53:59\"")
                .d("TEXT", "\"\"")
            .and().insertInto("NEWS_ENTITY", 41L)
                .d("ID", "82")
                .d("AUTHOR_ID", "\"\"")
                .d("COUNTRY", "\"_EM_1387_XYZ_\"")
                .d("CREATION_TIME", "\"2050-09-28 02:59:01\"")
                .d("TEXT", "\"_EM_1388_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?authorId=_EM_18622_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_65_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 1099L)
                .d("ID", "4566")
                .d("AUTHOR_ID", "\"p1\"")
                .d("COUNTRY", "\"kLoTPRHQzJO\"")
                .d("CREATION_TIME", "\"1924-11-09 11:18:15\"")
                .d("TEXT", "\"VFFLKzUK\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=_EM_19051_XYZ_&" + 
                    "country=RjEU2vBKK")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_66_getOnNewsReturnsEmptyList() throws Exception {
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?authorId=_EM_19061_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_67_getOnNewsReturnsEmptyList() throws Exception {
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=B8KXyllokEUMuz&" + 
                    "country=_EM_20352_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_68_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 1208L)
                .d("ID", "999")
                .d("AUTHOR_ID", "\"0v_9hngXf_ehk9j\"")
                .d("COUNTRY", "\"dU3g\"")
                .d("CREATION_TIME", "\"1919-01-15 14:13:59\"")
                .d("TEXT", "\"z2\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?authorId=_EM_20559_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_69_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 1211L)
                .d("ID", "104")
                .d("AUTHOR_ID", "\"TqVJ_mswn\"")
                .d("COUNTRY", "\"dIt81yiy6_\"")
                .d("CREATION_TIME", "\"2094-05-31 21:17:08\"")
                .d("TEXT", "\"sLPja\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?country=_EM_20597_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_70_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 1253L)
                .d("ID", "707")
                .d("AUTHOR_ID", "\"ZfDJeKB_Vp\"")
                .d("COUNTRY", "\"mGZNRWSvSxseK\"")
                .d("CREATION_TIME", "\"1911-08-11 07:51:08\"")
                .d("TEXT", "\"gfv4kMoLyJ\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?country=_EM_21179_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_71_getOnNewsReturnsEmptyList() throws Exception {
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?authorId=_EM_21291_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_72_getOnNewsReturnsEmptyList() throws Exception {
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=_EM_21918_XYZ_&" + 
                    "country=")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_73_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 48L)
                .d("ID", "129")
                .d("AUTHOR_ID", "\"oD6wGZRLdARfsnMN2\"")
                .d("COUNTRY", "\"UtVZUvUurtjQU\"")
                .d("CREATION_TIME", "\"2068-03-28 14:53:59\"")
                .d("TEXT", "\"6KfTpeSeFQ\"")
            .and().insertInto("NEWS_ENTITY", 41L)
                .d("ID", "82")
                .d("AUTHOR_ID", "\"\"")
                .d("COUNTRY", "\"_EM_1387_XYZ_\"")
                .d("CREATION_TIME", "\"1978-01-28 02:59:01\"")
                .d("TEXT", "\"V\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?country=_EM_23286_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_74_getOnNewsReturnsEmptyList() throws Exception {
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?country=_EM_23476_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_75_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 48L)
                .d("ID", "129")
                .d("AUTHOR_ID", "\"oD6wGZRLdARfsnMN2\"")
                .d("COUNTRY", "\"VtVZUveurtjQU\"")
                .d("CREATION_TIME", "\"2068-03-28 14:53:59\"")
                .d("TEXT", "\"_EM_21228_XYZ_A\"")
            .and().insertInto("NEWS_ENTITY", 41L)
                .d("ID", "82")
                .d("AUTHOR_ID", "\"\"")
                .d("COUNTRY", "\"_EM_1387_XYZ_\"")
                .d("CREATION_TIME", "\"1986-01-28 02:59:01\"")
                .d("TEXT", "\"V\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?country=_EM_23286_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_76_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 48L)
                .d("ID", "129")
                .d("AUTHOR_ID", "\"oD6wGZRLdARfsnNN2\"")
                .d("COUNTRY", "\"YUVZUveUrtjQU\"")
                .d("CREATION_TIME", "\"2068-03-28 14:53:59\"")
                .d("TEXT", "\"_EM_21228_XYZ_\"")
            .and().insertInto("NEWS_ENTITY", 41L)
                .d("ID", "82")
                .d("AUTHOR_ID", "\"\"")
                .d("COUNTRY", "\"_EM_1387_XYZ_\"")
                .d("CREATION_TIME", "\"1986-01-28 02:59:01\"")
                .d("TEXT", "\"V\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=hR2llhin&" + 
                    "country=_EM_23286_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_77_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 48L)
                .d("ID", "129")
                .d("AUTHOR_ID", "\"oD6wGZRLdARfsnMN2\"")
                .d("COUNTRY", "\"UtVZUveurxjQU\"")
                .d("CREATION_TIME", "\"2068-03-28 14:53:59\"")
                .d("TEXT", "\"_EM_24495_XYZ_\"")
            .and().insertInto("NEWS_ENTITY", 41L)
                .d("ID", "82")
                .d("AUTHOR_ID", "\"\"")
                .d("COUNTRY", "\"_EM_1387_XYZ_\"")
                .d("CREATION_TIME", "\"1986-09-28 02:59:01\"")
                .d("TEXT", "\"W\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?country=_EM_23286_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_78_getOnNewsReturnsEmptyList() throws Exception {
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=_EM_24610_XYZ_&" + 
                    "country=yG02j")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_79_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 48L)
                .d("ID", "129")
                .d("AUTHOR_ID", "\"oD6UGZRLdARfsnMN2\"")
                .d("COUNTRY", "\"UtWZUreurtkQUf\"")
                .d("CREATION_TIME", "\"2000-03-16 11:53:59\"")
                .d("TEXT", "\"pNtLr6LEuBRAPc4\"")
            .and().insertInto("NEWS_ENTITY", 41L)
                .d("ID", "86")
                .d("AUTHOR_ID", "\"\"")
                .d("COUNTRY", "\"_EM_1387_XYZ_\"")
                .d("CREATION_TIME", "\"1900-05-27 06:51:01\"")
                .d("TEXT", "\"j\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=R9wDsqIQLv&" + 
                    "country=_EM_26097_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_80_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 48L)
                .d("ID", "129")
                .d("AUTHOR_ID", "\"oD6wGZRLdARfsnMN2\"")
                .d("COUNTRY", "\"UtVZUveurtjQS\"")
                .d("CREATION_TIME", "\"2000-03-16 11:53:59\"")
                .d("TEXT", "\"pNtLr6LEuBRATc4\"")
            .and().insertInto("NEWS_ENTITY", 41L)
                .d("ID", "86")
                .d("AUTHOR_ID", "\"\"")
                .d("COUNTRY", "\"_EM_1387_XYZ_\"")
                .d("CREATION_TIME", "\"1986-01-28 02:51:01\"")
                .d("TEXT", "\"_EM_26424_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=_EM_26428_XYZ_&" + 
                    "country=_EM_26097_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_81_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 48L)
                .d("ID", "129")
                .d("AUTHOR_ID", "\"oD6yUZRLdAUfsnQNU\"")
                .d("COUNTRY", "\"UtVZUveurtjQU\"")
                .d("CREATION_TIME", "\"2000-03-16 11:29:59\"")
                .d("TEXT", "\"_EM_21228_XYZ_\"")
            .and().insertInto("NEWS_ENTITY", 41L)
                .d("ID", "86")
                .d("AUTHOR_ID", "\"\"")
                .d("COUNTRY", "\"_EM_1387_XYZ_\"")
                .d("CREATION_TIME", "\"2022-01-28 02:51:01\"")
                .d("TEXT", "\"V\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=_EM_26863_XYZ_&" + 
                    "country=ukc27Ive")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_82_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 48L)
                .d("ID", "385")
                .d("AUTHOR_ID", "\"_EM_27235_XYZ_\"")
                .d("COUNTRY", "\"UtVZUveuvtjQU\"")
                .d("CREATION_TIME", "\"2000-03-16 11:53:59\"")
                .d("TEXT", "\"ubIF0UPf7\"")
            .and().insertInto("NEWS_ENTITY", 41L)
                .d("ID", "96")
                .d("AUTHOR_ID", "\"\"")
                .d("COUNTRY", "\"_EM_1387_XYZ_\"")
                .d("CREATION_TIME", "\"1986-01-28 02:51:01\"")
                .d("TEXT", "\"X\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=ILt2jw9zvalkd&" + 
                    "country=_EM_27006_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_83_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 48L)
                .d("ID", "129")
                .d("AUTHOR_ID", "\"oD6wCZRLUAUfUnMN2\"")
                .d("COUNTRY", "\"UtVZQveurthQU\"")
                .d("CREATION_TIME", "\"2000-03-16 11:53:59\"")
                .d("TEXT", "\"ubIF0UPf7\"")
            .and().insertInto("NEWS_ENTITY", 41L)
                .d("ID", "86")
                .d("AUTHOR_ID", "\"\"")
                .d("COUNTRY", "\"_EM_1387_XYZ_\"")
                .d("CREATION_TIME", "\"1986-01-28 02:51:01\"")
                .d("TEXT", "\"V\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=ILt2jw9zvalkd&" + 
                    "country=_EM_27006_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_84_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 48L)
                .d("ID", "129")
                .d("AUTHOR_ID", "\"_EM_27235_XYZ_\"")
                .d("COUNTRY", "\"UtVZUveurtiQU\"")
                .d("CREATION_TIME", "\"1998-03-16 11:59:59\"")
                .d("TEXT", "\"ubIF0UPf8\"")
            .and().insertInto("NEWS_ENTITY", 41L)
                .d("ID", "96")
                .d("AUTHOR_ID", "\"\"")
                .d("COUNTRY", "\"_EM_1387_XYZ_\"")
                .d("CREATION_TIME", "\"1986-01-28 02:51:01\"")
                .d("TEXT", "\"X\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=ILt2jw9zvalkd&" + 
                    "country=_EM_27006_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_85_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 48L)
                .d("ID", "129")
                .d("AUTHOR_ID", "\"_EM_27235_XYZ_\"")
                .d("COUNTRY", "\"UtVZUveurtjQ\"")
                .d("CREATION_TIME", "\"2000-03-31 11:53:59\"")
                .d("TEXT", "\"ubIF0UPf7\"")
            .and().insertInto("NEWS_ENTITY", 41L)
                .d("ID", "96")
                .d("AUTHOR_ID", "\"\"")
                .d("COUNTRY", "\"_EM_1387_XYZ_\"")
                .d("CREATION_TIME", "\"1986-01-28 02:51:01\"")
                .d("TEXT", "\"X\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=ILt2jw9zvalkd&" + 
                    "country=_EM_27006_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_86_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 48L)
                .d("ID", "131")
                .d("AUTHOR_ID", "\"ILt2jw9zvalkd\"")
                .d("COUNTRY", "\"UUUZUreuUtjQX\"")
                .d("CREATION_TIME", "\"2000-03-16 11:54:59\"")
                .d("TEXT", "\"_EM_27332_XYZ_\"")
            .and().insertInto("NEWS_ENTITY", 41L)
                .d("ID", "96")
                .d("AUTHOR_ID", "\"\"")
                .d("COUNTRY", "\"_EM_1387_XYZ_\"")
                .d("CREATION_TIME", "\"1986-01-28 02:51:01\"")
                .d("TEXT", "\"\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?country=_EM_27006_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_87_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 48L)
                .d("ID", "0")
                .d("AUTHOR_ID", "\"_EM_27235_XYZ_\"")
                .d("COUNTRY", "\"UUU\\UreurvjQT\"")
                .d("CREATION_TIME", "\"2000-03-16 11:53:59\"")
                .d("TEXT", "\"ubIG0UPU3\"")
            .and().insertInto("NEWS_ENTITY", 41L)
                .d("ID", "96")
                .d("AUTHOR_ID", "\"\"")
                .d("COUNTRY", "\"_EM_1387_XYZ_\"")
                .d("CREATION_TIME", "\"1922-01-28 06:43:01\"")
                .d("TEXT", "\"X\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=ILt2jw9zvalkd&" + 
                    "country=_EM_27006_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_88_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 48L)
                .d("ID", "129")
                .d("AUTHOR_ID", "\"djVN81tqqD6Z40qp\"")
                .d("COUNTRY", "\"UzUZUreuUrjQ\"")
                .d("CREATION_TIME", "\"2000-03-16 00:45:57\"")
                .d("TEXT", "\"ubIF0UPf7\"")
            .and().insertInto("NEWS_ENTITY", 41L)
                .d("ID", "96")
                .d("AUTHOR_ID", "\"\"")
                .d("COUNTRY", "\"_EM_1387_XYZ_\"")
                .d("CREATION_TIME", "\"1986-01-28 02:51:01\"")
                .d("TEXT", "\"_EM_27702_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?country=_EM_27006_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_89_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 48L)
                .d("ID", "129")
                .d("AUTHOR_ID", "\"djVN81tqqD6Z40rp\"")
                .d("COUNTRY", "\"UzUZUreurtjQTW\"")
                .d("CREATION_TIME", "\"2000-03-16 11:53:59\"")
                .d("TEXT", "\"ubIF0UPf\"")
            .and().insertInto("NEWS_ENTITY", 41L)
                .d("ID", "96")
                .d("AUTHOR_ID", "\"\"")
                .d("COUNTRY", "\"_EM_1387_XYZ_\"")
                .d("CREATION_TIME", "\"1986-01-28 02:51:01\"")
                .d("TEXT", "\"X\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=_EM_27482_XYZ_&" + 
                    "country=_EM_27006_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_90_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 48L)
                .d("ID", "129")
                .d("AUTHOR_ID", "\"djVN81tqqD6Z40qp\"")
                .d("COUNTRY", "\"UzUZUreurtjQR\"")
                .d("CREATION_TIME", "\"1992-02-18 23:53:57\"")
                .d("TEXT", "\"ubIF0UPf7\"")
            .and().insertInto("NEWS_ENTITY", 41L)
                .d("ID", "96")
                .d("AUTHOR_ID", "\"\"")
                .d("COUNTRY", "\"_EM_1387_XYZ_\"")
                .d("CREATION_TIME", "\"1986-01-28 02:51:01\"")
                .d("TEXT", "\"X\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=ILt2jw9zvalkd&" + 
                    "country=_EM_27006_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_91_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 48L)
                .d("ID", "97")
                .d("AUTHOR_ID", "\"djVN81tqqD6Z40qp\"")
                .d("COUNTRY", "\"Uz[]TrUupUjUTU\"")
                .d("CREATION_TIME", "\"2000-07-16 19:49:59\"")
                .d("TEXT", "\"ubIF0QPb\"")
            .and().insertInto("NEWS_ENTITY", 41L)
                .d("ID", "96")
                .d("AUTHOR_ID", "\"\"")
                .d("COUNTRY", "\"_EM_1387_XYZ_\"")
                .d("CREATION_TIME", "\"1922-02-28 02:51:01\"")
                .d("TEXT", "\"_EM_28754_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=IPt2jw9zvalkd&" + 
                    "country=_EM_27006_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_92_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 48L)
                .d("ID", "97")
                .d("AUTHOR_ID", "\"djVN81tqqD6Z40qp\"")
                .d("COUNTRY", "\"UzZ]TrVurQjUUU\"")
                .d("CREATION_TIME", "\"2000-03-15 19:49:59\"")
                .d("TEXT", "\"ubIF0UPb\"")
            .and().insertInto("NEWS_ENTITY", 41L)
                .d("ID", "96")
                .d("AUTHOR_ID", "\"\"")
                .d("COUNTRY", "\"_EM_1387_XYZ_\"")
                .d("CREATION_TIME", "\"1918-02-28 02:59:01\"")
                .d("TEXT", "\"X\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=IPt2jw9zvalkd&" + 
                    "country=_EM_27006_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_93_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 48L)
                .d("ID", "0")
                .d("AUTHOR_ID", "\"djVN81tqqD6Z40qp\"")
                .d("COUNTRY", "\"TzW[TrUusUjUTs\"")
                .d("CREATION_TIME", "\"2000-05-20 11:53:59\"")
                .d("TEXT", "\"ubIE0UPb\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=IPt2jw9xvalkb&" + 
                    "country=_EM_27006_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_94_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 48L)
                .d("ID", "97")
                .d("AUTHOR_ID", "\"djVN81tqqD6Z40qp\"")
                .d("COUNTRY", "\"TzW[TrUurUjQTsG\"")
                .d("CREATION_TIME", "\"2000-03-12 11:53:59\"")
                .d("TEXT", "\"ubIF0UPb\"")
            .and().insertInto("NEWS_ENTITY", 41L)
                .d("ID", "96")
                .d("AUTHOR_ID", "\"\"")
                .d("COUNTRY", "\"_EM_1387_XYZ_\"")
                .d("CREATION_TIME", "\"1922-02-28 02:51:01\"")
                .d("TEXT", "\"X\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=IPt2jw9zvalkd&" + 
                    "country=_EM_27006_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_95_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 48L)
                .d("ID", "98")
                .d("AUTHOR_ID", "\"ILt2jw9zvalkd\"")
                .d("COUNTRY", "\"Uz[]TrUurUjUU\"")
                .d("CREATION_TIME", "\"2000-03-16 19:49:59\"")
                .d("TEXT", "\"ubIF0UPb\"")
            .and().insertInto("NEWS_ENTITY", 41L)
                .d("ID", "96")
                .d("AUTHOR_ID", "\"\"")
                .d("COUNTRY", "\"_EM_1387_XYZ_\"")
                .d("CREATION_TIME", "\"1922-02-28 02:51:01\"")
                .d("TEXT", "\"X\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=IPt2jw9zvalkd&" + 
                    "country=_EM_27006_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_96_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 48L)
                .d("ID", "97")
                .d("AUTHOR_ID", "\"djVN81tqqD6Z40qp\"")
                .d("COUNTRY", "\"Uz[]TrUurUjUUUC\"")
                .d("CREATION_TIME", "\"2000-03-16 19:49:59\"")
                .d("TEXT", "\"ubIF0UPb\"")
            .and().insertInto("NEWS_ENTITY", 41L)
                .d("ID", "96")
                .d("AUTHOR_ID", "\"\"")
                .d("COUNTRY", "\"_EM_1387_XYZ_\"")
                .d("CREATION_TIME", "\"1922-02-28 02:51:01\"")
                .d("TEXT", "\"X\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=IPt2jw9zvalkd&" + 
                    "country=_EM_27006_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_97_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 48L)
                .d("ID", "97")
                .d("AUTHOR_ID", "\"djVN81tqqD6Z40qp\"")
                .d("COUNTRY", "\"Uz[]TrSurYjUUU\"")
                .d("CREATION_TIME", "\"2000-03-16 19:49:59\"")
                .d("TEXT", "\"ubIF0UPf\"")
            .and().insertInto("NEWS_ENTITY", 41L)
                .d("ID", "96")
                .d("AUTHOR_ID", "\"\"")
                .d("COUNTRY", "\"_EM_1387_XYZ_\"")
                .d("CREATION_TIME", "\"1922-02-28 02:51:01\"")
                .d("TEXT", "\"X\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=IPt2jw9zvalkd&" + 
                    "country=_EM_27006_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_98_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 48L)
                .d("ID", "97")
                .d("AUTHOR_ID", "\"djVN81tqqD6Z40qp\"")
                .d("COUNTRY", "\"UzW[TrUurYjQTs\"")
                .d("CREATION_TIME", "\"2000-03-16 11:53:59\"")
                .d("TEXT", "\"ubIF0UPb\"")
            .and().insertInto("NEWS_ENTITY", 41L)
                .d("ID", "96")
                .d("AUTHOR_ID", "\"\"")
                .d("COUNTRY", "\"_EM_1387_XYZ_\"")
                .d("CREATION_TIME", "\"1922-02-28 02:51:01\"")
                .d("TEXT", "\"X\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=IPt2jw9zvalkd&" + 
                    "country=_EM_27006_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_99_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 48L)
                .d("ID", "97")
                .d("AUTHOR_ID", "\"djVN81tqqD6Z40qp\"")
                .d("COUNTRY", "\"UzW[TrUurUjQTsk\"")
                .d("CREATION_TIME", "\"2000-03-16 11:53:59\"")
                .d("TEXT", "\"ubIF0UPb\"")
            .and().insertInto("NEWS_ENTITY", 41L)
                .d("ID", "94")
                .d("AUTHOR_ID", "\"\"")
                .d("COUNTRY", "\"_EM_1387_XYZ_\"")
                .d("CREATION_TIME", "\"1922-02-28 02:51:01\"")
                .d("TEXT", "\"X\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=IPt2jw9zvalkd&" + 
                    "country=_EM_27006_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_100_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 48L)
                .d("ID", "609")
                .d("AUTHOR_ID", "\"djVN81tqqD6Z40qp\"")
                .d("COUNTRY", "\"UzW[TrUurUVQTs\"")
                .d("CREATION_TIME", "\"2000-03-16 11:53:59\"")
                .d("TEXT", "\"sbIF0URb\"")
            .and().insertInto("NEWS_ENTITY", 41L)
                .d("ID", "96")
                .d("AUTHOR_ID", "\"\"")
                .d("COUNTRY", "\"_EM_1387_XYZ_\"")
                .d("CREATION_TIME", "\"2000-02-28 11:29:01\"")
                .d("TEXT", "\"_EM_28783_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=xNeUNZtt0W&" + 
                    "country=_EM_28894_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news
    */
    @Test(timeout = 60000)
    public void test_101_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 48L)
                .d("ID", "97")
                .d("AUTHOR_ID", "\"djVN81tqqD6Z40qpb\"")
                .d("COUNTRY", "\"UzW[TrUurUjQTs\"")
                .d("CREATION_TIME", "\"2000-03-16 11:53:59\"")
                .d("TEXT", "\"tbIF0UPb\"")
            .and().insertInto("NEWS_ENTITY", 41L)
                .d("ID", "96")
                .d("AUTHOR_ID", "\"\"")
                .d("COUNTRY", "\"_EM_1387_XYZ_\"")
                .d("CREATION_TIME", "\"1922-02-28 02:51:01\"")
                .d("TEXT", "\"X\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?authorId=_EM_31755_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news/{id}
    */
    @Test(timeout = 60000)
    public void test_102_getOnNewWithQueryParamsReturnsObject() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 942L)
                .d("ID", "978")
                .d("AUTHOR_ID", "\"IDGCWw1R\"")
                .d("COUNTRY", "\"Oman\"")
                .d("CREATION_TIME", "\"1904-01-10 13:19:01\"")
                .d("TEXT", "\"_EM_17316_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news/978?" + 
                    "country=twiAx&" + 
                    "authorId=EVrTHhB")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("'newsId'", containsString("978"))
                .body("'authorId'", containsString("IDGCWw1R"))
                .body("'text'", containsString("_EM_17316_XYZ_"))
                .body("'country'", containsString("Oman"))
                .body("'creationTime'", containsString("1904-01-10T13:19:01-04:16:48"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/news/{id}
    */
    @Test(timeout = 60000)
    public void test_103_getOnNewReturnsObject() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 436L)
                .d("ID", "323")
                .d("AUTHOR_ID", "\"_EM_10161_XYZ_\"")
                .d("COUNTRY", "\"_EM_10162_XYZ_\"")
                .d("CREATION_TIME", "\"1907-11-03 04:27:16\"")
                .d("TEXT", "\"_EM_10163_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news/323")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("'newsId'", containsString("323"))
                .body("'authorId'", containsString("_EM_10161_XYZ_"))
                .body("'text'", containsString("_EM_10163_XYZ_"))
                .body("'country'", containsString("_EM_10162_XYZ_"))
                .body("'creationTime'", containsString("1907-11-03T04:27:16-04:16:48"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/v2/api-docs
    */
    @Test(timeout = 60000)
    public void test_104_getOnApi_docsReturnsObject() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/v2/api-docs")
                .then()
                .statusCode(200);
    }
    
    
    /**
    * Calls:
    * (204) DELETE:/news/{id}
    */
    @Test(timeout = 60000)
    public void test_105_deleteOnNewReturns204() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 197L)
                .d("ID", "207")
                .d("AUTHOR_ID", "\"bZ\"")
                .d("COUNTRY", "\"tmghV_Sv\"")
                .d("CREATION_TIME", "\"2069-05-28 20:24:02\"")
                .d("TEXT", "\"p5Gd15ZOt1Z\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(baseUrlOfSut + "/news/207")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (204) DELETE:/news/{id}
    */
    @Test(timeout = 60000)
    public void test_106_deleteOnNewReturns204() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 102L)
                .d("ID", "37")
                .d("AUTHOR_ID", "\"9k\"")
                .d("COUNTRY", "\"rOAH9IvKbT\"")
                .d("CREATION_TIME", "\"2059-06-20 04:01:59\"")
                .d("TEXT", "\"\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/news/37?" + 
                    "EMextraParam123=42&" + 
                    "country=rOAH9IvKbT")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (204) DELETE:/news/{id}
    */
    @Test(timeout = 60000)
    public void test_107_deleteOnNewReturns204() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 150L)
                .d("ID", "75")
                .d("AUTHOR_ID", "\"YhAEnjy6QmRfx\"")
                .d("COUNTRY", "\"g\"")
                .d("CREATION_TIME", "\"2027-01-31 16:27:34\"")
                .d("TEXT", "\"PO\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(baseUrlOfSut + "/news/75?" + 
                    "country=g&" + 
                    "authorId=YhAEnjy6QmRfx")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (204) PUT:/news/{id}/text
    */
    @Test(timeout = 60000)
    public void test_108_putOnTextReturns204() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 287L)
                .d("ID", "897")
                .d("AUTHOR_ID", "\"q_1j_KAQqSAx\"")
                .d("COUNTRY", "\"Uruguay\"")
                .d("CREATION_TIME", "\"1964-04-02 05:43:33\"")
                .d("TEXT", "\"IUHeFFM_I0rr\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("text/plain")
                .body("q_1j_KAQqSAx")
                .put(baseUrlOfSut + "/news/897/text?EMextraParam123=_EM_6765_XYZ_")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (204) PUT:/news/{id}/text
    */
    @Test(timeout = 60000)
    public void test_109_putOnNewTextReturns204() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 30L)
                .d("ID", "-2096339")
                .d("AUTHOR_ID", "\"F9ah_303lF\"")
                .d("COUNTRY", "\"Tonga\"")
                .d("CREATION_TIME", "\"2090-10-08 03:16:12\"")
                .d("TEXT", "\"Ee0dmmLUQ\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("text/plain")
                .body("703")
                .put(baseUrlOfSut + "/news/-2096339/text")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (204) PUT:/news/{id}/text
    */
    @Test(timeout = 60000)
    public void test_110_putOnTextReturns204() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 341L)
                .d("ID", "329")
                .d("AUTHOR_ID", "\"PJUOVx\"")
                .d("COUNTRY", "\"North Korea\"")
                .d("CREATION_TIME", "\"1909-08-31 17:37:56\"")
                .d("TEXT", "\"_EM_7678_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("text/plain")
                .body("_EM_7679_XYZ_")
                .put(baseUrlOfSut + "/news/329/text?country=E9EDjpIXI8QLd8")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (204) PUT:/news/{id}/text
    */
    @Test(timeout = 60000)
    public void test_111_putOnNewTextWithQueryParamsReturns204() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 341L)
                .d("ID", "329")
                .d("AUTHOR_ID", "\"7Aaaxu6bc6B\"")
                .d("COUNTRY", "\"North Korea\"")
                .d("CREATION_TIME", "\"1900-08-31 17:37:56\"")
                .d("TEXT", "\"E6kD_JQOz3B\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("text/plain")
                .body("_EM_7679_XYZ_")
                .put(baseUrlOfSut + "/news/329/text?" + 
                    "EMextraParam123=42&" + 
                    "country=dnBLOa&" + 
                    "authorId=7Aaaxu6bc6B")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
    }


}
