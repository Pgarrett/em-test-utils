/**
* LICENSE DISCLAIMER
* This file has been generated by EvoMaster.
* The content of this file is not subject to the license of EvoMaster itself, i.e., LGPL.
* This generated software (i.e., the test suite in this file) can be freely used, modified, 
* and distributed as you see fit without any restrictions.
*/
import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.Arrays;
import  dto.*;
import  java.util.ArrayList;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-10-05T18:53:10.928-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 117 tests
 * <br>
*  Covered targets: 1156
 * <br>
*  Used time: 0h 10m 1s
 * <br>
*  Needed budget for current results: 88%
 * <br>
*  This file contains test cases that represent successful calls.
*/
public class EvoMaster_successes_Test {

    
    private static final SutHandler controller = new em.external.org.restscs.ExternalEvoMasterController("/Users/pgarrett/evoMaster/EMB/jdk_8_maven/cs/rest/artificial/scs/target/rest-scs-sut.jar");
    private static String baseUrlOfSut;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetStateOfSUT();
    }
    
    
    
    
    /**
    * Calls:
    * (200) GET:/v2/api-docs
    */
    @Test(timeout = 60000)
    public void test_0_getOnApi_docsReturnsObject() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/v2/api-docs")
                .then()
                .statusCode(200);
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/pat/{txt}
    */
    @Test(timeout = 60000)
    public void test_1_getOnPatReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/_EM_18_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("none"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/pat/{txt}
    */
    @Test(timeout = 60000)
    public void test_2_getOnApiPatWithQueryParamReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/pat/sun56jul?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("date"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/pat/{txt}
    */
    @Test(timeout = 60000)
    public void test_3_getOnPatReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_3383_XYZ_")
                .get(baseUrlOfSut + "/api/pat/63.941e+70")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("fpe"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/costfuns/{i}/{s}
    */
    @Test(timeout = 60000)
    public void test_4_getOnCostfunReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/costfuns/1048590/baab?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("10"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/costfuns/{i}/{s}
    */
    @Test(timeout = 60000)
    public void test_5_getOnCostfunReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/costfuns/689/yQ54H5bU1L82N3")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("10"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/costfuns/{i}/{s}
    */
    @Test(timeout = 60000)
    public void test_6_getOnCostfunReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/costfuns/-845283859/vFoeiUSXmYVW?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("10"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/costfuns/{i}/{s}
    */
    @Test(timeout = 60000)
    public void test_7_getOnCostfunReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/costfuns/779/_EM_70_XYZ_?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("10"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/costfuns/{i}/{s}
    */
    @Test(timeout = 60000)
    public void test_8_getOnCostfunReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/costfuns/5/Ck%3Fg")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("10"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/costfuns/{i}/{s}
    */
    @Test(timeout = 60000)
    public void test_9_getOnCostfunReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/costfuns/-4/GJO")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("10"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/dateparse/{dayname}/{monthname}
    */
    @Test(timeout = 60000)
    public void test_10_getOnDateparsReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/dateparse/sun/jun")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("7"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/dateparse/{dayname}/{monthname}
    */
    @Test(timeout = 60000)
    public void test_11_getOnDateparsReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/dateparse/_EM_5765_XYZ_/jul?EMextraParam123=_EM_3419_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("7"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/dateparse/{dayname}/{monthname}
    */
    @Test(timeout = 60000)
    public void test_12_getOnDateparsReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/dateparse/ZQCe/dec")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("12"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/dateparse/{dayname}/{monthname}
    */
    @Test(timeout = 60000)
    public void test_13_getOnDateparsReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_3379_XYZ_")
                .get(baseUrlOfSut + "/api/dateparse/mon/dec?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("13"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/dateparse/{dayname}/{monthname}
    */
    @Test(timeout = 60000)
    public void test_14_getOnDateparsReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_79_XYZ_")
                .get(baseUrlOfSut + "/api/dateparse/_EM_76_XYZ_/_EM_77_XYZ_?EMextraParam123=_EM_78_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/dateparse/{dayname}/{monthname}
    */
    @Test(timeout = 60000)
    public void test_15_getOnDateparsReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/dateparse/tue/_EM_10068_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("1"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/dateparse/{dayname}/{monthname}
    */
    @Test(timeout = 60000)
    public void test_16_getOnDateparsReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/dateparse/_EM_625_XYZ_/_EM_626_XYZ_?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/dateparse/{dayname}/{monthname}
    */
    @Test(timeout = 60000)
    public void test_17_getOnDateparsReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/dateparse/_EM_5789_XYZ_/nov")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("11"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/dateparse/{dayname}/{monthname}
    */
    @Test(timeout = 60000)
    public void test_18_getOnDateparsReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/dateparse/wed/APr")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("5"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/dateparse/{dayname}/{monthname}
    */
    @Test(timeout = 60000)
    public void test_19_getOnDateparsReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/dateparse/_EM_40_XYZ_/_EM_41_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/dateparse/{dayname}/{monthname}
    */
    @Test(timeout = 60000)
    public void test_20_getOnDateparsReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/dateparse/thur/mar?EMextraParam123=_EM_3419_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("4"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/dateparse/{dayname}/{monthname}
    */
    @Test(timeout = 60000)
    public void test_21_getOnDateparsReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/dateparse/q0Eu/mar?EMextraParam123=_EM_3219_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("3"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/dateparse/{dayname}/{monthname}
    */
    @Test(timeout = 60000)
    public void test_22_getOnDateparsReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/dateparse/_EM_84_XYZ_/_EM_85_XYZ_?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/dateparse/{dayname}/{monthname}
    */
    @Test(timeout = 60000)
    public void test_23_getOnDateparsReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/dateparse/fri/oct?EMextraParam123=_EM_3219_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("11"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/dateparse/{dayname}/{monthname}
    */
    @Test(timeout = 60000)
    public void test_24_getOnDateparsReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_3379_XYZ_")
                .get(baseUrlOfSut + "/api/dateparse/_EM_5758_XYZ_/aug?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("8"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/dateparse/{dayname}/{monthname}
    */
    @Test(timeout = 60000)
    public void test_25_getOnDateparsReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/dateparse/sat/GTh?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("1"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/dateparse/{dayname}/{monthname}
    */
    @Test(timeout = 60000)
    public void test_26_getOnDateparsReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_3420_XYZ_")
                .get(baseUrlOfSut + "/api/dateparse/yOAQ/jan?EMextraParam123=_EM_3419_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("1"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/dateparse/{dayname}/{monthname}
    */
    @Test(timeout = 60000)
    public void test_27_getOnDateparsReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/dateparse/ZAUe/feb?EMextraParam123=_EM_2062_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("2"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/dateparse/{dayname}/{monthname}
    */
    @Test(timeout = 60000)
    public void test_28_getOnDateparsReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_231_XYZ_")
                .get(baseUrlOfSut + "/api/dateparse/_EM_229_XYZ_/_EM_230_XYZ_?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/dateparse/{dayname}/{monthname}
    */
    @Test(timeout = 60000)
    public void test_29_getOnDateparsReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/dateparse/q0Eu/may")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("5"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/dateparse/{dayname}/{monthname}
    */
    @Test(timeout = 60000)
    public void test_30_getOnDateparsReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/dateparse/_EM_975_XYZ_/_EM_976_XYZ_?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/dateparse/{dayname}/{monthname}
    */
    @Test(timeout = 60000)
    public void test_31_getOnDateparsReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/dateparse/fri/sep?EMextraParam123=_EM_3219_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("10"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/filesuffix/{directory}/{file}
    */
    @Test(timeout = 60000)
    public void test_32_getOnFilesuffixReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_14_XYZ_")
                .get(baseUrlOfSut + "/api/filesuffix/_EM_11_XYZ_/_EM_12_XYZ_?EMextraParam123=_EM_13_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/notypevar/{i}/{s}
    */
    @Test(timeout = 60000)
    public void test_33_getOnNotypevarReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/notypevar/28/_EM_14306_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("3"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/notypevar/{i}/{s}
    */
    @Test(timeout = 60000)
    public void test_34_getOnWithQueryParamReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_17_XYZ_")
                .get(baseUrlOfSut + "/api/notypevar/-181681992/_EM_15_XYZ_?EMextraParam123=_EM_16_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/notypevar/{i}/{s}
    */
    @Test(timeout = 60000)
    public void test_35_getOnNotypevarReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/notypevar/7/5crGPZ")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("3"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/notypevar/{i}/{s}
    */
    @Test(timeout = 60000)
    public void test_36_getOnNotypevarReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/notypevar/749/tZPCM71QRXRwh")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("3"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/pat/{txt}/{pat}
    */
    @Test(timeout = 60000)
    public void test_37_getOnPatReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/KSMMfc/KSM")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("1"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/pat/{txt}/{pat}
    */
    @Test(timeout = 60000)
    public void test_38_getOnPatReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/MSKKqk/KSM")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("2"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/pat/{txt}/{pat}
    */
    @Test(timeout = 60000)
    public void test_39_getOnPatReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_465_XYZ_")
                .get(baseUrlOfSut + "/api/pat/_EM_463_XYZ_/ct?EMextraParam123=_EM_464_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/title/{sex}/{title}
    */
    @Test(timeout = 60000)
    public void test_40_getOnTitlReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/title/female/prof")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/title/{sex}/{title}
    */
    @Test(timeout = 60000)
    public void test_41_getOnTitlReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/title/none/prof")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("2"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/title/{sex}/{title}
    */
    @Test(timeout = 60000)
    public void test_42_getOnWithQueryParamReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_22_XYZ_")
                .get(baseUrlOfSut + "/api/title/G/zKC5GH2?EMextraParam123=_EM_21_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("-1"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/title/{sex}/{title}
    */
    @Test(timeout = 60000)
    public void test_43_getOnTitlReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/title/male/prof")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("1"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/title/{sex}/{title}
    */
    @Test(timeout = 60000)
    public void test_44_getOnTitlReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/title/male/nt37bIc")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("-1"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/title/{sex}/{title}
    */
    @Test(timeout = 60000)
    public void test_45_getOnTitlReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/title/female/mr")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("-1"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/title/{sex}/{title}
    */
    @Test(timeout = 60000)
    public void test_46_getOnTitlReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/title/none/nt37dI_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("-1"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/pat/{txt}/{pat}
    */
    @Test(timeout = 60000)
    public void test_47_getOnPatReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/MSK5pk/KSM")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("2"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/dateparse/{dayname}/{monthname}
    */
    @Test(timeout = 60000)
    public void test_48_getOnDateparsReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/dateparse/_EM_2930_XYZ_/_EM_2931_XYZ_?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/pat/{txt}/{pat}
    */
    @Test(timeout = 60000)
    public void test_49_getOnPatReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/_EM_6542_XYZ_/_dKYK7Yx1Hhnw?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/pat/{txt}/{pat}
    */
    @Test(timeout = 60000)
    public void test_50_getOnPatReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_8137_XYZ_")
                .get(baseUrlOfSut + "/api/pat/_UMU8UU6UXYZ_/_EM_8135_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/pat/{txt}/{pat}
    */
    @Test(timeout = 60000)
    public void test_51_getOnPatReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/_EM_11203_XYZ_/_EM_5083_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/pat/{txt}/{pat}
    */
    @Test(timeout = 60000)
    public void test_52_getOnPatReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/_EM_14924_XYZ_/UEUU0U9U3_XYU_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/pat/{txt}/{pat}
    */
    @Test(timeout = 60000)
    public void test_53_getOnPatReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/KSM5pk/KSM")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("1"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/pat/{txt}/{pat}
    */
    @Test(timeout = 60000)
    public void test_54_getOnPatReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/_EM_18981_XYZ_/_EM_18981_XYZm")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/title/{sex}/{title}
    */
    @Test(timeout = 60000)
    public void test_55_getOnTitlReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/title/none/dr")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("2"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/title/{sex}/{title}
    */
    @Test(timeout = 60000)
    public void test_56_getOnTitlReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/title/female/dr")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/title/{sex}/{title}
    */
    @Test(timeout = 60000)
    public void test_57_getOnTitlReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/title/none/rev")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("2"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/title/{sex}/{title}
    */
    @Test(timeout = 60000)
    public void test_58_getOnTitlReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/title/female/rev")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/title/{sex}/{title}
    */
    @Test(timeout = 60000)
    public void test_59_getOnTitlReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/title/none/rthon")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("2"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/title/{sex}/{title}
    */
    @Test(timeout = 60000)
    public void test_60_getOnTitlReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/title/female/rthon")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/title/{sex}/{title}
    */
    @Test(timeout = 60000)
    public void test_61_getOnTitlReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/title/male/mr")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("1"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/title/{sex}/{title}
    */
    @Test(timeout = 60000)
    public void test_62_getOnTitlReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/title/male/dr")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("1"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/title/{sex}/{title}
    */
    @Test(timeout = 60000)
    public void test_63_getOnTitlReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/title/male/sir")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("1"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/title/{sex}/{title}
    */
    @Test(timeout = 60000)
    public void test_64_getOnTitlReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/title/male/rev")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("1"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/title/{sex}/{title}
    */
    @Test(timeout = 60000)
    public void test_65_getOnTitlReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/title/male/rthon")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("1"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/title/{sex}/{title}
    */
    @Test(timeout = 60000)
    public void test_66_getOnTitlReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/title/female/_EM_19978_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("-1"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/pat/{txt}/{pat}
    */
    @Test(timeout = 60000)
    public void test_67_getOnPatReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/KSMMSK%5D/KSM")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/pat/{txt}/{pat}
    */
    @Test(timeout = 60000)
    public void test_68_getOnPatReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/_EM_26011_XYZ_/_EM_6627_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/pat/{txt}/{pat}
    */
    @Test(timeout = 60000)
    public void test_69_getOnPatReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/MSKKSMk/KSM")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/pat/{txt}/{pat}
    */
    @Test(timeout = 60000)
    public void test_70_getOnPatReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/Vwx3RFYe8SuY3/gNmyg")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/pat/{txt}/{pat}
    */
    @Test(timeout = 60000)
    public void test_71_getOnPatReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/_EM_30276_XYZ_/_EI_8627_XYZ_r")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/pat/{txt}/{pat}
    */
    @Test(timeout = 60000)
    public void test_72_getOnPatReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/xhu1FJQ5Z3/kxtprsWbnl")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/calc/{op}/{arg1}/{arg2}
    */
    @Test(timeout = 60000)
    public void test_73_getOnCalcReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/calc/divide/0.875/-0.4848903799625268?EMextraParam123=_EM_56_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("-1.8045315728219264"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/calc/{op}/{arg1}/{arg2}
    */
    @Test(timeout = 60000)
    public void test_74_getOnCalcReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/calc/_EM_95_XYZ_/0.6308864963550606/0.7250214068077864?EMextraParam123=_EM_96_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0.0"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/calc/{op}/{arg1}/{arg2}
    */
    @Test(timeout = 60000)
    public void test_75_getOnCalcReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/calc/pi/-39601.36396819804/0.7014449372232684")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("3.141592653589793"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/calc/{op}/{arg1}/{arg2}
    */
    @Test(timeout = 60000)
    public void test_76_getOnCalcReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/calc/sUBtRACT/-4.4942328371557893E307/-2.5302004205276487E307")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("-1.9640324166281405E307"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/calc/{op}/{arg1}/{arg2}
    */
    @Test(timeout = 60000)
    public void test_77_getOnCalcReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/calc/e/0.0/0.0?EMextraParam123=_EM_56_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("2.718281828459045"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/calc/{op}/{arg1}/{arg2}
    */
    @Test(timeout = 60000)
    public void test_78_getOnCalcReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/calc/sQRT/-8.988465674311579E307/4.4942328371557893E307")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("NaN"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/calc/{op}/{arg1}/{arg2}
    */
    @Test(timeout = 60000)
    public void test_79_getOnCalcReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/calc/log/0.6555784179369579/0.7014449372232684")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("-0.4222373522135696"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/calc/{op}/{arg1}/{arg2}
    */
    @Test(timeout = 60000)
    public void test_80_getOnCalcReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/calc/SIne/-3.370674627866842E307/-118381.67238116683")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("-0.9494965461077076"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/calc/{op}/{arg1}/{arg2}
    */
    @Test(timeout = 60000)
    public void test_81_getOnCalcReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/calc/cOSINe/8.988465674311579E307/112.63302416")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0.002480985030190885"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/calc/{op}/{arg1}/{arg2}
    */
    @Test(timeout = 60000)
    public void test_82_getOnCalcReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/calc/TanGeNT/-1.4177035871273875E307/-2.2471164185778946E307")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("-0.3686916003452899"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/calc/{op}/{arg1}/{arg2}
    */
    @Test(timeout = 60000)
    public void test_83_getOnCalcReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/calc/pLUS/-8.988465674311579E307/702.1676354")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("-8.988465674311579E307"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/calc/{op}/{arg1}/{arg2}
    */
    @Test(timeout = 60000)
    public void test_84_getOnCalcReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/calc/multiply/0.6555784179369579/0.7")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0.4589048925558705"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/cookie/{name}/{val}/{site}
    */
    @Test(timeout = 60000)
    public void test_85_getOnCookiReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/cookie/session/am/VBpR4c")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("2"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/cookie/{name}/{val}/{site}
    */
    @Test(timeout = 60000)
    public void test_86_getOnCookiReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/cookie/_EM_3_XYZ_/kkRAZKbf/Bxy")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/cookie/{name}/{val}/{site}
    */
    @Test(timeout = 60000)
    public void test_87_getOnCookiReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/cookie/userid/_EM_11996_XYZ_/RBpR4k")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/cookie/{name}/{val}/{site}
    */
    @Test(timeout = 60000)
    public void test_88_getOnCookiReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/cookie/userid/USer1U4QUUUH/UgkUhqU")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("1"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/cookie/{name}/{val}/{site}
    */
    @Test(timeout = 60000)
    public void test_89_getOnCookiReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/cookie/session/iPwEipbxg/_EM_11997_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("2"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/text2txt/{word1}/{word2}/{word3}
    */
    @Test(timeout = 60000)
    public void test_90_getOnText2txtReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/text2txt/bY/the/way")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("btw"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/text2txt/{word1}/{word2}/{word3}
    */
    @Test(timeout = 60000)
    public void test_91_getOnText2txtReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/text2txt/two/zXa4eoIB7qz0d/_Ec%5B1D%3E26_XGY")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("2"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/text2txt/{word1}/{word2}/{word3}
    */
    @Test(timeout = 60000)
    public void test_92_getOnText2txtReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/text2txt/fOR/W2446OWK/lht1oyylc2")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("4"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/text2txt/{word1}/{word2}/{word3}
    */
    @Test(timeout = 60000)
    public void test_93_getOnText2txtReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/text2txt/FouR/_EM_30013_XYZ_/aEBcA%5B0R5gX_ZB")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("4"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/text2txt/{word1}/{word2}/{word3}
    */
    @Test(timeout = 60000)
    public void test_94_getOnText2txtReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/text2txt/you/UfiuK/WEc%5B1D%3E26_XG")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("u"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/text2txt/{word1}/{word2}/{word3}
    */
    @Test(timeout = 60000)
    public void test_95_getOnText2txtReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/text2txt/and/zYc4eoIB7qz0h/_EM_16752_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("n"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/text2txt/{word1}/{word2}/{word3}
    */
    @Test(timeout = 60000)
    public void test_96_getOnText2txtReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/text2txt/are/_EM_22134_XYZ_/GAm9LNG6kja")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("r"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/calc/{op}/{arg1}/{arg2}
    */
    @Test(timeout = 60000)
    public void test_97_getOnCalcReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/calc/_EM_924_XYZ_/0.7247640274277375/0.11854503948521922?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0.0"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/calc/{op}/{arg1}/{arg2}
    */
    @Test(timeout = 60000)
    public void test_98_getOnCalcReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_588_XYZ_")
                .get(baseUrlOfSut + "/api/calc/_EM_587_XYZ_/0.7039134593459597/0.10695248583420869?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0.0"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/calc/{op}/{arg1}/{arg2}
    */
    @Test(timeout = 60000)
    public void test_99_getOnCalcReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/calc/_EM_535_XYZ_/0.4548569912848528/0.22979980960182245")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0.0"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/calc/{op}/{arg1}/{arg2}
    */
    @Test(timeout = 60000)
    public void test_100_getOnCalcReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/calc/_EM_628_XYZ_/0.03679734338430507/0.1337669643329088")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0.0"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/calc/{op}/{arg1}/{arg2}
    */
    @Test(timeout = 60000)
    public void test_101_getOnCalcReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/calc/_EM_994_XYZ_/0.3357989936624757/0.7321044381338102")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0.0"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/cookie/{name}/{val}/{site}
    */
    @Test(timeout = 60000)
    public void test_102_getOnCookiReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/cookie/userid/am/FBpR4k")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/text2txt/{word1}/{word2}/{word3}
    */
    @Test(timeout = 60000)
    public void test_103_getOnText2txtReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/text2txt/see/you/iRL03ze0CKXfvSY")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("cu"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/ordered4/{w}/{x}/{z}/{y}
    */
    @Test(timeout = 60000)
    public void test_104_getOnWithQueryParamReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/ordered4/_EM_0_XYZ_/94v4c/DQ33jOkaaX/_EM_1_XYZ_?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("unordered"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/ordered4/{w}/{x}/{z}/{y}
    */
    @Test(timeout = 60000)
    public void test_105_getOnOrdered4ReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/ordered4/YaiSxK/U4U0c/_7Vlhd/%5B7cqhd")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("unordered"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/ordered4/{w}/{x}/{z}/{y}
    */
    @Test(timeout = 60000)
    public void test_106_getOnOrdered4ReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/ordered4/9Fb4/_EM_80_XYZ_/a7/kbQccTikTDUEsJ")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("unordered"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/ordered4/{w}/{x}/{z}/{y}
    */
    @Test(timeout = 60000)
    public void test_107_getOnOrdered4ReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_2_XYZ_")
                .get(baseUrlOfSut + "/api/ordered4/aaiSxK/U4U4c/DQ33jOkaaX/_EM_367_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("unordered"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/ordered4/{w}/{x}/{z}/{y}
    */
    @Test(timeout = 60000)
    public void test_108_getOnOrdered4ReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/ordered4/clCpu/D5YA/YuaL/nP")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("unordered"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/ordered4/{w}/{x}/{z}/{y}
    */
    @Test(timeout = 60000)
    public void test_109_getOnOrdered4ReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_407_XYZ_")
                .get(baseUrlOfSut + "/api/ordered4/KYTF5/_EM_405_XYZ_/fP7fVP7Bwe0y4L/xhdmd2yUIgBBUHwF")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("unordered"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/ordered4/{w}/{x}/{z}/{y}
    */
    @Test(timeout = 60000)
    public void test_110_getOnOrdered4ReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/ordered4/D0dXgz/7qwFb/e_71rpXBHqa/42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("unordered"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/ordered4/{w}/{x}/{z}/{y}
    */
    @Test(timeout = 60000)
    public void test_111_getOnOrdered4ReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/ordered4/YaiSxK/U4U4c/DQ33jOkaaX/_7Vlhh")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("unordered"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/ordered4/{w}/{x}/{z}/{y}
    */
    @Test(timeout = 60000)
    public void test_112_getOnOrdered4ReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/ordered4/YaiUyK/X4U0cX/_7Vl/%5B7crh")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("unordered"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/ordered4/{w}/{x}/{z}/{y}
    */
    @Test(timeout = 60000)
    public void test_113_getOnOrdered4ReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/ordered4/YajStK/U4U0c/G7Vlhc/R%3Edpd")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("decreasing"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/ordered4/{w}/{x}/{z}/{y}
    */
    @Test(timeout = 60000)
    public void test_114_getOnOrdered4ReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/ordered4/YaiSxK/U4U0c/_7Vlhd/G7Vlhd")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("unordered"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/ordered4/{w}/{x}/{z}/{y}
    */
    @Test(timeout = 60000)
    public void test_115_getOnOrdered4ReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/ordered4/YaiStK/YaiStK/_7Vlhd/H7dqdd")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("unordered"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/ordered4/{w}/{x}/{z}/{y}
    */
    @Test(timeout = 60000)
    public void test_116_getOnOrdered4ReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/ordered4/YaiSxK/%5B4@0c/_8Vlhd/_7Vlh")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("increasing"));
    }


}
