/**
* LICENSE DISCLAIMER
* This file has been generated by EvoMaster.
* The content of this file is not subject to the license of EvoMaster itself, i.e., LGPL.
* This generated software (i.e., the test suite in this file) can be freely used, modified,
* and distributed as you see fit without any restrictions.
*/
import dto.Address;
import dto.Person;
import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;

import java.util.ArrayList;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import java.util.Optional;

import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;


/**
*  This file was automatically generated by EvoMaster on 2025-03-01T14:23:40.581-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 4 tests
 * <br>
*  Covered targets: 18
 * <br>
*  Used time: 0h 2m 6s
 * <br>
*  Needed budget for current results: 30%
 * <br>
*  This file contains test cases that represent successful calls.
*/
public class EvoMaster_successes_Test {


    private static String baseUrlOfSut = "http://localhost:5000";


    @BeforeClass
    public static void initClass() {
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }








//    /**
//    * Calls:
//    * (200) GET:/dtoSpec.yaml
//    */
//    @Test(timeout = 60000)
//    public void test_0() throws Exception {
//
//        given().accept("*/*")
//                .get(baseUrlOfSut + "/dtoSpec.yaml")
//                .then()
//                .statusCode(200);
//    }
//
//
//    /**
//    * Calls:
//    * (200) POST:/string
//    */
//    @Test(timeout = 60000)
//    public void test_1() throws Exception {
//
//        given().accept("application/json")
//                .contentType("text/plain")
//                .body("KCbXxexsI4GBIZ")
//                .post(baseUrlOfSut + "/string")
//                .then()
//                .statusCode(200)
//                .assertThat()
//                .contentType("application/json")
//                .body("'data'", containsString("KCbXxexsI4GBIZ"))
//                .body("'message'", containsString("Received string"));
//    }
//
//
//    /**
//    * Calls:
//    * (200) POST:/array
//    */
//    @Test(timeout = 60000)
//    public void test_2() throws Exception {
//
//        given().accept("application/json")
//                .contentType("application/json")
//                .body(" [ " +
//                    " { " +
//                    " \"name\": \"aocdZBUveN0uY\", " +
//                    " \"age\": 634, " +
//                    " \"address\": { " +
//                    " \"street\": \"HDT1MhpKSU7XNO\", " +
//                    " \"country\": \"OlL7VJDlmZ6AHX\" " +
//                    " } " +
//                    " }, " +
//                    " { " +
//                    " \"name\": \"npLJm4q2FQ\", " +
//                    " \"age\": 702800943, " +
//                    " \"address\": { " +
//                    " \"street\": \"3lBvGb5N\", " +
//                    " \"country\": \"vo\", " +
//                    " \"voted\": true " +
//                    " } " +
//                    " } " +
//                    " ] ")
//                .post(baseUrlOfSut + "/array")
//                .then()
//                .statusCode(200)
//                .assertThat()
//                .contentType("application/json")
//                .body("'data'.size()", equalTo(2))
//                .body("'data'[0].'address'.'country'", containsString("OlL7VJDlmZ6AHX"))
//                .body("'data'[0].'address'.'street'", containsString("HDT1MhpKSU7XNO"))
//                .body("'data'[0].'age'", numberMatches(634.0))
//                .body("'data'[0].'name'", containsString("aocdZBUveN0uY"))
//                .body("'data'[1].'address'.'country'", containsString("vo"))
//                .body("'data'[1].'address'.'street'", containsString("3lBvGb5N"))
//                .body("'data'[1].'address'.'voted'", equalTo(true))
//                .body("'data'[1].'age'", numberMatches(7.02800943E8))
//                .body("'data'[1].'name'", containsString("npLJm4q2FQ"))
//                .body("'message'", containsString("Received array"));
//    }


    /**
    * Calls:
    * (200) POST:/object
    */
//    @Test(timeout = 60000)
    public void test_3() throws Exception {

        given().accept("application/json")
                .contentType("application/json")
                .body(" { " +
                    " \"name\": \"rdf\", " +
                    " \"age\": 555, " +
                    " \"address\": { " +
                    " \"street\": \"61k\", " +
                    " \"country\": \"J59jq_06cK\", " +
                    " \"voted\": false " +
                    " } " +
                    " } ")
                .post(baseUrlOfSut + "/object")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'address'.'country'", containsString("J59jq_06cK"))
                .body("'data'.'address'.'street'", containsString("61k"))
                .body("'data'.'address'.'voted'", equalTo(false))
                .body("'data'.'age'", numberMatches(555.0))
                .body("'data'.'name'", containsString("rdf"))
                .body("'message'", containsString("Received object"));
    }

    @Test(timeout = 60000)
    public void test_4_full() throws Exception {

        Address address = new Address();
        address.setCountry("J59jq_06cK");
        address.setStreet("61k");
        address.setVoted(true);
        Person person = new Person();
        person.setName("rdf");
        person.setAge(555);
        person.setAddress(address);

        given().accept("application/json")
                .contentType("application/json")
                .body(person)
                .post(baseUrlOfSut + "/object")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'address'.'country'", containsString("J59jq_06cK"))
                .body("'data'.'address'.'street'", containsString("61k"))
                .body("'data'.'address'.'voted'", equalTo(true))
                .body("'data'.'age'", numberMatches(555.0))
                .body("'data'.'name'", containsString("rdf"))
                .body("'message'", containsString("Received object"));
    }

    @Test(timeout = 60000)
    public void test_5_null() throws Exception {

        Address address = new Address();
        address.setCountry("J59jq_06cK");
        address.setStreet("61k");
        address.setVoted(null);
        Person person = new Person();
        person.setName("rdf");
        person.setAge(555);
        person.setAddress(address);

        given().accept("application/json")
                .contentType("application/json")
                .body(person)
                .post(baseUrlOfSut + "/object")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'address'.'country'", containsString("J59jq_06cK"))
                .body("'data'.'address'.'street'", containsString("61k"))
                .body("'data'.'address'.'voted'", nullValue())
                .body("'data'.'age'", numberMatches(555.0))
                .body("'data'.'name'", containsString("rdf"))
                .body("'message'", containsString("Received object"));
    }

    @Test(timeout = 60000)
    public void test_6_noProp() throws Exception {

        Address address = new Address();
        address.setCountry("J59jq_06cK");
        address.setStreet("61k");
        Person person = new Person();
        person.setName("rdf");
        person.setAge(555);
        person.setAddress(address);

        given().accept("application/json")
                .contentType("application/json")
                .body(person)
                .post(baseUrlOfSut + "/object")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'address'.'country'", containsString("J59jq_06cK"))
                .body("'data'.'address'.'street'", containsString("61k"))
                .body("'data'.'address'.'voted'", nullValue())
                .body("'data'.'age'", numberMatches(555.0))
                .body("'data'.'name'", containsString("rdf"))
                .body("'message'", containsString("Received object"));
    }

//    @Test(timeout = 60000)
    public void test_7_array() throws Exception {


        Address adr1 = new Address();
        adr1.setCountry("OlL7VJDlmZ6AHX");
        adr1.setStreet("HDT1MhpKSU7XNO");
        Person per1 = new Person();
        per1.setName("aocdZBUveN0uY");
        per1.setAge(634);
        per1.setAddress(adr1);

        Address adr2 = new Address();
        adr2.setCountry("vo");
        adr2.setStreet("3lBvGb5N");
        adr2.setVoted(true);
        Person per2 = new Person();
        per2.setName("npLJm4q2FQ");
        per2.setAge(702800943);
        per2.setAddress(adr2);

        Address adr3 = new Address();
        adr3.setCountry("vo");
        adr3.setStreet("3lBvGb5N");
        adr3.setVoted(null);
        Person per3 = new Person();
        per3.setName("npLJm4q2FQ");
        per3.setAge(702800943);
        per3.setAddress(adr3);

        List<Person> personList = new ArrayList<>();
        personList.add(per1);
        personList.add(per2);
        personList.add(per3);

        given().accept("application/json")
                .contentType("application/json")
                .body(personList)
                .post(baseUrlOfSut + "/array")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.size()", equalTo(3))
                .body("'data'[0].'address'.'country'", containsString("OlL7VJDlmZ6AHX"))
                .body("'data'[0].'address'.'street'", containsString("HDT1MhpKSU7XNO"))
                .body("'data'[0].'age'", numberMatches(634.0))
                .body("'data'[0].'name'", containsString("aocdZBUveN0uY"))
                .body("'data'[1].'address'.'country'", containsString("vo"))
                .body("'data'[1].'address'.'street'", containsString("3lBvGb5N"))
                .body("'data'[1].'address'.'voted'", equalTo(true))
                .body("'data'[1].'age'", numberMatches(7.02800943E8))
                .body("'data'[1].'name'", containsString("npLJm4q2FQ"))
                .body("'message'", containsString("Received array"));
    }

}
