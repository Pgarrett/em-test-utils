/**
* LICENSE DISCLAIMER
* This file has been generated by EvoMaster.
* The content of this file is not subject to the license of EvoMaster itself, i.e., LGPL.
* This generated software (i.e., the test suite in this file) can be freely used, modified, 
* and distributed as you see fit without any restrictions.
*/
import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-08-17T19:34:13.272-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 43 tests
 * <br>
*  Covered targets: 647
 * <br>
*  Used time: 0h 15m 0s
 * <br>
*  Needed budget for current results: 95%
 * <br>
*  This file contains test cases that represent successful calls.
*/
public class EvoMaster_successes_Test {

    
    private static final SutHandler controller = new em.embedded.org.restncs.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetStateOfSUT();
    }
    
    
    
    
    /**
    * Calls:
    * (200) GET:/v2/api-docs
    */
    @Test(timeout = 60000)
    public void test_0_getOnApi_docsReturnsObject() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/v2/api-docs")
                .then()
                .statusCode(200);
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/bessj/{n}/{x}
    */
    @Test(timeout = 60000)
    public void test_1_getOnBessjReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/bessj/3/-8.0?EMextraParam123=_EM_3413_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(0.29113220692602515));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/bessj/{n}/{x}
    */
    @Test(timeout = 60000)
    public void test_2_getOnBessjReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_137_XYZ_")
                .get(baseUrlOfSut + "/api/bessj/92/-0.16620949218890096")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(3.241744769117775E-242));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/bessj/{n}/{x}
    */
    @Test(timeout = 60000)
    public void test_3_getOnBessjReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/bessj/10/58.15446157318976?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(0.011490830372188655));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/bessj/{n}/{x}
    */
    @Test(timeout = 60000)
    public void test_4_getOnBessjReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/bessj/17/1.5625E-16")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", containsString("NaN"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/bessj/{n}/{x}
    */
    @Test(timeout = 60000)
    public void test_5_getOnBessjReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/bessj/469/0.0?EMextraParam123=_EM_134_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(0.0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/bessj/{n}/{x}
    */
    @Test(timeout = 60000)
    public void test_6_getOnBessjReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/bessj/3/3.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(0.30906272405296537));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/expint/{n}/{x}
    */
    @Test(timeout = 60000)
    public void test_7_getOnExpintReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_894_XYZ_")
                .get(baseUrlOfSut + "/api/expint/10/0.593230006659965")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(0.057192384418337516));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/expint/{n}/{x}
    */
    @Test(timeout = 60000)
    public void test_8_getOnExpintReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/expint/274/0.0?EMextraParam123=_EM_73_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(0.003663003663003663));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/expint/{n}/{x}
    */
    @Test(timeout = 60000)
    public void test_9_getOnExpintReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/expint/0/0.0183489")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(53.50829838012003));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/expint/{n}/{x}
    */
    @Test(timeout = 60000)
    public void test_10_getOnExpintReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/expint/480/1.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(7.664121649344602E-4));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/expint/{n}/{x}
    */
    @Test(timeout = 60000)
    public void test_11_getOnExpintReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/expint/20/2.1310090151602568?EMextraParam123=_EM_979_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(0.005590457984511113));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/expint/{n}/{x}
    */
    @Test(timeout = 60000)
    public void test_12_getOnExpintReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/expint/1/0.494402718954137")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(0.5666209112524873));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/expint/{n}/{x}
    */
    @Test(timeout = 60000)
    public void test_13_getOnExpintReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/expint/1565765970/0.288033632983561")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(4.788304187925865E-10));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/gammq/{a}/{x}
    */
    @Test(timeout = 60000)
    public void test_14_getOnGammqReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/gammq/0.05/1.05?EMextraParam123=_EM_1771_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(0.01062317415562796));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/gammq/{a}/{x}
    */
    @Test(timeout = 60000)
    public void test_15_getOnGammqReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/gammq/0.7647474972411372/0.4887021563031029?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(0.48737326709261797));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/gammq/{a}/{x}
    */
    @Test(timeout = 60000)
    public void test_16_getOnGammqReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/gammq/0.085466054677236/0.0?EMextraParam123=_EM_935_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(1.0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/gammq/{a}/{x}
    */
    @Test(timeout = 60000)
    public void test_17_getOnGammqReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_1006_XYZ_")
                .get(baseUrlOfSut + "/api/gammq/0.2343679/2.965340616180762?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(0.00477995728630444));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/gammq/{a}/{x}
    */
    @Test(timeout = 60000)
    public void test_18_getOnGammqReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_1148_XYZ_")
                .get(baseUrlOfSut + "/api/gammq/8.988465674311579E307/0.91423310282?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(1.0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/remainder/{a}/{b}
    */
    @Test(timeout = 60000)
    public void test_19_getOnRemaindReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/remainder/413/-124?EMextraParam123=_EM_474_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", numberMatches(41.0))
                .body("'resultAsDouble'", nullValue());
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/remainder/{a}/{b}
    */
    @Test(timeout = 60000)
    public void test_20_getOnRemaindReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/remainder/-2166/19")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", numberMatches(0.0))
                .body("'resultAsDouble'", nullValue());
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/remainder/{a}/{b}
    */
    @Test(timeout = 60000)
    public void test_21_getOnRemaindReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/remainder/809/123")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", numberMatches(71.0))
                .body("'resultAsDouble'", nullValue());
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/remainder/{a}/{b}
    */
    @Test(timeout = 60000)
    public void test_22_getOnRemaindReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/remainder/-2494/-58")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", numberMatches(0.0))
                .body("'resultAsDouble'", nullValue());
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/remainder/{a}/{b}
    */
    @Test(timeout = 60000)
    public void test_23_getOnRemaindReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/remainder/0/-136?EMextraParam123=_EM_403_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", numberMatches(-1.0))
                .body("'resultAsDouble'", nullValue());
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/remainder/{a}/{b}
    */
    @Test(timeout = 60000)
    public void test_24_getOnRemaindReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/remainder/945/0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", numberMatches(-1.0))
                .body("'resultAsDouble'", nullValue());
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/bessj/{n}/{x}
    */
    @Test(timeout = 60000)
    public void test_25_getOnBessjReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/bessj/3/3.1134933018577406")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(0.3287336421551416));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/fisher/{m}/{n}/{x}
    */
    @Test(timeout = 60000)
    public void test_26_getOnFisherReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_40_XYZ_")
                .get(baseUrlOfSut + "/api/fisher/893/821/0.32257415752258367")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(0.0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/fisher/{m}/{n}/{x}
    */
    @Test(timeout = 60000)
    public void test_27_getOnFisherReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/fisher/88/887/0.0057036924393013555")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(8.331301081763423E-15));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/fisher/{m}/{n}/{x}
    */
    @Test(timeout = 60000)
    public void test_28_getOnFisherReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/fisher/614/568/0.21805338725209744")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(6.46788528401479E-17));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/fisher/{m}/{n}/{x}
    */
    @Test(timeout = 60000)
    public void test_29_getOnFisherReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/fisher/-6019/-4066/-0.2816644578062505")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(0.9999999999999999));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/fisher/{m}/{n}/{x}
    */
    @Test(timeout = 60000)
    public void test_30_getOnFisherReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/fisher/576/-8387944/2.5804998573342575")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(1.0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/fisher/{m}/{n}/{x}
    */
    @Test(timeout = 60000)
    public void test_31_getOnFisherReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_13_XYZ_")
                .get(baseUrlOfSut + "/api/fisher/125/30/0.7273046058372656")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(0.11561168371986466));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/triangle/{a}/{b}/{c}
    */
    @Test(timeout = 60000)
    public void test_32_getOnTrianglReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/triangle/171/697/438?EMextraParam123=_EM_2_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", numberMatches(0.0))
                .body("'resultAsDouble'", nullValue());
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/triangle/{a}/{b}/{c}
    */
    @Test(timeout = 60000)
    public void test_33_getOnTrianglReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/triangle/472/199/472?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", numberMatches(2.0))
                .body("'resultAsDouble'", nullValue());
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/triangle/{a}/{b}/{c}
    */
    @Test(timeout = 60000)
    public void test_34_getOnTrianglReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/triangle/203/35/983?EMextraParam123=_EM_8_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", numberMatches(0.0))
                .body("'resultAsDouble'", nullValue());
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/triangle/{a}/{b}/{c}
    */
    @Test(timeout = 60000)
    public void test_35_getOnTrianglReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/triangle/311/311/96?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", numberMatches(2.0))
                .body("'resultAsDouble'", nullValue());
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/triangle/{a}/{b}/{c}
    */
    @Test(timeout = 60000)
    public void test_36_getOnTrianglReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_57_XYZ_")
                .get(baseUrlOfSut + "/api/triangle/883/956/626?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", numberMatches(1.0))
                .body("'resultAsDouble'", nullValue());
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/triangle/{a}/{b}/{c}
    */
    @Test(timeout = 60000)
    public void test_37_getOnTrianglReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/triangle/481/211/-536870521?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", numberMatches(0.0))
                .body("'resultAsDouble'", nullValue());
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/triangle/{a}/{b}/{c}
    */
    @Test(timeout = 60000)
    public void test_38_getOnTrianglReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_82_XYZ_")
                .get(baseUrlOfSut + "/api/triangle/-3999/262578/507?EMextraParam123=_EM_81_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", numberMatches(0.0))
                .body("'resultAsDouble'", nullValue());
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/triangle/{a}/{b}/{c}
    */
    @Test(timeout = 60000)
    public void test_39_getOnTrianglReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/triangle/171/-261447/438")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", numberMatches(0.0))
                .body("'resultAsDouble'", nullValue());
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/triangle/{a}/{b}/{c}
    */
    @Test(timeout = 60000)
    public void test_40_getOnTrianglReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_22_XYZ_")
                .get(baseUrlOfSut + "/api/triangle/852/147/32?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", numberMatches(0.0))
                .body("'resultAsDouble'", nullValue());
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/triangle/{a}/{b}/{c}
    */
    @Test(timeout = 60000)
    public void test_41_getOnTrianglReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/triangle/651/636/636")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", numberMatches(2.0))
                .body("'resultAsDouble'", nullValue());
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/triangle/{a}/{b}/{c}
    */
    @Test(timeout = 60000)
    public void test_42_getOnTrianglReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/triangle/496/496/496")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", numberMatches(3.0))
                .body("'resultAsDouble'", nullValue());
    }


}
