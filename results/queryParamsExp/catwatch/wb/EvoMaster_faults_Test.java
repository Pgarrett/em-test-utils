import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.sql.dsl.SqlDsl.sql;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-02-09T18:28:05.495-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 85 tests
 * <br>
*  Covered targets: 1950
 * <br>
*  Used time: 0h 20m 47s
 * <br>
*  Needed budget for current results: 100%
 * <br>
*  This file contains test cases that are likely to indicate faults.
*/
public class EvoMaster_faults_Test {

    
    private static final SutHandler controller = new em.embedded.org.zalando.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetDatabase(Arrays.asList("CONTRIBUTOR","LANGUAGE_LIST","MAINTAINERS","PROJECT","STATISTICS"));
        controller.resetStateOfSUT();
    }
    
    
    
    
    /**
    * Calls:
    * (500) GET:/statistics/contributors
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_0_getOnStatisticsContributorsWithQueryParamsShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/StatisticsApi_165_statisticsContributorGet GET:/statistics/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> Response status 500 not defined for path '/statistics/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "organizations=MVlDuEhDo3QwxY&" + 
                    "EMextraParam123=_EM_1_XYZ_")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/StatisticsApi_165_statisticsContributorGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IndexOutOfBoundsException"))
                .body("'message'", containsString("toIndex = 10"))
                .body("'path'", containsString("/statistics/contributors"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/statistics/projects
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_1_getOnProjectsShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/StatisticsApi_132_statisticsProjectGet GET:/statistics/projects
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> Response status 500 not defined for path '/statistics/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "gQlvulxTrsBy8H")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "organizations=Ze&" + 
                    "q=g7_Bn7bDjV&" + 
                    "limit=R2OIneko6gNoIg&" + 
                    "sortBy=JbbmA0t6eAR9M")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/StatisticsApi_132_statisticsProjectGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IndexOutOfBoundsException"))
                .body("'message'", containsString("toIndex = 10"))
                .body("'path'", containsString("/statistics/projects"));
    }
    
    
    /**
    * Calls:
    * 1 - (500) GET:/statistics/projects
    * 2 - (403) GET:/statistics/languages
    * Found 3 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_2_getOnStatisticsLanguagesWithQueryParamsShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/StatisticsApi_132_statisticsProjectGet GET:/statistics/projects
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> Response status 500 not defined for path '/statistics/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/projects")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/StatisticsApi_132_statisticsProjectGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IndexOutOfBoundsException"))
                .body("'message'", containsString("toIndex = 10"))
                .body("'path'", containsString("/statistics/projects"));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/languages -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_6_XYZ_")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "end_date=VzLQwzFN8&" + 
                    "access_token=GU")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (500) GET:/statistics/contributors
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_3_getOnStatisticsContributorsShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/StatisticsApi_165_statisticsContributorGet GET:/statistics/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> Response status 500 not defined for path '/statistics/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/statistics/contributors")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/StatisticsApi_165_statisticsContributorGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IndexOutOfBoundsException"))
                .body("'message'", containsString("toIndex = 10"))
                .body("'path'", containsString("/statistics/contributors"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/contributors
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_4_getOnContributorsShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/ContributorsApi_221_validate GET:/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=1hiyRv&" + 
                    "offset=861&" + 
                    "start_date=_EM_7_XYZ_&" + 
                    "sortBy=_EM_8_XYZ_&" + 
                    "q=GziNM_rHbO3gn")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/ContributorsApi_221_validate
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
                .body("'message'", containsString("sortBy must be empty or have a valid value but was _EM_8_XYZ_. Valid values are organizationalCommitsCount,organizationalProjectsCount,personalCommitsCount,personalProjectsCount,organizationName,name"))
                .body("'path'", containsString("/contributors"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/contributors
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_5_getOnContributorsShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/ContributorsApi_221_validate GET:/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=_EM_793_XYZ_&" + 
                    "limit=772&" + 
                    "start_date=_EM_794_XYZ_&" + 
                    "sortBy=_EM_795_XYZ_&" + 
                    "q=0D")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/ContributorsApi_221_validate
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
                .body("'message'", containsString("sortBy must be empty or have a valid value but was _EM_795_XYZ_. Valid values are organizationalCommitsCount,organizationalProjectsCount,personalCommitsCount,personalProjectsCount,organizationName,name"))
                .body("'path'", containsString("/contributors"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/contributors
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_6_getOnContributorsShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/config/DateUtil_15_iso8601 GET:/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "_EM_896_XYZ_")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=BY6G1E&" + 
                    "limit=792&" + 
                    "offset=968&" + 
                    "start_date=fYwfy%2BUj8X&" + 
                    "end_date=DByP8tXDJTJg&" + 
                    "sortBy=&" + 
                    "q=rTVb")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/config/DateUtil_15_iso8601
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.RuntimeException"))
                .body("'message'", containsString("java.text.ParseException: Unparseable date: \"DByP8tXDJTJg\""))
                .body("'path'", containsString("/contributors"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/contributors
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_7_getOnContributorsShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/config/DateUtil_15_iso8601 GET:/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=BY6G1E&" + 
                    "limit=792&" + 
                    "offset=970&" + 
                    "start_date=fYwfy3Uj8X&" + 
                    "sortBy=")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/config/DateUtil_15_iso8601
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.RuntimeException"))
                .body("'message'", containsString("java.text.ParseException: Unparseable date: \"fYwfy3Uj8X\""))
                .body("'path'", containsString("/contributors"));
    }
    
    
    /**
    * Calls:
    * 1 - (500) GET:/contributors
    * 2 - (400) GET:/projects
    * Found 3 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_8_getOnProjectsShowsFaults_100_200UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 44L)
                .d("ID", "454")
                .d("ORGANIZATION_ID", "291")
                .d("SNAPSHOT_DATE", "\"2020-06-07 21:21:01\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"FTkQUJ\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "-1073739707")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "847")
                .d("PERSONAL_COMMITS_COUNT", "0")
                .d("PERSONAL_PROJECTS_COUNT", "NULL")
                .d("URL", "\"_EM_428_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/config/DateUtil_15_iso8601 GET:/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=_EM_1065_XYZ_&" + 
                    "limit=826&" + 
                    "end_date=x&" + 
                    "sortBy=")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/config/DateUtil_15_iso8601
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.RuntimeException"))
                .body("'message'", containsString("java.text.ParseException: Unparseable date: \"x\""))
                .body("'path'", containsString("/contributors"));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/projects -> Response status 400 not defined for path '/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "W")
                .header("X-Organizations", "=")
                .get(baseUrlOfSut + "/projects?" + 
                    "limit=-16119&" + 
                    "offset=2615&" + 
                    "start_date=1943-09-08T03%3A11%3A51%2B18%3A35&" + 
                    "end_date=2036-08-29T16%3A60%3A31-12%3A16&" + 
                    "q=ZKTbsVEDPJw4vD8w")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'exception'", containsString("org.springframework.web.method.annotation.MethodArgumentTypeMismatchException"))
                .body("'message'", containsString("Failed to convert value of type 'java.lang.String' to required type 'java.util.Date'; nested exception is org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [@io.swagger.annotations.ApiParam @org.springframework.web.bind.annotation.RequestParam @org.springframework.format.annotation.DateTimeFormat java.util.Date] for value '2036-08-29T16:60:31-12:16'; nested exception is java.lang.IllegalArgumentException: Parse attempt failed for value [2036-08-29T16:60:31-12:16]"))
                .body("'path'", containsString("/projects"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/contributors
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_9_getOnContributorsShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/ContributorsApi_128_contributorsGet GET:/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "qtJYtVEG8q")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=XEAL_lZNEwWNtW&" + 
                    "limit=159")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/ContributorsApi_128_contributorsGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.UnsupportedOperationException"))
                .body("'message'", containsString("this parameter configuration is not implemented yet .. start date, end date required atm"))
                .body("'path'", containsString("/contributors"));
    }
    
    
    /**
    * Calls:
    * 1 - (403) POST:/config/scoring.project
    * 2 - (403) POST:/config/scoring.project
    * 3 - (null) GET:/fetch
    * Found 2 potential faults of type-code 200
    */
    @Test(timeout = 60000)
    public void test_10_getOnFetchReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "_EM_18_XYZ_")
                .contentType("application/json")
                .post(baseUrlOfSut + "/config/scoring.project")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" jY9cdTPqrrVj1nqM ")
                .post(baseUrlOfSut + "/config/scoring.project?" + 
                    "access_token=8fRX29&" + 
                    "end_date=8fRX29&" + 
                    "q=8fRX29&" + 
                    "organizations=8fRX29&" + 
                    "language=8fRX29")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        try{
            given().accept("*/*")
                    .header("x-EMextraHeader123", "")
                    .header("X-Organizations", "2Bo2McdVb2jDye")
                    .get(baseUrlOfSut + "/fetch?start_date=GyGcQpiFymJhqho");
        } catch(Exception e){
        }
    }
    
    
    /**
    * Calls:
    * 1 - (403) POST:/config/scoring.project
    * 2 - (403) POST:/config/scoring.project
    * 3 - (null) GET:/fetch
    * Found 2 potential faults of type-code 200
    */
    @Test(timeout = 60000)
    public void test_11_getOnFetchReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .post(baseUrlOfSut + "/config/scoring.project?access_token=FFILToUX4")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" jY9cdTPqrrVj1nqM ")
                .post(baseUrlOfSut + "/config/scoring.project?" + 
                    "end_date=8fRX29&" + 
                    "offset=8fRX29&" + 
                    "organizations=8fRX29&" + 
                    "limit=8fRX29&" + 
                    "sortBy=8fRX29&" + 
                    "language=8fRX29&" + 
                    "start_date=8fRX29")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
        
        try{
            given().accept("*/*")
                    .header("x-EMextraHeader123", "")
                    .header("x-organizations", "mxdMRmrdChko99")
                    .get(baseUrlOfSut + "/fetch?" + 
                        "organizations=qxOjsr3Daywiy85E&" + 
                        "start_date=ivhD");
        } catch(Exception e){
        }
    }
    
    
    /**
    * Calls:
    * 1 - (403) GET:/statistics/contributors
    * 2 - (500) GET:/languages
    * Found 3 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_12_getOnLanguagesWithQueryParamsNegativeLimitShowsFaults_100_200() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "end_date=FU&" + 
                    "access_token=jnRJNi8tZQAHUr")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/service/LanguageService_36_filterLanguages GET:/languages
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/languages -> Response status 500 not defined for path '/languages'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_13_XYZ_")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=_EM_142_XYZ_&" + 
                    "limit=-913&" + 
                    "q=mLjBpMf6hKPe1")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/service/LanguageService_36_filterLanguages
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
                .body("'message'", containsString("-913"))
                .body("'path'", containsString("/languages"));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/languages
    * 2 - (400) GET:/statistics/languages
    * 3 - (null) GET:/fetch
    * Found 2 potential faults of type-code 200
    */
    @Test(timeout = 60000)
    public void test_13_getOnFetchReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 108L)
                .d("ID", "796")
                .d("SNAPSHOT_DATE", "\"2053-04-24 11:13:00\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "441")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "916")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "704")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("CONTRIBUTOR", 109L)
                .d("ID", "699")
                .d("ORGANIZATION_ID", "680")
                .d("SNAPSHOT_DATE", "\"1915-02-17 17:06:18\"")
                .d("NAME", "\"P\"")
                .d("ORGANIZATION_NAME", "\"9vD19GdfODXmHTYx\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "345")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "NULL")
                .d("PERSONAL_COMMITS_COUNT", "NULL")
                .d("PERSONAL_PROJECTS_COUNT", "157")
                .d("URL", "NULL")
            .and().insertInto("PROJECT", 110L)
                .d("COMMITS_COUNT", "66")
                .d("CONTRIBUTORS_COUNT", "1909363230")
                .d("DESCRIPTION", "\"fST8njcNaIA\"")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "40")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "\"Spk\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"daneRg5\"")
                .d("SCORE", "443")
                .d("SNAPSHOT_DATE", "NULL")
                .d("STARS_COUNT", "330")
                .d("URL", "\"6UTsTXEfhPTP\"")
                .d("TITLE", "NULL")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/languages -> Response status 400 not defined for path '/languages'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "itTnWuiKUOVtC")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=680&" + 
                    "q=b&" + 
                    "access_token=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("invalid_request"))
                .body("'error_description'", containsString("Access Token not valid"));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/languages -> Response status 400 not defined for path '/statistics/languages'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "680")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "organizations=680&" + 
                    "start_date=Wx8gzf&" + 
                    "end_date=4APY&" + 
                    "access_token=&" + 
                    "q=b")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("invalid_request"))
                .body("'error_description'", containsString("Access Token not valid"));
        
        try{
            given().accept("*/*")
                    .header("x-EMextraHeader123", "")
                    .get(baseUrlOfSut + "/fetch");
        } catch(Exception e){
        }
    }
    
    
    /**
    * Calls:
    * 1 - (500) GET:/statistics/projects
    * 2 - (403) GET:/export
    * 3 - (200) GET:/statistics/languages
    * 4 - (403) GET:/fetch
    * Found 4 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_14_getOnFetchShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/StatisticsApi_132_statisticsProjectGet GET:/statistics/projects
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> Response status 500 not defined for path '/statistics/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/projects?q=_EM_1015_XYZ_")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/StatisticsApi_132_statisticsProjectGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IndexOutOfBoundsException"))
                .body("'message'", containsString("toIndex = 10"))
                .body("'path'", containsString("/statistics/projects"));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "gQqz8lDKA")
                .get(baseUrlOfSut + "/export?" + 
                    "access_token=pcJfW_NhX&" + 
                    "end_date=_EM_1019_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "OH")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "organizations=MRfbK3XbIj2ii&" + 
                    "q=98zYR5&" + 
                    "offset=_EM_1022_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/fetch -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "FY5bkDq78p")
                .get(baseUrlOfSut + "/fetch?access_token=6XWNznGcrjuRvoa")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * 1 - (500) GET:/contributors
    * 2 - (403) GET:/statistics/contributors
    * Found 3 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_15_getOnStatisticsContributorsWithQueryParamsEmptyOrganizations() throws Exception {
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/ContributorsApi_128_contributorsGet GET:/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=&" + 
                    "offset=133&" + 
                    "q=s4tjbD3YL9fZd0bI&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/ContributorsApi_128_contributorsGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.UnsupportedOperationException"))
                .body("'message'", containsString("this parameter configuration is not implemented yet .. start date, end date required atm"))
                .body("'path'", containsString("/contributors"));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "organizations=&" + 
                    "access_token=VyxDKAeWOPjBW")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * 1 - (403) GET:/projects
    * 2 - (403) POST:/config/scoring.project
    * 3 - (500) GET:/statistics/projects
    * 4 - (403) POST:/import
    * 5 - (403) POST:/import
    * 6 - (403) GET:/statistics/contributors
    * Found 7 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_16_getOnStatisticsContributorsWithQueryParamsShowsFaults_100_200UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 65L)
                .d("COMMITS_COUNT", "638")
                .d("CONTRIBUTORS_COUNT", "183")
                .d("DESCRIPTION", "\"HcZ9G84GL\"")
                .d("FORKS_COUNT", "891")
                .d("GIT_HUB_PROJECT_ID", "705")
                .d("LAST_PUSHED", "\"yPJR9yfUNfExafuo\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"QtSCVr86vL\"")
                .d("PRIMARY_LANGUAGE", "NULL")
                .d("SCORE", "NULL")
                .d("SNAPSHOT_DATE", "\"1998-05-31 19:27:15\"")
                .d("STARS_COUNT", "NULL")
                .d("URL", "\"aQgu3\"")
                .d("TITLE", "\"FHRCn3OrQ9twOQyi\"")
                .d("IMAGE", "\"_EM_597_XYZ_\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("STATISTICS", 66L)
                .d("ID", "912")
                .d("SNAPSHOT_DATE", "\"2075-12-13 16:34:40\"")
                .d("ALL_CONTRIBUTORS_COUNT", "535")
                .d("ALL_FORKS_COUNT", "427")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "585")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "\"QtSCVr86vL\"")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "779")
                .d("TAGS_COUNT", "598")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "933")
            .and().insertInto("CONTRIBUTOR", 67L)
                .d("ID", "7")
                .d("ORGANIZATION_ID", "936")
                .d("SNAPSHOT_DATE", "\"2052-09-07 02:34:59\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "555")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "NULL")
                .d("PERSONAL_COMMITS_COUNT", "NULL")
                .d("PERSONAL_PROJECTS_COUNT", "113")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/projects -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "nPiQCmbl1p0k7n")
                .get(baseUrlOfSut + "/projects?" + 
                    "organizations=QtSCVr86vL&" + 
                    "limit=325&" + 
                    "q=_EM_598_XYZ_&" + 
                    "language=YoChMWUziq0Ot1&" + 
                    "access_token=ozRGLX9L01")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .post(baseUrlOfSut + "/config/scoring.project")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/StatisticsApi_132_statisticsProjectGet GET:/statistics/projects
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> Response status 500 not defined for path '/statistics/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "QtSCVr86vL")
                .get(baseUrlOfSut + "/statistics/projects")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/StatisticsApi_132_statisticsProjectGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IndexOutOfBoundsException"))
                .body("'message'", containsString("toIndex = 10"))
                .body("'path'", containsString("/statistics/projects"));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/import -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"contributors\": [ " + 
                    " { " + 
                    " \"key\": { " + 
                    " \"id\": 786, " + 
                    " \"organizationId\": 581 " + 
                    " }, " + 
                    " \"loginId\": \"XzldxiiQDrweMK\", " + 
                    " \"organizationId\": 895, " + 
                    " \"personalCommitsCount\": -1164382957, " + 
                    " \"personalProjectsCount\": 190 " + 
                    " } " + 
                    " ], " + 
                    " \"projects\": [ " + 
                    " { " + 
                    " \"contributorsCount\": 700, " + 
                    " \"externalContributorsCount\": 311, " + 
                    " \"gitHubProjectId\": 611, " + 
                    " \"image\": \"LL7k\", " + 
                    " \"languageList\": [ " + 
                    " \"_EM_599_XYZ_\", " + 
                    " \"Sa5TjF9QiHw\", " + 
                    " \"_EM_600_XYZ_\", " + 
                    " \"Mb2AgOHBdykT\", " + 
                    " \"EXL3W5j_yZ1Ved\" " + 
                    " ], " + 
                    " \"lastPushed\": \"UgkF8\", " + 
                    " \"maintainers\": [ " + 
                    " \"HXT1\", " + 
                    " \"_EM_601_XYZ_\", " + 
                    " \"_EM_602_XYZ_\" " + 
                    " ], " + 
                    " \"organizationName\": \"qBVd85\", " + 
                    " \"snapshotDate\": \"1989-12-16T09:47:23.679+00:08\", " + 
                    " \"starsCount\": 128, " + 
                    " \"title\": \"wVZcXaBKUv9SD\" " + 
                    " }, " + 
                    " { " + 
                    " \"contributorsCount\": 53, " + 
                    " \"externalContributorsCount\": 336, " + 
                    " \"lastPushed\": \"6Etqsg_NuB3ug\", " + 
                    " \"maintainers\": [ " + 
                    " \"g0vpZZf\", " + 
                    " \"eg3\", " + 
                    " \"ybbRuiEZpoM4\", " + 
                    " \"xdkSusyDS\", " + 
                    " \"uVgtoySy7\" " + 
                    " ], " + 
                    " \"snapshotDate\": \"2072-03-13T-1:47:40Z\", " + 
                    " \"starsCount\": 294, " + 
                    " \"title\": \"ZGBfgUDL4HgEc\" " + 
                    " }, " + 
                    " { " + 
                    " \"description\": \"M45IB7\", " + 
                    " \"languageList\": [ " + 
                    " \"NNHDsG\", " + 
                    " \"rdpgq5_\" " + 
                    " ], " + 
                    " \"maintainers\": [ " + 
                    " \"_EM_609_XYZ_\", " + 
                    " \"ZIvCx4m56gBQfG\", " + 
                    " \"I\", " + 
                    " \"2p\" " + 
                    " ], " + 
                    " \"primaryLanguage\": \"_EM_611_XYZ_\", " + 
                    " \"starsCount\": 560 " + 
                    " }, " + 
                    " { " + 
                    " \"commitsCount\": 345, " + 
                    " \"contributorsCount\": 969, " + 
                    " \"description\": \"WlmfxBaFBo38ws1Y\", " + 
                    " \"externalContributorsCount\": 334, " + 
                    " \"gitHubProjectId\": 124, " + 
                    " \"image\": \"_EM_614_XYZ_\", " + 
                    " \"name\": \"_EM_619_XYZ_\", " + 
                    " \"organizationName\": \"pO\", " + 
                    " \"primaryLanguage\": \"rANx\", " + 
                    " \"score\": 865, " + 
                    " \"snapshotDate\": \"2081-12-03T21:00:00-02:57\", " + 
                    " \"starsCount\": 821 " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/import")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/import -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"contributors\": [ " + 
                    " { " + 
                    " \"id\": 661, " + 
                    " \"key\": {}, " + 
                    " \"organizationId\": 308, " + 
                    " \"organizationName\": \"PfFhojLOycoa\", " + 
                    " \"organizationalCommitsCount\": 643, " + 
                    " \"organizationalProjectsCount\": 293, " + 
                    " \"personalCommitsCount\": 339, " + 
                    " \"snapshotDate\": \"2023-08-30T01:54:54.294-08:21\", " + 
                    " \"url\": \"\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": -1141317063, " + 
                    " \"loginId\": \"_EM_622_XYZ_\", " + 
                    " \"organizationId\": -2009566287515908708, " + 
                    " \"organizationalProjectsCount\": 822, " + 
                    " \"personalCommitsCount\": 328, " + 
                    " \"snapshotDate\": \"1922-11-29T17:18:21.707Z\", " + 
                    " \"url\": \"KfovgseLBQ\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 579, " + 
                    " \"loginId\": \"HP5xWrtAiKnF\", " + 
                    " \"organizationalProjectsCount\": 384, " + 
                    " \"personalCommitsCount\": 709, " + 
                    " \"personalProjectsCount\": 884, " + 
                    " \"url\": \"D1ir8\" " + 
                    " }, " + 
                    " { " + 
                    " \"name\": \"CUsp1M\", " + 
                    " \"organizationalCommitsCount\": 292, " + 
                    " \"organizationalProjectsCount\": 421, " + 
                    " \"snapshotDate\": \"2009-09-13T08:19:01-01:43\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 9, " + 
                    " \"key\": { " + 
                    " \"id\": 389, " + 
                    " \"snapshotDate\": \"1978-10-01T10:51:54.280+13:21\" " + 
                    " }, " + 
                    " \"loginId\": \"fmTR\", " + 
                    " \"organizationName\": \"uamzPTLIv7a0K\", " + 
                    " \"organizationalProjectsCount\": 304, " + 
                    " \"personalCommitsCount\": 973, " + 
                    " \"snapshotDate\": \"1986-02-22T07:17:41.404Z\", " + 
                    " \"url\": \"_EM_625_XYZ_\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/import")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "organizations=QtSCVr86vL&" + 
                    "end_date=1983-05-16T06%3A32%3A47.756-15%3A34&" + 
                    "access_token=ozRGLX9L01")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * 1 - (403) GET:/statistics/projects
    * 2 - (403) GET:/projects
    * 3 - (403) GET:/statistics/languages
    * 4 - (403) GET:/fetch
    * 5 - (500) GET:/contributors
    * 6 - (403) GET:/statistics/contributors
    * Found 7 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_17_getOnStatisticsContributorsWithQueryParamShowsFaults_100_200UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 62L)
                .d("COMMITS_COUNT", "66")
                .d("CONTRIBUTORS_COUNT", "312")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "624")
                .d("LAST_PUSHED", "\"K5Nz\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"H\"")
                .d("SCORE", "NULL")
                .d("SNAPSHOT_DATE", "NULL")
                .d("STARS_COUNT", "812")
                .d("URL", "NULL")
                .d("TITLE", "NULL")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("STATISTICS", 63L)
                .d("ID", "535")
                .d("SNAPSHOT_DATE", "\"2061-01-21 03:18:53\"")
                .d("ALL_CONTRIBUTORS_COUNT", "856")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "531")
                .d("MEMBERS_COUNT", "293")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "918")
                .d("PUBLIC_PROJECT_COUNT", "1806050392")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "769")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "D9g3MBaDS0bVze")
                .header("X-Organizations", "")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "organizations=D9g3MBaDS0bVze&" + 
                    "start_date=1963-04-17T03%3A43%3A33%2B03%3A51&" + 
                    "end_date=2004-03-05T18%3A32%3A28.428%2B15%3A02&" + 
                    "access_token=3Jto")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/projects -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "D9g3MBaDS0bVze")
                .header("X-Organizations", "")
                .get(baseUrlOfSut + "/projects?" + 
                    "limit=409&" + 
                    "offset=641&" + 
                    "start_date=1963-04-17T03%3A43%3A33%2B03%3A51&" + 
                    "end_date=2004-03-05T18%3A32%3A28.428%2B15%3A02&" + 
                    "sortBy=Dw&" + 
                    "access_token=3Jto")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/languages -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "foo")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "start_date=1963-04-17T03%3A43%3A33%2B03%3A51&" + 
                    "end_date=2004-03-05T18%3A32%3A28.428%2B15%3A02&" + 
                    "access_token=3Jto&" + 
                    "q=CVHl3&" + 
                    "offset=12SYTDoKfTUim&" + 
                    "limit=652bxImhKGLD2Q51&" + 
                    "sortBy=rz_mLrIJ")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/fetch -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "x1FH")
                .header("X-Organizations", "32HJx")
                .get(baseUrlOfSut + "/fetch?" + 
                    "access_token=RdtxP2xhDO&" + 
                    "end_date=3N&" + 
                    "start_date=nMC3Uzw5_R5KxGpZ")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/ContributorsApi_221_validate GET:/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "L2xQ62IlWAgYkK")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=k8T&" + 
                    "end_date=1FgMufKd&" + 
                    "sortBy=en87NJWKLXuVJE")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/ContributorsApi_221_validate
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
                .body("'message'", containsString("sortBy must be empty or have a valid value but was en87NJWKLXuVJE. Valid values are organizationalCommitsCount,organizationalProjectsCount,personalCommitsCount,personalProjectsCount,organizationName,name"))
                .body("'path'", containsString("/contributors"));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "L2xQ62IlWAgYkK")
                .get(baseUrlOfSut + "/statistics/contributors?access_token=pcKeTg15TcG1sJ")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/statistics/contributors
    * 2 - (403) GET:/statistics/projects
    * 3 - (500) GET:/contributors
    * 4 - (403) GET:/statistics/languages
    * 5 - (403) GET:/languages
    * 6 - (403) GET:/delete
    * 7 - (403) GET:/export
    * 8 - (403) POST:/config/scoring.project
    * Found 9 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_18_postOnScoring_projectShowsFaults_100_200UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 94L)
                .d("ID", "363")
                .d("ORGANIZATION_ID", "72")
                .d("SNAPSHOT_DATE", "\"1999-04-11 14:04:52\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "-55051888")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "880")
                .d("PERSONAL_COMMITS_COUNT", "317")
                .d("PERSONAL_PROJECTS_COUNT", "563")
                .d("URL", "\"-1\"")
            .and().insertInto("STATISTICS", 95L)
                .d("ID", "-1166537431552065536")
                .d("SNAPSHOT_DATE", "\"2019-06-20 04:24:35\"")
                .d("ALL_CONTRIBUTORS_COUNT", "147")
                .d("ALL_FORKS_COUNT", "-1073750088")
                .d("ALL_SIZE_COUNT", "467")
                .d("ALL_STARS_COUNT", "686")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "-1048427")
                .d("PROGRAM_LANGUAGES_COUNT", "408")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "707")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "524390")
            .and().insertInto("PROJECT", 96L)
                .d("COMMITS_COUNT", "883")
                .d("CONTRIBUTORS_COUNT", "451")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "420")
                .d("GIT_HUB_PROJECT_ID", "949")
                .d("LAST_PUSHED", "\"U_L\"")
                .d("NAME", "\"UCreBK9qRH\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"OPIkpF\"")
                .d("SCORE", "543")
                .d("SNAPSHOT_DATE", "\"1992-08-01 04:04:31\"")
                .d("STARS_COUNT", "0")
                .d("URL", "\"_EM_859_XYZ_\"")
                .d("TITLE", "\"Bikw9ai9\"")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> Response status 400 not defined for path '/statistics/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "_EM_914_XYZ_")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "organizations=_EM_914_XYZ_&" + 
                    "start_date=I")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Couldn't parse date string I."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "_EM_914_XYZ_")
                .header("X-Organizations", "_0rr7XaQA")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "start_date=&" + 
                    "end_date=WN30&" + 
                    "access_token=V1IpdER%5D%7EtY&" + 
                    "q=cS3fzl9m5_WTF&" + 
                    "offset=530&" + 
                    "limit=719&" + 
                    "sortBy=dnzVGXVLJy06o")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/config/DateUtil_15_iso8601 GET:/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=_EM_914_XYZ_&" + 
                    "offset=530&" + 
                    "start_date=I&" + 
                    "end_date=WN30&" + 
                    "q=cS3fzl9m5_WTF")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/config/DateUtil_15_iso8601
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.RuntimeException"))
                .body("'message'", containsString("java.text.ParseException: Unparseable date: \"WN30\""))
                .body("'path'", containsString("/contributors"));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/languages -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "end_date=WN30&" + 
                    "access_token=V1IpdER%5D%7EtY&" + 
                    "q=cS3fzl9m5_WTF&" + 
                    "offset=530&" + 
                    "limit=719")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/languages -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "_0rr7XaQA")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=_EM_914_XYZ_&" + 
                    "limit=719&" + 
                    "q=cS3fzl9m5_WTF&" + 
                    "access_token=V1IpdER%5D%7EtY")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/delete -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "_EM_914_XYZ_")
                .header("X-Organizations", "_0rr7XaQA")
                .get(baseUrlOfSut + "/delete?access_token=V1IpdER%5D%7EtY")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/export?" + 
                    "access_token=V1IpdER%5D%7EtY&" + 
                    "end_date=WN30&" + 
                    "organizations=")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("X-Organizations", "_0rr7XaQA")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" _EM_860_XYZ_ ")
                .post(baseUrlOfSut + "/config/scoring.project")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
    }
    
    
    /**
    * Calls:
    * 1 - (500) GET:/statistics/projects
    * 2 - (403) POST:/config/scoring.project
    * 3 - (403) GET:/projects
    * 4 - (200) GET:/statistics/languages
    * Found 4 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_19_getOnLanguagesShowsFaults_100_200UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 54L)
                .d("COMMITS_COUNT", "774")
                .d("CONTRIBUTORS_COUNT", "NULL")
                .d("DESCRIPTION", "\"m1XGtATlHo\"")
                .d("FORKS_COUNT", "2")
                .d("GIT_HUB_PROJECT_ID", "222")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "\"_EM_547_XYZ_\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "NULL")
                .d("SCORE", "NULL")
                .d("SNAPSHOT_DATE", "\"1954-05-25 17:52:10\"")
                .d("STARS_COUNT", "NULL")
                .d("URL", "\"_EM_549_XYZ_\"")
                .d("TITLE", "NULL")
                .d("IMAGE", "\"17LJv\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "1570205805")
            .and().insertInto("STATISTICS", 55L)
                .d("ID", "530")
                .d("SNAPSHOT_DATE", "\"1937-06-13 21:24:18\"")
                .d("ALL_CONTRIBUTORS_COUNT", "92")
                .d("ALL_FORKS_COUNT", "652")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "746")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "333")
                .d("PROGRAM_LANGUAGES_COUNT", "832")
                .d("PUBLIC_PROJECT_COUNT", "848")
                .d("TAGS_COUNT", "598")
                .d("TEAMS_COUNT", "383")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "-590466484")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/StatisticsApi_132_statisticsProjectGet GET:/statistics/projects
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> Response status 500 not defined for path '/statistics/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/projects?start_date=1910-03-28T18%3A09%3A16.643Z")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/StatisticsApi_132_statisticsProjectGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IndexOutOfBoundsException"))
                .body("'message'", containsString("toIndex = 10"))
                .body("'path'", containsString("/statistics/projects"));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("X-Organizations", "XYDHpC")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .post(baseUrlOfSut + "/config/scoring.project")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/projects -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "XYDHpC")
                .get(baseUrlOfSut + "/projects?" + 
                    "start_date=1910-03-28T18%3A09%3A16.643Z&" + 
                    "sortBy=LVPfBeWrJjTp87&" + 
                    "language=dvu&" + 
                    "access_token=VWQtyRY6OyT")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "organizations=&" + 
                    "start_date=1910-03-28T18%3A09%3A16.643Z")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * 1 - (403) GET:/statistics/contributors
    * 2 - (400) GET:/statistics/projects
    * 3 - (500) GET:/contributors
    * 4 - (403) GET:/statistics/languages
    * 5 - (403) GET:/languages
    * 6 - (403) GET:/delete
    * 7 - (200) GET:/export
    * 8 - (403) POST:/config/scoring.project
    * Found 32 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_20_postOnScoring_projectShowsFaults_100_200UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 94L)
                .d("ID", "363")
                .d("ORGANIZATION_ID", "72")
                .d("SNAPSHOT_DATE", "\"1999-04-11 14:04:52\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "880")
                .d("PERSONAL_COMMITS_COUNT", "313")
                .d("PERSONAL_PROJECTS_COUNT", "579")
                .d("URL", "\"_EM_856_XYZ_\"")
            .and().insertInto("STATISTICS", 95L)
                .d("ID", "-1166537431552065536")
                .d("SNAPSHOT_DATE", "\"2019-06-20 04:24:35\"")
                .d("ALL_CONTRIBUTORS_COUNT", "147")
                .d("ALL_FORKS_COUNT", "368")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "102")
            .and().insertInto("PROJECT", 96L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "451")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "949")
                .d("LAST_PUSHED", "\"_EM_858_XYZ_\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"OPIkpF\"")
                .d("SCORE", "NULL")
                .d("SNAPSHOT_DATE", "\"1928-12-05 04:04:31\"")
                .d("STARS_COUNT", "107")
                .d("URL", "\"_EM_859_XYZ_\"")
                .d("TITLE", "\"Bikw9ai9\"")
                .d("IMAGE", "\"_EM_593_XYZ_\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "72")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "organizations=72&" + 
                    "end_date=WO3&" + 
                    "access_token=X1IpdERUvtY")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> Response status 400 not defined for path '/statistics/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "72")
                .header("X-Organizations", "_0rr7XaQA")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "organizations=72&" + 
                    "end_date=WO3&" + 
                    "q=cS3fzl9m5_WTF&" + 
                    "offset=530&" + 
                    "sortBy=dnzVGXVLJy06o")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Couldn't parse date string WO3."));
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/ContributorsApi_221_validate GET:/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=72&" + 
                    "end_date=WO3&" + 
                    "sortBy=dnzVGXVLJy06o&" + 
                    "q=cS3fzl9m5_WTF")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/ContributorsApi_221_validate
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
                .body("'message'", containsString("sortBy must be empty or have a valid value but was dnzVGXVLJy06o. Valid values are organizationalCommitsCount,organizationalProjectsCount,personalCommitsCount,personalProjectsCount,organizationName,name"))
                .body("'path'", containsString("/contributors"));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/languages -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "end_date=WO3&" + 
                    "access_token=X1IpdERUvtY&" + 
                    "q=cS3fzl9m5_WTF&" + 
                    "offset=530")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/languages -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "_0rr7XaQA")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=72&" + 
                    "limit=719&" + 
                    "offset=530&" + 
                    "q=cS3fzl9m5_WTF&" + 
                    "access_token=X1IpdERUvtY")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/delete -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "72")
                .get(baseUrlOfSut + "/delete?access_token=X1IpdERUvtY")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/key/snapshotDate'] String "1999-04-11T14:04:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/name'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/organizationName'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/organizationalCommitsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/snapshotDate'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/commitsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/description'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/externalContributorsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/forksCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/name'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/organizationName'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/score'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/snapshotDate'] String "1928-12-05T04:04:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/allSizeCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/allStarsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/key/snapshotDate'] String "2019-06-20T04:24:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/membersCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/organizationName'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/privateProjectCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/programLanguagesCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/publicProjectCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/snapshotDate'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/tagsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/teamsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/export?" + 
                    "organizations=72&" + 
                    "start_date=I")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'contributors'.size()", equalTo(1))
                .body("'contributors'[0].'key'.'organizationId'", numberMatches(72.0))
                .body("'contributors'[0].'key'.'snapshotDate'", containsString("1999-04-11T14:04:52"))
                .body("'contributors'[0].'loginId'", containsString(""))
                .body("'contributors'[0].'name'", nullValue())
                .body("'contributors'[0].'url'", containsString("_EM_856_XYZ_"))
                .body("'contributors'[0].'organizationalCommitsCount'", nullValue())
                .body("'contributors'[0].'personalCommitsCount'", numberMatches(313.0))
                .body("'contributors'[0].'personalProjectsCount'", numberMatches(579.0))
                .body("'contributors'[0].'organizationalProjectsCount'", numberMatches(880.0))
                .body("'contributors'[0].'organizationName'", nullValue())
                .body("'contributors'[0].'organizationId'", numberMatches(72.0))
                .body("'contributors'[0].'snapshotDate'", numberMatches(9.23850292E11))
                .body("'projects'.size()", equalTo(1))
                .body("'projects'[0].'languageList'.size()", equalTo(0))
                .body("'projects'[0].'gitHubProjectId'", numberMatches(949.0))
                .body("'projects'[0].'snapshotDate'", containsString("1928-12-05T04:04:31"))
                .body("'projects'[0].'name'", nullValue())
                .body("'projects'[0].'title'", containsString("Bikw9ai9"))
                .body("'projects'[0].'image'", containsString("_EM_593_XYZ_"))
                .body("'projects'[0].'organizationName'", nullValue())
                .body("'projects'[0].'url'", containsString("_EM_859_XYZ_"))
                .body("'projects'[0].'description'", nullValue())
                .body("'projects'[0].'starsCount'", numberMatches(107.0))
                .body("'projects'[0].'commitsCount'", nullValue())
                .body("'projects'[0].'forksCount'", nullValue())
                .body("'projects'[0].'contributorsCount'", numberMatches(451.0))
                .body("'projects'[0].'externalContributorsCount'", nullValue())
                .body("'projects'[0].'score'", nullValue())
                .body("'projects'[0].'lastPushed'", containsString("_EM_858_XYZ_"))
                .body("'projects'[0].'primaryLanguage'", containsString("OPIkpF"))
                .body("'projects'[0].'maintainers'.size()", equalTo(0))
                .body("'statistics'.size()", equalTo(1))
                .body("'statistics'[0].'key'.'snapshotDate'", containsString("2019-06-20T04:24:35"))
                .body("'statistics'[0].'privateProjectCount'", nullValue())
                .body("'statistics'[0].'publicProjectCount'", nullValue())
                .body("'statistics'[0].'membersCount'", nullValue())
                .body("'statistics'[0].'teamsCount'", nullValue())
                .body("'statistics'[0].'allContributorsCount'", numberMatches(147.0))
                .body("'statistics'[0].'externalContributorsCount'", numberMatches(102.0))
                .body("'statistics'[0].'allStarsCount'", nullValue())
                .body("'statistics'[0].'allForksCount'", numberMatches(368.0))
                .body("'statistics'[0].'allSizeCount'", nullValue())
                .body("'statistics'[0].'programLanguagesCount'", nullValue())
                .body("'statistics'[0].'tagsCount'", nullValue())
                .body("'statistics'[0].'organizationName'", nullValue())
                .body("'statistics'[0].'snapshotDate'", numberMatches(1.561015475E12));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .post(baseUrlOfSut + "/config/scoring.project")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
    }
    
    
    /**
    * Calls:
    * 1 - (403) GET:/statistics/contributors
    * 2 - (403) GET:/statistics/projects
    * 3 - (500) GET:/contributors
    * 4 - (403) GET:/statistics/languages
    * 5 - (403) GET:/languages
    * 6 - (403) GET:/delete
    * 7 - (200) GET:/export
    * 8 - (null) GET:/fetch
    * Found 22 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_21_getOnFetchShowsFaults_100_200UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 94L)
                .d("ID", "363")
                .d("ORGANIZATION_ID", "97")
                .d("SNAPSHOT_DATE", "\"1999-04-11 14:04:52\"")
                .d("NAME", "\"Po\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "0")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "880")
                .d("PERSONAL_COMMITS_COUNT", "233")
                .d("PERSONAL_PROJECTS_COUNT", "581")
                .d("URL", "\"_EM_856_XYZ_\"")
            .and().insertInto("STATISTICS", 95L)
                .d("ID", "-1166537431552065536")
                .d("SNAPSHOT_DATE", "\"2019-06-20 04:24:35\"")
                .d("ALL_CONTRIBUTORS_COUNT", "147")
                .d("ALL_FORKS_COUNT", "-261776")
                .d("ALL_SIZE_COUNT", "467")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "-3688")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "244")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "102")
            .and().insertInto("PROJECT", 96L)
                .d("COMMITS_COUNT", "883")
                .d("CONTRIBUTORS_COUNT", "-32317")
                .d("DESCRIPTION", "\"_EM_857_XYZ_\"")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "0")
                .d("LAST_PUSHED", "\"4l0Cz1il9\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"OPIkpF\"")
                .d("SCORE", "543")
                .d("SNAPSHOT_DATE", "\"1932-12-06 11:04:27\"")
                .d("STARS_COUNT", "107")
                .d("URL", "\"_EM_859_XYZ_\"")
                .d("TITLE", "\"nPHN2\"")
                .d("IMAGE", "\"_EM_884_XYZ_\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "0")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "end_date=TO4&" + 
                    "access_token=X1ItdELUvt")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "_EM_922_XYZ_")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "organizations=_EM_922_XYZ_&" + 
                    "start_date=&" + 
                    "access_token=X1ItdELUvt&" + 
                    "offset=_EM_921_XYZ_&" + 
                    "limit=-1429&" + 
                    "sortBy=dnzVGXVLJy06o&" + 
                    "language=OPIkpF")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/ContributorsApi_217_validate GET:/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "_EM_922_XYZ_")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=_EM_922_XYZ_&" + 
                    "limit=-1429&" + 
                    "start_date=I&" + 
                    "end_date=TO4&" + 
                    "sortBy=dnzVGXVLJy06o")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/ContributorsApi_217_validate
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
                .body("'message'", containsString("limit must be greater than zero but was -1429"))
                .body("'path'", containsString("/contributors"));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/languages -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "start_date=I&" + 
                    "end_date=TO4&" + 
                    "access_token=X1ItdELUvt&" + 
                    "q=cS3fzl9m5_WTF&" + 
                    "offset=_EM_921_XYZ_&" + 
                    "limit=-1429")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/languages -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=_EM_922_XYZ_&" + 
                    "limit=-1429&" + 
                    "q=cS3fzl9m5_WTF&" + 
                    "access_token=X1ItdELUvt")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/delete -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "_EM_922_XYZ_")
                .header("X-Organizations", "_0rr7XaQA")
                .get(baseUrlOfSut + "/delete?access_token=X1ItdELUvt")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/key/snapshotDate'] String "1999-04-11T14:04:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/organizationName'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/snapshotDate'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/forksCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/name'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/organizationName'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/snapshotDate'] String "1932-12-06T11:04:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/allStarsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/key/snapshotDate'] String "2019-06-20T04:24:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/membersCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/organizationName'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/privateProjectCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/publicProjectCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/snapshotDate'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/tagsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/export?" + 
                    "end_date=TO4&" + 
                    "organizations=_EM_922_XYZ_&" + 
                    "start_date=I")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'contributors'.size()", equalTo(1))
                .body("'contributors'[0].'key'.'organizationId'", numberMatches(97.0))
                .body("'contributors'[0].'key'.'snapshotDate'", containsString("1999-04-11T14:04:52"))
                .body("'contributors'[0].'loginId'", containsString(""))
                .body("'contributors'[0].'name'", containsString("Po"))
                .body("'contributors'[0].'url'", containsString("_EM_856_XYZ_"))
                .body("'contributors'[0].'organizationalCommitsCount'", numberMatches(0.0))
                .body("'contributors'[0].'personalCommitsCount'", numberMatches(233.0))
                .body("'contributors'[0].'personalProjectsCount'", numberMatches(581.0))
                .body("'contributors'[0].'organizationalProjectsCount'", numberMatches(880.0))
                .body("'contributors'[0].'organizationName'", nullValue())
                .body("'contributors'[0].'organizationId'", numberMatches(97.0))
                .body("'contributors'[0].'snapshotDate'", numberMatches(9.23850292E11))
                .body("'projects'.size()", equalTo(1))
                .body("'projects'[0].'languageList'.size()", equalTo(0))
                .body("'projects'[0].'gitHubProjectId'", numberMatches(0.0))
                .body("'projects'[0].'snapshotDate'", containsString("1932-12-06T11:04:27"))
                .body("'projects'[0].'name'", nullValue())
                .body("'projects'[0].'title'", containsString("nPHN2"))
                .body("'projects'[0].'image'", containsString("_EM_884_XYZ_"))
                .body("'projects'[0].'organizationName'", nullValue())
                .body("'projects'[0].'url'", containsString("_EM_859_XYZ_"))
                .body("'projects'[0].'description'", containsString("_EM_857_XYZ_"))
                .body("'projects'[0].'starsCount'", numberMatches(107.0))
                .body("'projects'[0].'commitsCount'", numberMatches(883.0))
                .body("'projects'[0].'forksCount'", nullValue())
                .body("'projects'[0].'contributorsCount'", numberMatches(-32317.0))
                .body("'projects'[0].'externalContributorsCount'", numberMatches(0.0))
                .body("'projects'[0].'score'", numberMatches(543.0))
                .body("'projects'[0].'lastPushed'", containsString("4l0Cz1il9"))
                .body("'projects'[0].'primaryLanguage'", containsString("OPIkpF"))
                .body("'projects'[0].'maintainers'.size()", equalTo(0))
                .body("'statistics'.size()", equalTo(1))
                .body("'statistics'[0].'key'.'snapshotDate'", containsString("2019-06-20T04:24:35"))
                .body("'statistics'[0].'privateProjectCount'", nullValue())
                .body("'statistics'[0].'publicProjectCount'", nullValue())
                .body("'statistics'[0].'membersCount'", nullValue())
                .body("'statistics'[0].'teamsCount'", numberMatches(244.0))
                .body("'statistics'[0].'allContributorsCount'", numberMatches(147.0))
                .body("'statistics'[0].'externalContributorsCount'", numberMatches(102.0))
                .body("'statistics'[0].'allStarsCount'", nullValue())
                .body("'statistics'[0].'allForksCount'", numberMatches(-261776.0))
                .body("'statistics'[0].'allSizeCount'", numberMatches(467.0))
                .body("'statistics'[0].'programLanguagesCount'", numberMatches(-3688.0))
                .body("'statistics'[0].'tagsCount'", nullValue())
                .body("'statistics'[0].'organizationName'", nullValue())
                .body("'statistics'[0].'snapshotDate'", numberMatches(1.561015475E12));
        
        try{
            given().accept("*/*")
                    .header("x-EMextraHeader123", "")
                    .header("x-organizations", "JSRSAFstG")
                    .header("X-Organizations", "ioW3b")
                    .get(baseUrlOfSut + "/fetch");
        } catch(Exception e){
        }
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/statistics/languages
    * 2 - (500) GET:/statistics/projects
    * 3 - (200) GET:/languages
    * 4 - (403) GET:/statistics/contributors
    * 5 - (null) GET:/fetch
    * Found 4 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_22_getOnFetchShowsFaults_100_200UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 103L)
                .d("ID", "448")
                .d("SNAPSHOT_DATE", "\"2081-09-02 08:16:35\"")
                .d("ALL_CONTRIBUTORS_COUNT", "388")
                .d("ALL_FORKS_COUNT", "117")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "409")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "408")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "577")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("PROJECT", 104L)
                .d("COMMITS_COUNT", "973")
                .d("CONTRIBUTORS_COUNT", "NULL")
                .d("DESCRIPTION", "\"AGnVghEttfyfna\"")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "346")
                .d("LAST_PUSHED", "\"K5Nz\"")
                .d("NAME", "\"0L\"")
                .d("ORGANIZATION_NAME", "\"452\"")
                .d("PRIMARY_LANGUAGE", "NULL")
                .d("SCORE", "NULL")
                .d("SNAPSHOT_DATE", "\"1981-03-02 06:22:32\"")
                .d("STARS_COUNT", "1540290647")
                .d("URL", "NULL")
                .d("TITLE", "NULL")
                .d("IMAGE", "\"X\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "0")
            .and().insertInto("CONTRIBUTOR", 105L)
                .d("ID", "783")
                .d("ORGANIZATION_ID", "452")
                .d("SNAPSHOT_DATE", "\"2029-12-22 04:35:38\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "394")
                .d("PERSONAL_COMMITS_COUNT", "727")
                .d("PERSONAL_PROJECTS_COUNT", "NULL")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/languages -> Response status 400 not defined for path '/statistics/languages'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "organizations=452&" + 
                    "end_date=JEr2OieAU9&" + 
                    "q=LOGpK7&" + 
                    "offset=Ivn")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Couldn't parse date string JEr2OieAU9."));
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/StatisticsApi_132_statisticsProjectGet GET:/statistics/projects
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> Response status 500 not defined for path '/statistics/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "QHm49RG7YUlWx")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "offset=Ivn&" + 
                    "limit=6VXdz9S4ANKYGlZ")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/StatisticsApi_132_statisticsProjectGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IndexOutOfBoundsException"))
                .body("'message'", containsString("toIndex = 10"))
                .body("'path'", containsString("/statistics/projects"));
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "QHm49RG7YUlWx")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=452&" + 
                    "offset=548")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "452")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "organizations=452&" + 
                    "end_date=JEr2OieAU9&" + 
                    "access_token=nukPqOCHYgub")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        try{
            given().accept("*/*")
                    .header("x-EMextraHeader123", "")
                    .header("X-Organizations", "QHm49RG7YUlWx")
                    .get(baseUrlOfSut + "/fetch");
        } catch(Exception e){
        }
    }
    
    
    /**
    * Calls:
    * 1 - (403) GET:/statistics/contributors
    * 2 - (400) GET:/statistics/projects
    * 3 - (500) GET:/contributors
    * 4 - (403) GET:/statistics/languages
    * 5 - (403) GET:/languages
    * 6 - (403) GET:/delete
    * 7 - (200) GET:/export
    * 8 - (null) GET:/fetch
    * Found 28 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_23_getOnFetchShowsFaults_100_200UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 94L)
                .d("ID", "363")
                .d("ORGANIZATION_ID", "77")
                .d("SNAPSHOT_DATE", "\"1999-04-11 14:04:52\"")
                .d("NAME", "\"Po\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "-55051888")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "880")
                .d("PERSONAL_COMMITS_COUNT", "297")
                .d("PERSONAL_PROJECTS_COUNT", "579")
                .d("URL", "\"_EM_856_XYZ_\"")
            .and().insertInto("STATISTICS", 95L)
                .d("ID", "-1166537431552065536")
                .d("SNAPSHOT_DATE", "\"2019-06-20 04:24:35\"")
                .d("ALL_CONTRIBUTORS_COUNT", "147")
                .d("ALL_FORKS_COUNT", "-261776")
                .d("ALL_SIZE_COUNT", "467")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "102")
            .and().insertInto("PROJECT", 96L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "451")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "263093")
                .d("LAST_PUSHED", "\"_EM_858_XYZ_\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"OPIkpF\"")
                .d("SCORE", "NULL")
                .d("SNAPSHOT_DATE", "\"1900-12-06 04:04:31\"")
                .d("STARS_COUNT", "107")
                .d("URL", "\"_EM_859_XYZ_\"")
                .d("TITLE", "\"_EM_879_XYZ_\"")
                .d("IMAGE", "\"_EM_593_XYZ_\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "77")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "organizations=77&" + 
                    "end_date=UO3&" + 
                    "access_token=X1ItdEJUvtY")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> Response status 400 not defined for path '/statistics/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "77")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "organizations=77&" + 
                    "start_date=I&" + 
                    "end_date=UO3&" + 
                    "q=cS3fzl9m5_WTF&" + 
                    "offset=530&" + 
                    "limit=719&" + 
                    "sortBy=dnzVGXVLJy06o&" + 
                    "language=OPIkpF")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Couldn't parse date string I."));
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/ContributorsApi_221_validate GET:/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=77&" + 
                    "sortBy=dnzVGXVLJy06o")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/ContributorsApi_221_validate
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
                .body("'message'", containsString("sortBy must be empty or have a valid value but was dnzVGXVLJy06o. Valid values are organizationalCommitsCount,organizationalProjectsCount,personalCommitsCount,personalProjectsCount,organizationName,name"))
                .body("'path'", containsString("/contributors"));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/languages -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "access_token=X1ItdEJUvtY&" + 
                    "offset=530&" + 
                    "limit=719")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/languages -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "_0rr7XaQA")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=77&" + 
                    "limit=719&" + 
                    "offset=530&" + 
                    "q=cS3fzl9m5_WTF&" + 
                    "access_token=X1ItdEJUvtY")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/delete -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "77")
                .header("X-Organizations", "_0rr7XaQA")
                .get(baseUrlOfSut + "/delete?access_token=X1ItdEJUvtY")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/key/snapshotDate'] String "1999-04-11T14:04:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/organizationName'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/snapshotDate'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/commitsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/description'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/externalContributorsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/forksCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/name'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/organizationName'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/score'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/snapshotDate'] String "1900-12-06T04:04:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/allStarsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/key/snapshotDate'] String "2019-06-20T04:24:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/membersCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/organizationName'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/privateProjectCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/programLanguagesCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/publicProjectCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/snapshotDate'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/tagsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/teamsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/export?" + 
                    "end_date=UO3&" + 
                    "start_date=I")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'contributors'.size()", equalTo(1))
                .body("'contributors'[0].'key'.'organizationId'", numberMatches(77.0))
                .body("'contributors'[0].'key'.'snapshotDate'", containsString("1999-04-11T14:04:52"))
                .body("'contributors'[0].'loginId'", containsString(""))
                .body("'contributors'[0].'name'", containsString("Po"))
                .body("'contributors'[0].'url'", containsString("_EM_856_XYZ_"))
                .body("'contributors'[0].'organizationalCommitsCount'", numberMatches(-5.5051888E7))
                .body("'contributors'[0].'personalCommitsCount'", numberMatches(297.0))
                .body("'contributors'[0].'personalProjectsCount'", numberMatches(579.0))
                .body("'contributors'[0].'organizationalProjectsCount'", numberMatches(880.0))
                .body("'contributors'[0].'organizationName'", nullValue())
                .body("'contributors'[0].'organizationId'", numberMatches(77.0))
                .body("'contributors'[0].'snapshotDate'", numberMatches(9.23850292E11))
                .body("'projects'.size()", equalTo(1))
                .body("'projects'[0].'languageList'.size()", equalTo(0))
                .body("'projects'[0].'gitHubProjectId'", numberMatches(263093.0))
                .body("'projects'[0].'snapshotDate'", containsString("1900-12-06T04:04:31"))
                .body("'projects'[0].'name'", nullValue())
                .body("'projects'[0].'title'", containsString("_EM_879_XYZ_"))
                .body("'projects'[0].'image'", containsString("_EM_593_XYZ_"))
                .body("'projects'[0].'organizationName'", nullValue())
                .body("'projects'[0].'url'", containsString("_EM_859_XYZ_"))
                .body("'projects'[0].'description'", nullValue())
                .body("'projects'[0].'starsCount'", numberMatches(107.0))
                .body("'projects'[0].'commitsCount'", nullValue())
                .body("'projects'[0].'forksCount'", nullValue())
                .body("'projects'[0].'contributorsCount'", numberMatches(451.0))
                .body("'projects'[0].'externalContributorsCount'", nullValue())
                .body("'projects'[0].'score'", nullValue())
                .body("'projects'[0].'lastPushed'", containsString("_EM_858_XYZ_"))
                .body("'projects'[0].'primaryLanguage'", containsString("OPIkpF"))
                .body("'projects'[0].'maintainers'.size()", equalTo(0))
                .body("'statistics'.size()", equalTo(1))
                .body("'statistics'[0].'key'.'snapshotDate'", containsString("2019-06-20T04:24:35"))
                .body("'statistics'[0].'privateProjectCount'", nullValue())
                .body("'statistics'[0].'publicProjectCount'", nullValue())
                .body("'statistics'[0].'membersCount'", nullValue())
                .body("'statistics'[0].'teamsCount'", nullValue())
                .body("'statistics'[0].'allContributorsCount'", numberMatches(147.0))
                .body("'statistics'[0].'externalContributorsCount'", numberMatches(102.0))
                .body("'statistics'[0].'allStarsCount'", nullValue())
                .body("'statistics'[0].'allForksCount'", numberMatches(-261776.0))
                .body("'statistics'[0].'allSizeCount'", numberMatches(467.0))
                .body("'statistics'[0].'programLanguagesCount'", nullValue())
                .body("'statistics'[0].'tagsCount'", nullValue())
                .body("'statistics'[0].'organizationName'", nullValue())
                .body("'statistics'[0].'snapshotDate'", numberMatches(1.561015475E12));
        
        try{
            given().accept("*/*")
                    .header("x-EMextraHeader123", "")
                    .get(baseUrlOfSut + "/fetch");
        } catch(Exception e){
        }
    }
    
    
    /**
    * Calls:
    * 1 - (403) GET:/statistics/contributors
    * 2 - (403) GET:/statistics/projects
    * 3 - (500) GET:/contributors
    * 4 - (200) GET:/statistics/languages
    * 5 - (200) GET:/languages
    * 6 - (403) GET:/delete
    * 7 - (200) GET:/export
    * 8 - (null) GET:/fetch
    * Found 19 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_24_getOnFetchShowsFaults_100_200UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 94L)
                .d("ID", "363")
                .d("ORGANIZATION_ID", "97")
                .d("SNAPSHOT_DATE", "\"1999-04-11 14:04:52\"")
                .d("NAME", "\"Po\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "-55051888")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "880")
                .d("PERSONAL_COMMITS_COUNT", "8489")
                .d("PERSONAL_PROJECTS_COUNT", "579")
                .d("URL", "\"9_Uynk7nWwI3ixL\"")
            .and().insertInto("STATISTICS", 95L)
                .d("ID", "-1166537431552065536")
                .d("SNAPSHOT_DATE", "\"2019-06-20 04:24:35\"")
                .d("ALL_CONTRIBUTORS_COUNT", "147")
                .d("ALL_FORKS_COUNT", "-261776")
                .d("ALL_SIZE_COUNT", "-15917")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "357")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "408")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "707")
                .d("TEAMS_COUNT", "276")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "101")
            .and().insertInto("PROJECT", 96L)
                .d("COMMITS_COUNT", "883")
                .d("CONTRIBUTORS_COUNT", "0")
                .d("DESCRIPTION", "\"_EM_857_XYZ_\"")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "263093")
                .d("LAST_PUSHED", "\"_EM_858_XYZ_\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"OPIkpF\"")
                .d("SCORE", "NULL")
                .d("SNAPSHOT_DATE", "\"1900-12-06 11:04:27\"")
                .d("STARS_COUNT", "107")
                .d("URL", "\"_EM_859_XYZ_\"")
                .d("TITLE", "\"_EM_1079_XYZ_\"")
                .d("IMAGE", "\"_EM_1080_XYZ_\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "689")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "97U")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "start_date=I&" + 
                    "end_date=UO3&" + 
                    "access_token=X1ItdELUvt%5B")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "organizations=97U&" + 
                    "start_date=I&" + 
                    "end_date=UO3&" + 
                    "access_token=X1ItdELUvt%5B&" + 
                    "q=cS3fzl9m5_WTF&" + 
                    "language=OPIkpF")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/ContributorsApi_221_validate GET:/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "97U")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=97U&" + 
                    "start_date=I&" + 
                    "sortBy=dnzVGXVLJy06o&" + 
                    "q=cS3fzl9m5_WTF")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/ContributorsApi_221_validate
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
                .body("'message'", containsString("sortBy must be empty or have a valid value but was dnzVGXVLJy06o. Valid values are organizationalCommitsCount,organizationalProjectsCount,personalCommitsCount,personalProjectsCount,organizationName,name"))
                .body("'path'", containsString("/contributors"));
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "q=cS3fzl9m5_WTF&" + 
                    "offset=530&" + 
                    "limit=71%3D")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=97U&" + 
                    "limit=719&" + 
                    "q=cS3fzl9m5_WTF")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/delete -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "97U")
                .get(baseUrlOfSut + "/delete?access_token=X1ItdELUvt%5B")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/key/snapshotDate'] String "1999-04-11T14:04:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/organizationName'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/snapshotDate'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/forksCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/name'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/organizationName'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/score'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/snapshotDate'] String "1900-12-06T11:04:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/allStarsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/key/snapshotDate'] String "2019-06-20T04:24:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/organizationName'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/privateProjectCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/publicProjectCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/snapshotDate'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/export?" + 
                    "end_date=UO3&" + 
                    "organizations=97U&" + 
                    "start_date=I")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'contributors'.size()", equalTo(1))
                .body("'contributors'[0].'key'.'organizationId'", numberMatches(97.0))
                .body("'contributors'[0].'key'.'snapshotDate'", containsString("1999-04-11T14:04:52"))
                .body("'contributors'[0].'loginId'", containsString(""))
                .body("'contributors'[0].'name'", containsString("Po"))
                .body("'contributors'[0].'url'", containsString("9_Uynk7nWwI3ixL"))
                .body("'contributors'[0].'organizationalCommitsCount'", numberMatches(-5.5051888E7))
                .body("'contributors'[0].'personalCommitsCount'", numberMatches(8489.0))
                .body("'contributors'[0].'personalProjectsCount'", numberMatches(579.0))
                .body("'contributors'[0].'organizationalProjectsCount'", numberMatches(880.0))
                .body("'contributors'[0].'organizationName'", nullValue())
                .body("'contributors'[0].'organizationId'", numberMatches(97.0))
                .body("'contributors'[0].'snapshotDate'", numberMatches(9.23850292E11))
                .body("'projects'.size()", equalTo(1))
                .body("'projects'[0].'languageList'.size()", equalTo(0))
                .body("'projects'[0].'gitHubProjectId'", numberMatches(263093.0))
                .body("'projects'[0].'snapshotDate'", containsString("1900-12-06T11:04:27"))
                .body("'projects'[0].'name'", nullValue())
                .body("'projects'[0].'title'", containsString("_EM_1079_XYZ_"))
                .body("'projects'[0].'image'", containsString("_EM_1080_XYZ_"))
                .body("'projects'[0].'organizationName'", nullValue())
                .body("'projects'[0].'url'", containsString("_EM_859_XYZ_"))
                .body("'projects'[0].'description'", containsString("_EM_857_XYZ_"))
                .body("'projects'[0].'starsCount'", numberMatches(107.0))
                .body("'projects'[0].'commitsCount'", numberMatches(883.0))
                .body("'projects'[0].'forksCount'", nullValue())
                .body("'projects'[0].'contributorsCount'", numberMatches(0.0))
                .body("'projects'[0].'externalContributorsCount'", numberMatches(689.0))
                .body("'projects'[0].'score'", nullValue())
                .body("'projects'[0].'lastPushed'", containsString("_EM_858_XYZ_"))
                .body("'projects'[0].'primaryLanguage'", containsString("OPIkpF"))
                .body("'projects'[0].'maintainers'.size()", equalTo(0))
                .body("'statistics'.size()", equalTo(1))
                .body("'statistics'[0].'key'.'snapshotDate'", containsString("2019-06-20T04:24:35"))
                .body("'statistics'[0].'privateProjectCount'", nullValue())
                .body("'statistics'[0].'publicProjectCount'", nullValue())
                .body("'statistics'[0].'membersCount'", numberMatches(357.0))
                .body("'statistics'[0].'teamsCount'", numberMatches(276.0))
                .body("'statistics'[0].'allContributorsCount'", numberMatches(147.0))
                .body("'statistics'[0].'externalContributorsCount'", numberMatches(101.0))
                .body("'statistics'[0].'allStarsCount'", nullValue())
                .body("'statistics'[0].'allForksCount'", numberMatches(-261776.0))
                .body("'statistics'[0].'allSizeCount'", numberMatches(-15917.0))
                .body("'statistics'[0].'programLanguagesCount'", numberMatches(408.0))
                .body("'statistics'[0].'tagsCount'", numberMatches(707.0))
                .body("'statistics'[0].'organizationName'", nullValue())
                .body("'statistics'[0].'snapshotDate'", numberMatches(1.561015475E12));
        
        try{
            given().accept("*/*")
                    .header("x-EMextraHeader123", "")
                    .header("x-organizations", "y4Mo_2P")
                    .header("X-Organizations", "e")
                    .get(baseUrlOfSut + "/fetch");
        } catch(Exception e){
        }
    }
    
    
    /**
    * Calls:
    * (200) GET:/config
    * Found 4 potential faults of type-code 200
    */
    @Test(timeout = 60000)
    public void test_25_getOnConfigWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/config -> [Path '/github.login'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/config -> [Path '/spring.database.driverClassName'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/config -> [Path '/spring.datasource.platform'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/config -> [Path '/spring.jpa.database'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/config?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'cache.path'", containsString("target/cache"))
                .body("'cache.size'", containsString("50"))
                .body("'endpoints.enabled'", containsString("false"))
                .body("'endpoints.health.enabled'", containsString("true"))
                .body("'github.login'", nullValue())
                .body("'organization.list'", containsString("zalando,zalando-stups,zalando-incubator"))
                .body("'schedule'", containsString("0 1 8 * * *"))
                .body("'scoring.project'", containsString("function(project) {var daysSinceLastPush = 0;if (project.lastPushed) {var tokens = project.lastPushed.split(\" \");var day = tokens[2];var month = tokens[1];var year = tokens[5];var lastPushedDate = new Date(day + ' ' + month + ' ' + year);var millisInDay = 86400000;daysSinceLastPush = Math.floor((new Date() - lastPushedDate) / millisInDay);}var maintainersPenalty = 0;if (project.maintainers.length < 2) {maintainersPenalty = 100;}return project.starsCount * 3 + project.forksCount * 2 + project.contributorsCount * 5 - daysSinceLastPush - maintainersPenalty}"))
                .body("'spring.database.driverClassName'", nullValue())
                .body("'spring.datasource.platform'", nullValue())
                .body("'spring.datasource.url'", containsString("jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;"))
                .body("'spring.datasource.username'", containsString("sa"))
                .body("'spring.jpa.database'", nullValue())
                .body("'spring.jpa.hibernate.ddl-auto'", containsString("update"));
    }
    
    
    /**
    * Calls:
    * 1 - (403) GET:/statistics/contributors
    * 2 - (200) GET:/export
    * 3 - (403) GET:/statistics/projects
    * Found 2 potential faults of type-code 200
    */
    @Test(timeout = 60000)
    public void test_26_getOnStatisticsProjectsWithQueryParamsEmptyOrganizations() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "organizations=&" + 
                    "start_date=92qJAVuRjE7TBmqu&" + 
                    "end_date=xWeDyTjEvs&" + 
                    "access_token=Un8sWR")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "M0LLwWyb1svkahl")
                .header("X-Organizations", "X9")
                .get(baseUrlOfSut + "/export?" + 
                    "end_date=uua0ifCw5&" + 
                    "organizations=7lQE")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'contributors'.size()", equalTo(0))
                .body("'projects'.size()", equalTo(0))
                .body("'statistics'.size()", equalTo(0));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "organizations=&" + 
                    "access_token=Un8sWR&" + 
                    "offset=R696nqzVwNzBmz2t&" + 
                    "language=0")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/statistics
    * 2 - (200) GET:/export
    * Found 8 potential faults of type-code 200
    */
    @Test(timeout = 60000)
    public void test_27_getOnExportReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 107L)
                .d("ID", "332")
                .d("SNAPSHOT_DATE", "\"2000-08-06 21:46:28\"")
                .d("ALL_CONTRIBUTORS_COUNT", "66")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "168")
                .d("ALL_STARS_COUNT", "649")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "\"clywsSfzRDJkHy1\"")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "249")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "260")
                .d("TEAMS_COUNT", "970")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics -> Response status 400 not defined for path '/statistics'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics?" + 
                    "organizations=clywsSfzRDJkHy1&" + 
                    "end_date=2b4vzlfZFGqMj")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Invalid date format for endDate"));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/allForksCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/externalContributorsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/key/snapshotDate'] String "2000-08-06T21:46:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/membersCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/privateProjectCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/publicProjectCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/snapshotDate'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "clywsSfzRDJkHy1")
                .get(baseUrlOfSut + "/export?start_date=Wd")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'contributors'.size()", equalTo(0))
                .body("'projects'.size()", equalTo(0))
                .body("'statistics'.size()", equalTo(1))
                .body("'statistics'[0].'key'.'snapshotDate'", containsString("2000-08-06T21:46:28"))
                .body("'statistics'[0].'privateProjectCount'", nullValue())
                .body("'statistics'[0].'publicProjectCount'", nullValue())
                .body("'statistics'[0].'membersCount'", nullValue())
                .body("'statistics'[0].'teamsCount'", numberMatches(970.0))
                .body("'statistics'[0].'allContributorsCount'", numberMatches(66.0))
                .body("'statistics'[0].'externalContributorsCount'", nullValue())
                .body("'statistics'[0].'allStarsCount'", numberMatches(649.0))
                .body("'statistics'[0].'allForksCount'", nullValue())
                .body("'statistics'[0].'allSizeCount'", numberMatches(168.0))
                .body("'statistics'[0].'programLanguagesCount'", numberMatches(249.0))
                .body("'statistics'[0].'tagsCount'", numberMatches(260.0))
                .body("'statistics'[0].'organizationName'", containsString("clywsSfzRDJkHy1"))
                .body("'statistics'[0].'snapshotDate'", numberMatches(9.65609188E11));
    }
    
    
    /**
    * Calls:
    * 1 - (403) GET:/statistics/projects
    * 2 - (403) GET:/projects
    * 3 - (200) GET:/statistics/languages
    * 4 - (403) GET:/statistics/contributors
    * Found 3 potential faults of type-code 200
    */
    @Test(timeout = 60000)
    public void test_28_getOnContributorsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 62L)
                .d("COMMITS_COUNT", "66")
                .d("CONTRIBUTORS_COUNT", "312")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "624")
                .d("LAST_PUSHED", "\"K5Nz\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"H\"")
                .d("SCORE", "NULL")
                .d("SNAPSHOT_DATE", "NULL")
                .d("STARS_COUNT", "812")
                .d("URL", "NULL")
                .d("TITLE", "NULL")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("STATISTICS", 63L)
                .d("ID", "535")
                .d("SNAPSHOT_DATE", "\"2061-01-21 03:18:53\"")
                .d("ALL_CONTRIBUTORS_COUNT", "856")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "531")
                .d("MEMBERS_COUNT", "293")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "918")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "769")
            .and().insertInto("CONTRIBUTOR", 64L)
                .d("ID", "694")
                .d("ORGANIZATION_ID", "-1466595462221208576")
                .d("SNAPSHOT_DATE", "\"1948-09-02 23:10:57\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"xgGlT9ji0WDiL\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "726")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "908")
                .d("PERSONAL_COMMITS_COUNT", "558")
                .d("PERSONAL_PROJECTS_COUNT", "292")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "D9g3MBaDS0bVze")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "organizations=D9g3MBaDS0bVze&" + 
                    "start_date=1963-04-17T03%3A43%3A33%2B03%3A51&" + 
                    "end_date=2004-03-05T18%3A32%3A28.428%2B15%3A02&" + 
                    "access_token=3Jto")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/projects -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/projects?" + 
                    "limit=409&" + 
                    "offset=641&" + 
                    "start_date=1963-04-17T03%3A43%3A33%2B03%3A51&" + 
                    "end_date=2004-03-05T18%3A32%3A28.428%2B15%3A02&" + 
                    "sortBy=Dw&" + 
                    "access_token=3Jto")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "start_date=1963-04-17T03%3A43%3A33%2B03%3A51&" + 
                    "end_date=2004-03-05T18%3A32%3A28.428%2B15%3A02")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "organizations=D9g3MBaDS0bVze&" + 
                    "end_date=2004-03-05T18%3A32%3A28.428%2B15%3A02&" + 
                    "access_token=3Jto")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * 1 - (200) GET:/projects
    * 2 - (403) POST:/config/scoring.project
    * 3 - (403) POST:/config/scoring.project
    * Found 2 potential faults of type-code 200
    */
    @Test(timeout = 60000)
    public void test_29_postOnConfigScoring_projectWithQueryParamsReturnsSchemaInvalidResponse() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 73L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "NULL")
                .d("DESCRIPTION", "\"_EM_718_XYZ_\"")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "341")
                .d("LAST_PUSHED", "\"_EM_719_XYZ_\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"\"")
                .d("SCORE", "342")
                .d("SNAPSHOT_DATE", "NULL")
                .d("STARS_COUNT", "0")
                .d("URL", "\"_EM_721_XYZ_\"")
                .d("TITLE", "NULL")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "424")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "7E5tjjliAyV")
                .get(baseUrlOfSut + "/projects?" + 
                    "organizations=7E5tjjliAyV&" + 
                    "offset=732&" + 
                    "sortBy=_EM_722_XYZ_&" + 
                    "language=")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"7E5tjjliAyV\" ")
                .post(baseUrlOfSut + "/config/scoring.project")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("X-Organizations", "7E5tjjliAyV")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .post(baseUrlOfSut + "/config/scoring.project?" + 
                    "q=7E5tjjliAyV&" + 
                    "limit=7E5tjjliAyV")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
    }
    
    
    /**
    * Calls:
    * 1 - (200) GET:/config
    * 2 - (401) GET:/init
    * 3 - (400) GET:/statistics/languages
    * 4 - (200) GET:/config
    * 5 - (403) GET:/statistics
    * 6 - (400) GET:/statistics/projects
    * 7 - (403) POST:/import
    * Found 13 potential faults of type-code 200
    */
    @Test(timeout = 60000)
    public void test_30_postOnImportReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/config -> [Path '/github.login'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/config -> [Path '/spring.database.driverClassName'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/config -> [Path '/spring.datasource.platform'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/config -> [Path '/spring.jpa.database'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/config?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'cache.path'", containsString("target/cache"))
                .body("'cache.size'", containsString("50"))
                .body("'endpoints.enabled'", containsString("false"))
                .body("'endpoints.health.enabled'", containsString("true"))
                .body("'github.login'", nullValue())
                .body("'organization.list'", containsString("zalando,zalando-stups,zalando-incubator"))
                .body("'schedule'", containsString("0 1 8 * * *"))
                .body("'scoring.project'", containsString("function(project) {var daysSinceLastPush = 0;if (project.lastPushed) {var tokens = project.lastPushed.split(\" \");var day = tokens[2];var month = tokens[1];var year = tokens[5];var lastPushedDate = new Date(day + ' ' + month + ' ' + year);var millisInDay = 86400000;daysSinceLastPush = Math.floor((new Date() - lastPushedDate) / millisInDay);}var maintainersPenalty = 0;if (project.maintainers.length < 2) {maintainersPenalty = 100;}return project.starsCount * 3 + project.forksCount * 2 + project.contributorsCount * 5 - daysSinceLastPush - maintainersPenalty}"))
                .body("'spring.database.driverClassName'", nullValue())
                .body("'spring.datasource.platform'", nullValue())
                .body("'spring.datasource.url'", containsString("jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;"))
                .body("'spring.datasource.username'", containsString("sa"))
                .body("'spring.jpa.database'", nullValue())
                .body("'spring.jpa.hibernate.ddl-auto'", containsString("update"));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/init -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/init")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("unauthorized"))
                .body("'error_description'", containsString("Full authentication is required to access this resource"));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/languages -> Response status 400 not defined for path '/statistics/languages'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "organizations=zm3&" + 
                    "end_date=I1oC7iPyq&" + 
                    "EMextraParam123=_EM_299_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Couldn't parse date string I1oC7iPyq."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/config -> [Path '/github.login'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/config -> [Path '/spring.database.driverClassName'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/config -> [Path '/spring.datasource.platform'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/config -> [Path '/spring.jpa.database'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/config?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'cache.path'", containsString("target/cache"))
                .body("'cache.size'", containsString("50"))
                .body("'endpoints.enabled'", containsString("false"))
                .body("'endpoints.health.enabled'", containsString("true"))
                .body("'github.login'", nullValue())
                .body("'organization.list'", containsString("zalando,zalando-stups,zalando-incubator"))
                .body("'schedule'", containsString("0 1 8 * * *"))
                .body("'scoring.project'", containsString("function(project) {var daysSinceLastPush = 0;if (project.lastPushed) {var tokens = project.lastPushed.split(\" \");var day = tokens[2];var month = tokens[1];var year = tokens[5];var lastPushedDate = new Date(day + ' ' + month + ' ' + year);var millisInDay = 86400000;daysSinceLastPush = Math.floor((new Date() - lastPushedDate) / millisInDay);}var maintainersPenalty = 0;if (project.maintainers.length < 2) {maintainersPenalty = 100;}return project.starsCount * 3 + project.forksCount * 2 + project.contributorsCount * 5 - daysSinceLastPush - maintainersPenalty}"))
                .body("'spring.database.driverClassName'", nullValue())
                .body("'spring.datasource.platform'", nullValue())
                .body("'spring.datasource.url'", containsString("jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;"))
                .body("'spring.datasource.username'", containsString("sa"))
                .body("'spring.jpa.database'", nullValue())
                .body("'spring.jpa.hibernate.ddl-auto'", containsString("update"));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics?" + 
                    "organizations=_EM_302_XYZ_&" + 
                    "end_date=dxgPLXZa&" + 
                    "access_token=_EM_303_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> Response status 400 not defined for path '/statistics/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "organizations=ZSldAWoZFu3D&" + 
                    "end_date=8W4uA")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Couldn't parse date string 8W4uA."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/import -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"contributors\": [ " + 
                    " { " + 
                    " \"key\": {}, " + 
                    " \"loginId\": \"ibaxPciEXIAexL\", " + 
                    " \"organizationId\": 756, " + 
                    " \"organizationalCommitsCount\": 808, " + 
                    " \"personalCommitsCount\": 597, " + 
                    " \"snapshotDate\": \"2056-04-13T22:15:05Z\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": -470336711, " + 
                    " \"organizationName\": \"54Yc\", " + 
                    " \"organizationalCommitsCount\": 881, " + 
                    " \"personalProjectsCount\": 510, " + 
                    " \"snapshotDate\": \"2005-11-14T21:29:49+17:24\", " + 
                    " \"url\": \"oMwL\" " + 
                    " } " + 
                    " ], " + 
                    " \"projects\": [ " + 
                    " { " + 
                    " \"commitsCount\": 463, " + 
                    " \"contributorsCount\": 101, " + 
                    " \"description\": \"_EM_309_XYZ_\", " + 
                    " \"externalContributorsCount\": 279, " + 
                    " \"forksCount\": 106, " + 
                    " \"gitHubProjectId\": 756, " + 
                    " \"image\": \"_EM_310_XYZ_\", " + 
                    " \"languageList\": [ " + 
                    " \"_EM_311_XYZ_\", " + 
                    " \"9sHjNI4eV610J\", " + 
                    " \"_\" " + 
                    " ], " + 
                    " \"maintainers\": [ " + 
                    " \"jyvM2Yoc\", " + 
                    " \"_EM_312_XYZ_\", " + 
                    " \"_EM_313_XYZ_\", " + 
                    " \"_cwBV9r04Dv6\" " + 
                    " ], " + 
                    " \"name\": \"ormBjV7b2a2\", " + 
                    " \"organizationName\": \"DlzcmTWlHv1FKFas\", " + 
                    " \"starsCount\": 60, " + 
                    " \"url\": \"n3sR6mjLoc1\" " + 
                    " }, " + 
                    " { " + 
                    " \"description\": \"LRq8GJizrheL2r\", " + 
                    " \"externalContributorsCount\": 944, " + 
                    " \"forksCount\": 848, " + 
                    " \"gitHubProjectId\": 391, " + 
                    " \"lastPushed\": \"_EM_319_XYZ_\", " + 
                    " \"score\": 52, " + 
                    " \"snapshotDate\": \"1971-00-09T-1:31:41Z\", " + 
                    " \"starsCount\": 367, " + 
                    " \"title\": \"hloshmp3nfXmMC\" " + 
                    " }, " + 
                    " { " + 
                    " \"contributorsCount\": -692120448, " + 
                    " \"description\": \"_EM_325_XYZ_\", " + 
                    " \"externalContributorsCount\": 35, " + 
                    " \"gitHubProjectId\": 427, " + 
                    " \"image\": \"_EM_326_XYZ_\", " + 
                    " \"languageList\": [ " + 
                    " \"G6WLfStl7X2tWp\", " + 
                    " \"_EM_327_XYZ_\", " + 
                    " \"mQkvU8S\", " + 
                    " \"_EM_328_XYZ_\" " + 
                    " ], " + 
                    " \"lastPushed\": \"_EM_329_XYZ_\", " + 
                    " \"maintainers\": [ " + 
                    " \"EU37pZ\", " + 
                    " \"_EM_330_XYZ_\", " + 
                    " \"1ICbE4CuoBdIOO\", " + 
                    " \"_EM_331_XYZ_\" " + 
                    " ], " + 
                    " \"snapshotDate\": \"2094-02-10T10:02:25+00:12\" " + 
                    " }, " + 
                    " { " + 
                    " \"commitsCount\": 485, " + 
                    " \"contributorsCount\": 828, " + 
                    " \"externalContributorsCount\": 273, " + 
                    " \"languageList\": [ " + 
                    " \"VzcqT8Ww3J14kZ\", " + 
                    " \"_EM_335_XYZ_\", " + 
                    " \"\", " + 
                    " \"fih\" " + 
                    " ], " + 
                    " \"organizationName\": \"nxI3z\", " + 
                    " \"score\": 845, " + 
                    " \"snapshotDate\": \"2018-05-31T16:15:26.512-18:40\", " + 
                    " \"title\": \"_EM_340_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"languageList\": [ " + 
                    " \"WhCc0GX\", " + 
                    " \"Y0AGg9PdbP\", " + 
                    " \"_EM_342_XYZ_\", " + 
                    " \"_EM_343_XYZ_\", " + 
                    " \"fT1cMTjT\" " + 
                    " ], " + 
                    " \"lastPushed\": \"_EM_344_XYZ_\", " + 
                    " \"maintainers\": [ " + 
                    " \"_EM_345_XYZ_\", " + 
                    " \"\", " + 
                    " \"s4j\" " + 
                    " ], " + 
                    " \"organizationName\": \"VJvBNMj\", " + 
                    " \"score\": 457, " + 
                    " \"snapshotDate\": \"2088-02-00T23:54:47.078Z\" " + 
                    " } " + 
                    " ], " + 
                    " \"statistics\": [ " + 
                    " { " + 
                    " \"allStarsCount\": 998, " + 
                    " \"key\": { " + 
                    " \"id\": 248, " + 
                    " \"snapshotDate\": \"2027-00-12T13:39:31+18:53\" " + 
                    " }, " + 
                    " \"organizationName\": \"_EM_348_XYZ_\", " + 
                    " \"publicProjectCount\": 713, " + 
                    " \"snapshotDate\": \"1999-08-15T09:58:44.903Z\", " + 
                    " \"teamsCount\": 10 " + 
                    " }, " + 
                    " { " + 
                    " \"allContributorsCount\": 639, " + 
                    " \"allForksCount\": 715, " + 
                    " \"allSizeCount\": 881, " + 
                    " \"externalContributorsCount\": 943, " + 
                    " \"key\": {}, " + 
                    " \"membersCount\": 448, " + 
                    " \"privateProjectCount\": 825, " + 
                    " \"programLanguagesCount\": 458, " + 
                    " \"publicProjectCount\": 237, " + 
                    " \"tagsCount\": 877, " + 
                    " \"teamsCount\": 110 " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/import?EMextraParam123=_EM_350_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
    }
    
    
    /**
    * Calls:
    * 1 - (200) GET:/projects
    * 2 - (400) GET:/statistics/languages
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_31_getOnLanguagesReturnsSchemaInvalidResponse() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/projects?" + 
                    "offset=807&" + 
                    "start_date=2044-01-24T23%3A56%3A15.146%2B17%3A48&" + 
                    "end_date=1999-01-29T11%3A50%3A13-02%3A46&" + 
                    "sortBy=bwLIWa5")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/languages -> Response status 400 not defined for path '/statistics/languages'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "eKsYRX")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "organizations=QE2eOw3nV04imRYj&" + 
                    "start_date=OU_hus&" + 
                    "offset=4BSIO")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Couldn't parse date string OU_hus."));
    }
    
    
    /**
    * Calls:
    * 1 - (403) GET:/statistics/contributors
    * 2 - (400) GET:/statistics/projects
    * 3 - (403) GET:/contributors
    * 4 - (403) GET:/statistics/languages
    * 5 - (403) GET:/languages
    * 6 - (401) GET:/delete
    * 7 - (200) GET:/export
    * 8 - (403) POST:/config/scoring.project
    * Found 25 potential faults of type-code 200
    */
    @Test(timeout = 60000)
    public void test_32_postOnConfigScoring_projectReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 94L)
                .d("ID", "363")
                .d("ORGANIZATION_ID", "72")
                .d("SNAPSHOT_DATE", "\"1999-04-11 14:04:52\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"vTmg2Skz6eV58ySA\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "880")
                .d("PERSONAL_COMMITS_COUNT", "313")
                .d("PERSONAL_PROJECTS_COUNT", "579")
                .d("URL", "\"DsHqzNdi7bNDs\"")
            .and().insertInto("STATISTICS", 95L)
                .d("ID", "-1166537431552065536")
                .d("SNAPSHOT_DATE", "\"2019-06-20 04:24:35\"")
                .d("ALL_CONTRIBUTORS_COUNT", "8339")
                .d("ALL_FORKS_COUNT", "8560")
                .d("ALL_SIZE_COUNT", "467")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "357")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "149")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "276")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "102")
            .and().insertInto("PROJECT", 96L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "451")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "132021")
                .d("LAST_PUSHED", "\"_EM_948_XYZ_\"")
                .d("NAME", "\"UCreBK9qRH\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"OPIkpF\"")
                .d("SCORE", "NULL")
                .d("SNAPSHOT_DATE", "\"1928-12-05 04:20:39\"")
                .d("STARS_COUNT", "107")
                .d("URL", "\"7GVTdn\"")
                .d("TITLE", "\"Bikw9]i9\"")
                .d("IMAGE", "\"_EM_593_XYZ_\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "72")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "organizations=72&" + 
                    "end_date=WP1&" + 
                    "access_token=YK3")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> Response status 400 not defined for path '/statistics/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "72")
                .header("X-Organizations", "_00rr7XaQA")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "organizations=72&" + 
                    "start_date=I&" + 
                    "end_date=WP1&" + 
                    "q=cS7fzl9m5_WTF&" + 
                    "limit=719&" + 
                    "sortBy=cnzVGXVLJy06o")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Couldn't parse date string I."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=72&" + 
                    "offset=530&" + 
                    "end_date=WP1&" + 
                    "sortBy=cnzVGXVLJy06o&" + 
                    "q=cS7fzl9m5_WTF&" + 
                    "access_token=YK3")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/languages -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "organizations=72&" + 
                    "start_date=I&" + 
                    "access_token=YK3&" + 
                    "q=cS7fzl9m5_WTF&" + 
                    "offset=530")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/languages -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "_00rr7XaQA")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=72&" + 
                    "limit=719&" + 
                    "q=cS7fzl9m5_WTF&" + 
                    "access_token=YK3")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/delete -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "72")
                .get(baseUrlOfSut + "/delete")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("unauthorized"))
                .body("'error_description'", containsString("Full authentication is required to access this resource"));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/key/snapshotDate'] String "1999-04-11T14:04:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/name'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/organizationalCommitsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/snapshotDate'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/commitsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/description'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/externalContributorsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/forksCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/organizationName'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/score'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/snapshotDate'] String "1928-12-05T04:20:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/allStarsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/key/snapshotDate'] String "2019-06-20T04:24:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/organizationName'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/programLanguagesCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/publicProjectCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/snapshotDate'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/tagsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/export?" + 
                    "end_date=WP1&" + 
                    "organizations=72&" + 
                    "start_date=I")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'contributors'.size()", equalTo(1))
                .body("'contributors'[0].'key'.'organizationId'", numberMatches(72.0))
                .body("'contributors'[0].'key'.'snapshotDate'", containsString("1999-04-11T14:04:52"))
                .body("'contributors'[0].'loginId'", containsString(""))
                .body("'contributors'[0].'name'", nullValue())
                .body("'contributors'[0].'url'", containsString("DsHqzNdi7bNDs"))
                .body("'contributors'[0].'organizationalCommitsCount'", nullValue())
                .body("'contributors'[0].'personalCommitsCount'", numberMatches(313.0))
                .body("'contributors'[0].'personalProjectsCount'", numberMatches(579.0))
                .body("'contributors'[0].'organizationalProjectsCount'", numberMatches(880.0))
                .body("'contributors'[0].'organizationName'", containsString("vTmg2Skz6eV58ySA"))
                .body("'contributors'[0].'organizationId'", numberMatches(72.0))
                .body("'contributors'[0].'snapshotDate'", numberMatches(9.23850292E11))
                .body("'projects'.size()", equalTo(1))
                .body("'projects'[0].'languageList'.size()", equalTo(0))
                .body("'projects'[0].'gitHubProjectId'", numberMatches(132021.0))
                .body("'projects'[0].'snapshotDate'", containsString("1928-12-05T04:20:39"))
                .body("'projects'[0].'name'", containsString("UCreBK9qRH"))
                .body("'projects'[0].'title'", containsString("Bikw9]i9"))
                .body("'projects'[0].'image'", containsString("_EM_593_XYZ_"))
                .body("'projects'[0].'organizationName'", nullValue())
                .body("'projects'[0].'url'", containsString("7GVTdn"))
                .body("'projects'[0].'description'", nullValue())
                .body("'projects'[0].'starsCount'", numberMatches(107.0))
                .body("'projects'[0].'commitsCount'", nullValue())
                .body("'projects'[0].'forksCount'", nullValue())
                .body("'projects'[0].'contributorsCount'", numberMatches(451.0))
                .body("'projects'[0].'externalContributorsCount'", nullValue())
                .body("'projects'[0].'score'", nullValue())
                .body("'projects'[0].'lastPushed'", containsString("_EM_948_XYZ_"))
                .body("'projects'[0].'primaryLanguage'", containsString("OPIkpF"))
                .body("'projects'[0].'maintainers'.size()", equalTo(0))
                .body("'statistics'.size()", equalTo(1))
                .body("'statistics'[0].'key'.'snapshotDate'", containsString("2019-06-20T04:24:35"))
                .body("'statistics'[0].'privateProjectCount'", numberMatches(149.0))
                .body("'statistics'[0].'publicProjectCount'", nullValue())
                .body("'statistics'[0].'membersCount'", numberMatches(357.0))
                .body("'statistics'[0].'teamsCount'", numberMatches(276.0))
                .body("'statistics'[0].'allContributorsCount'", numberMatches(8339.0))
                .body("'statistics'[0].'externalContributorsCount'", numberMatches(102.0))
                .body("'statistics'[0].'allStarsCount'", nullValue())
                .body("'statistics'[0].'allForksCount'", numberMatches(8560.0))
                .body("'statistics'[0].'allSizeCount'", numberMatches(467.0))
                .body("'statistics'[0].'programLanguagesCount'", nullValue())
                .body("'statistics'[0].'tagsCount'", nullValue())
                .body("'statistics'[0].'organizationName'", nullValue())
                .body("'statistics'[0].'snapshotDate'", numberMatches(1.561015475E12));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" _EM_860_XYZ_ ")
                .post(baseUrlOfSut + "/config/scoring.project")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
    }
    
    
    /**
    * Calls:
    * 1 - (200) GET:/contributors
    * 2 - (403) GET:/projects
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_33_getOnProjectsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 44L)
                .d("ID", "454")
                .d("ORGANIZATION_ID", "291")
                .d("SNAPSHOT_DATE", "\"2020-06-07 21:21:01\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"FTkQUJ\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "-1073739707")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "847")
                .d("PERSONAL_COMMITS_COUNT", "0")
                .d("PERSONAL_PROJECTS_COUNT", "NULL")
                .d("URL", "\"_EM_428_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "foo")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=_EM_1065_XYZ_&" + 
                    "limit=826&" + 
                    "sortBy=")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/projects -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "")
                .header("X-Organizations", "=")
                .get(baseUrlOfSut + "/projects?" + 
                    "limit=265&" + 
                    "offset=2615&" + 
                    "start_date=1943-09-08T03%3A11%3A51%2B18%3A35&" + 
                    "end_date=2036-08-29T16%3A60%3A31-16%3A24&" + 
                    "q=ZKTbsVEDPJw4vD8w&" + 
                    "access_token=WqRa")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * 1 - (403) GET:/statistics/projects
    * 2 - (200) GET:/export
    * 3 - (403) GET:/projects
    * 4 - (200) GET:/statistics/languages
    * 5 - (403) GET:/statistics/contributors
    * Found 26 potential faults of type-code 200
    */
    @Test(timeout = 60000)
    public void test_34_getOnContributorsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 62L)
                .d("COMMITS_COUNT", "66")
                .d("CONTRIBUTORS_COUNT", "312")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "624")
                .d("LAST_PUSHED", "\"K5Nz\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"H\"")
                .d("SCORE", "NULL")
                .d("SNAPSHOT_DATE", "NULL")
                .d("STARS_COUNT", "812")
                .d("URL", "NULL")
                .d("TITLE", "NULL")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("STATISTICS", 63L)
                .d("ID", "535")
                .d("SNAPSHOT_DATE", "\"2061-01-21 03:18:53\"")
                .d("ALL_CONTRIBUTORS_COUNT", "856")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "531")
                .d("MEMBERS_COUNT", "293")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "918")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "769")
            .and().insertInto("CONTRIBUTOR", 64L)
                .d("ID", "694")
                .d("ORGANIZATION_ID", "-1466595462221208576")
                .d("SNAPSHOT_DATE", "\"1948-09-02 23:10:57\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"xgGlT9ji0WDiL\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "726")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "908")
                .d("PERSONAL_COMMITS_COUNT", "558")
                .d("PERSONAL_PROJECTS_COUNT", "292")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "D9g3MBaDS0bVze")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "organizations=D9g3MBaDS0bVze&" + 
                    "start_date=1963-04-17T03%3A43%3A33%2B03%3A51&" + 
                    "end_date=2004-03-05T18%3A32%3A28.428%2B15%3A02&" + 
                    "access_token=3Jto")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/key/snapshotDate'] String "1948-09-02T23:10:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/name'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/snapshotDate'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/url'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/description'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/externalContributorsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/forksCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/image'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/name'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/organizationName'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/score'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/snapshotDate'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/title'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/url'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/allForksCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/allSizeCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/key/snapshotDate'] String "2061-01-21T03:18:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/organizationName'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/privateProjectCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/publicProjectCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/snapshotDate'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/tagsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/teamsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/export")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'contributors'.size()", equalTo(1))
                .body("'contributors'[0].'key'.'organizationId'", numberMatches(-1.46659546222120858E18))
                .body("'contributors'[0].'key'.'snapshotDate'", containsString("1948-09-02T23:10:57"))
                .body("'contributors'[0].'loginId'", containsString(""))
                .body("'contributors'[0].'name'", nullValue())
                .body("'contributors'[0].'url'", nullValue())
                .body("'contributors'[0].'organizationalCommitsCount'", numberMatches(726.0))
                .body("'contributors'[0].'personalCommitsCount'", numberMatches(558.0))
                .body("'contributors'[0].'personalProjectsCount'", numberMatches(292.0))
                .body("'contributors'[0].'organizationalProjectsCount'", numberMatches(908.0))
                .body("'contributors'[0].'organizationName'", containsString("xgGlT9ji0WDiL"))
                .body("'contributors'[0].'organizationId'", numberMatches(-1.46659546222120858E18))
                .body("'contributors'[0].'snapshotDate'", numberMatches(-6.73048143E11))
                .body("'projects'.size()", equalTo(1))
                .body("'projects'[0].'languageList'.size()", equalTo(0))
                .body("'projects'[0].'gitHubProjectId'", numberMatches(624.0))
                .body("'projects'[0].'snapshotDate'", nullValue())
                .body("'projects'[0].'name'", nullValue())
                .body("'projects'[0].'title'", nullValue())
                .body("'projects'[0].'image'", nullValue())
                .body("'projects'[0].'organizationName'", nullValue())
                .body("'projects'[0].'url'", nullValue())
                .body("'projects'[0].'description'", nullValue())
                .body("'projects'[0].'starsCount'", numberMatches(812.0))
                .body("'projects'[0].'commitsCount'", numberMatches(66.0))
                .body("'projects'[0].'forksCount'", nullValue())
                .body("'projects'[0].'contributorsCount'", numberMatches(312.0))
                .body("'projects'[0].'externalContributorsCount'", nullValue())
                .body("'projects'[0].'score'", nullValue())
                .body("'projects'[0].'lastPushed'", containsString("K5Nz"))
                .body("'projects'[0].'primaryLanguage'", containsString("H"))
                .body("'projects'[0].'maintainers'.size()", equalTo(0))
                .body("'statistics'.size()", equalTo(1))
                .body("'statistics'[0].'key'.'snapshotDate'", containsString("2061-01-21T03:18:53"))
                .body("'statistics'[0].'privateProjectCount'", nullValue())
                .body("'statistics'[0].'publicProjectCount'", nullValue())
                .body("'statistics'[0].'membersCount'", numberMatches(293.0))
                .body("'statistics'[0].'teamsCount'", nullValue())
                .body("'statistics'[0].'allContributorsCount'", numberMatches(856.0))
                .body("'statistics'[0].'externalContributorsCount'", numberMatches(769.0))
                .body("'statistics'[0].'allStarsCount'", numberMatches(531.0))
                .body("'statistics'[0].'allForksCount'", nullValue())
                .body("'statistics'[0].'allSizeCount'", nullValue())
                .body("'statistics'[0].'programLanguagesCount'", numberMatches(918.0))
                .body("'statistics'[0].'tagsCount'", nullValue())
                .body("'statistics'[0].'organizationName'", nullValue())
                .body("'statistics'[0].'snapshotDate'", numberMatches(2.873513933E12));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/projects -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/projects?" + 
                    "limit=409&" + 
                    "offset=641&" + 
                    "start_date=1963-04-17T03%3A43%3A33%2B03%3A51&" + 
                    "end_date=2004-03-05T18%3A32%3A28.428%2B15%3A02&" + 
                    "sortBy=Dw&" + 
                    "access_token=3Jto")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "start_date=1963-04-17T03%3A43%3A33%2B03%3A51&" + 
                    "end_date=2004-03-05T18%3A32%3A28.428%2B15%3A02")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "organizations=D9g3MBaDS0bVze&" + 
                    "end_date=2004-03-05T18%3A32%3A28.428%2B15%3A02&" + 
                    "access_token=3Jto")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/statistics/projects
    * 2 - (403) GET:/statistics/contributors
    * 3 - (403) GET:/statistics/languages
    * 4 - (200) GET:/projects
    * 5 - (403) POST:/config/scoring.project
    * 6 - (403) POST:/config/scoring.project
    * 7 - (403) GET:/languages
    * 8 - (401) GET:/init
    * 9 - (403) GET:/delete
    * 10 - (403) POST:/import
    * 11 - (400) POST:/import
    * Found 10 potential faults of type-code 200
    */
    @Test(timeout = 60000)
    public void test_35_postOnImportReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 78L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "NULL")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "157")
                .d("GIT_HUB_PROJECT_ID", "998")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"488\"")
                .d("PRIMARY_LANGUAGE", "\"488\"")
                .d("SCORE", "290")
                .d("SNAPSHOT_DATE", "NULL")
                .d("STARS_COUNT", "661")
                .d("URL", "NULL")
                .d("TITLE", "NULL")
                .d("IMAGE", "\"Qd3\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("STATISTICS", 79L)
                .d("ID", "694")
                .d("SNAPSHOT_DATE", "\"2024-02-21 15:38:20\"")
                .d("ALL_CONTRIBUTORS_COUNT", "824")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "\"488\"")
                .d("PRIVATE_PROJECT_COUNT", "41")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "810")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "769")
            .and().insertInto("CONTRIBUTOR", 80L)
                .d("ID", "330")
                .d("ORGANIZATION_ID", "488")
                .d("SNAPSHOT_DATE", "\"1960-06-01 00:57:42\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"v3rpdjfDB8Oy9b\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "585")
                .d("PERSONAL_COMMITS_COUNT", "NULL")
                .d("PERSONAL_PROJECTS_COUNT", "NULL")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> Response status 400 not defined for path '/statistics/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "488")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "start_date=488&" + 
                    "end_date=488&" + 
                    "q=488&" + 
                    "limit=488&" + 
                    "language=488")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Couldn't parse date string 488."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "488")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "organizations=488&" + 
                    "start_date=488&" + 
                    "end_date=488&" + 
                    "access_token=488")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/languages -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "organizations=488&" + 
                    "start_date=488&" + 
                    "access_token=488")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "488")
                .header("X-Organizations", "488")
                .get(baseUrlOfSut + "/projects?" + 
                    "organizations=488&" + 
                    "limit=488&" + 
                    "start_date=1989-09-14T11%3A20%3A51.764Z&" + 
                    "sortBy=488&" + 
                    "q=488&" + 
                    "language=488")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"488\" ")
                .post(baseUrlOfSut + "/config/scoring.project")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .post(baseUrlOfSut + "/config/scoring.project?" + 
                    "access_token=488&" + 
                    "end_date=488&" + 
                    "organizations=488&" + 
                    "limit=488&" + 
                    "language=488")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/languages -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=488&" + 
                    "offset=488&" + 
                    "access_token=488")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/init -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/init")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("unauthorized"))
                .body("'error_description'", containsString("Full authentication is required to access this resource"));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/delete -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/delete?access_token=488")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/import -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/import")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/import -> Response status 400 not defined for path '/import'.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/import?" + 
                    "access_token=&" + 
                    "end_date=PD0ITb&" + 
                    "organizations=hc")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("invalid_request"))
                .body("'error_description'", containsString("Access Token not valid"));
    }
    
    
    /**
    * Calls:
    * 1 - (403) GET:/statistics/projects
    * 2 - (200) GET:/projects
    * 3 - (403) GET:/statistics/languages
    * 4 - (200) GET:/export
    * 5 - (403) GET:/statistics/contributors
    * 6 - (403) POST:/config/scoring.project
    * Found 23 potential faults of type-code 200
    */
    @Test(timeout = 60000)
    public void test_36_postOnConfigScoring_projectWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 62L)
                .d("COMMITS_COUNT", "66")
                .d("CONTRIBUTORS_COUNT", "-65224")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "640")
                .d("LAST_PUSHED", "\"K5Nz\"")
                .d("NAME", "\"Po\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"H\"")
                .d("SCORE", "NULL")
                .d("SNAPSHOT_DATE", "\"2038-05-20 12:06:11\"")
                .d("STARS_COUNT", "812")
                .d("URL", "NULL")
                .d("TITLE", "NULL")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("STATISTICS", 63L)
                .d("ID", "535")
                .d("SNAPSHOT_DATE", "\"2061-01-21 03:18:53\"")
                .d("ALL_CONTRIBUTORS_COUNT", "856")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "531")
                .d("MEMBERS_COUNT", "293")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "-106")
                .d("PUBLIC_PROJECT_COUNT", "1806050392")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "769")
            .and().insertInto("CONTRIBUTOR", 64L)
                .d("ID", "694")
                .d("ORGANIZATION_ID", "-1466595462221208576")
                .d("SNAPSHOT_DATE", "\"1948-09-02 23:10:57\"")
                .d("NAME", "\"_EM_594_XYZ_\"")
                .d("ORGANIZATION_NAME", "\"xgGlT9ji0WDiL\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "726")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "906")
                .d("PERSONAL_COMMITS_COUNT", "558")
                .d("PERSONAL_PROJECTS_COUNT", "292")
                .d("URL", "\"Cu3ULoL3S2RVq\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "D9g3MBaDS0bVze")
                .header("X-Organizations", "")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "start_date=1963-04-17T03%3A43%3A33%2B03%3A51&" + 
                    "end_date=2004-03-05T18%3A32%3A28.428%2B15%3A02&" + 
                    "access_token=5Jto")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "D9g3MBaDS0bVze")
                .header("X-Organizations", "")
                .get(baseUrlOfSut + "/projects?" + 
                    "limit=409&" + 
                    "offset=641&" + 
                    "start_date=1963-04-17T03%3A43%3A33%2B03%3A51&" + 
                    "end_date=2004-03-05T18%3A32%3A28.428%2B15%3A02&" + 
                    "sortBy=Dw")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/languages -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "start_date=1963-04-17T03%3A43%3A33%2B03%3A51&" + 
                    "end_date=2004-03-05T18%3A32%3A28.428%2B15%3A02&" + 
                    "access_token=5Jto")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/key/snapshotDate'] String "1948-09-02T23:10:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/snapshotDate'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/description'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/externalContributorsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/forksCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/image'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/organizationName'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/score'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/snapshotDate'] String "2038-05-20T12:06:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/title'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/url'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/allForksCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/allSizeCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/key/snapshotDate'] String "2061-01-21T03:18:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/organizationName'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/privateProjectCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/snapshotDate'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/tagsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/teamsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/export?end_date=Hrh9h1NPdq1QH8J")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'contributors'.size()", equalTo(1))
                .body("'contributors'[0].'key'.'organizationId'", numberMatches(-1.46659546222120858E18))
                .body("'contributors'[0].'key'.'snapshotDate'", containsString("1948-09-02T23:10:57"))
                .body("'contributors'[0].'loginId'", containsString(""))
                .body("'contributors'[0].'name'", containsString("_EM_594_XYZ_"))
                .body("'contributors'[0].'url'", containsString("Cu3ULoL3S2RVq"))
                .body("'contributors'[0].'organizationalCommitsCount'", numberMatches(726.0))
                .body("'contributors'[0].'personalCommitsCount'", numberMatches(558.0))
                .body("'contributors'[0].'personalProjectsCount'", numberMatches(292.0))
                .body("'contributors'[0].'organizationalProjectsCount'", numberMatches(906.0))
                .body("'contributors'[0].'organizationName'", containsString("xgGlT9ji0WDiL"))
                .body("'contributors'[0].'organizationId'", numberMatches(-1.46659546222120858E18))
                .body("'contributors'[0].'snapshotDate'", numberMatches(-6.73048143E11))
                .body("'projects'.size()", equalTo(1))
                .body("'projects'[0].'languageList'.size()", equalTo(0))
                .body("'projects'[0].'gitHubProjectId'", numberMatches(640.0))
                .body("'projects'[0].'snapshotDate'", containsString("2038-05-20T12:06:11"))
                .body("'projects'[0].'name'", containsString("Po"))
                .body("'projects'[0].'title'", nullValue())
                .body("'projects'[0].'image'", nullValue())
                .body("'projects'[0].'organizationName'", nullValue())
                .body("'projects'[0].'url'", nullValue())
                .body("'projects'[0].'description'", nullValue())
                .body("'projects'[0].'starsCount'", numberMatches(812.0))
                .body("'projects'[0].'commitsCount'", numberMatches(66.0))
                .body("'projects'[0].'forksCount'", nullValue())
                .body("'projects'[0].'contributorsCount'", numberMatches(-65224.0))
                .body("'projects'[0].'externalContributorsCount'", nullValue())
                .body("'projects'[0].'score'", nullValue())
                .body("'projects'[0].'lastPushed'", containsString("K5Nz"))
                .body("'projects'[0].'primaryLanguage'", containsString("H"))
                .body("'projects'[0].'maintainers'.size()", equalTo(0))
                .body("'statistics'.size()", equalTo(1))
                .body("'statistics'[0].'key'.'snapshotDate'", containsString("2061-01-21T03:18:53"))
                .body("'statistics'[0].'privateProjectCount'", nullValue())
                .body("'statistics'[0].'publicProjectCount'", numberMatches(1.806050392E9))
                .body("'statistics'[0].'membersCount'", numberMatches(293.0))
                .body("'statistics'[0].'teamsCount'", nullValue())
                .body("'statistics'[0].'allContributorsCount'", numberMatches(856.0))
                .body("'statistics'[0].'externalContributorsCount'", numberMatches(769.0))
                .body("'statistics'[0].'allStarsCount'", numberMatches(531.0))
                .body("'statistics'[0].'allForksCount'", nullValue())
                .body("'statistics'[0].'allSizeCount'", nullValue())
                .body("'statistics'[0].'programLanguagesCount'", numberMatches(-106.0))
                .body("'statistics'[0].'tagsCount'", nullValue())
                .body("'statistics'[0].'organizationName'", nullValue())
                .body("'statistics'[0].'snapshotDate'", numberMatches(2.873513933E12));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "organizations=D9g3MBaDS0bVze&" + 
                    "start_date=1963-04-17T03%3A43%3A33%2B03%3A51&" + 
                    "end_date=2004-03-05T18%3A32%3A28.428%2B15%3A02&" + 
                    "access_token=5Jto")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("X-Organizations", "k2yG_t73vzzy26yN")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .post(baseUrlOfSut + "/config/scoring.project?EMextraParam123=42")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
    }
    
    
    /**
    * Calls:
    * 1 - (200) GET:/projects
    * 2 - (403) GET:/statistics/projects
    * 3 - (403) POST:/config/scoring.project
    * 4 - (403) GET:/export
    * 5 - (200) GET:/languages
    * 6 - (403) POST:/import
    * 7 - (403) POST:/import
    * 8 - (400) GET:/statistics/contributors
    * Found 6 potential faults of type-code 200
    */
    @Test(timeout = 60000)
    public void test_37_getOnStatisticsContributorsWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 68L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "NULL")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "576")
                .d("LAST_PUSHED", "\"nFTm\"")
                .d("NAME", "\"_EM_652_XYZ_\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "NULL")
                .d("SCORE", "NULL")
                .d("SNAPSHOT_DATE", "\"2096-04-04 14:41:26\"")
                .d("STARS_COUNT", "226")
                .d("URL", "\"U_L\"")
                .d("TITLE", "NULL")
                .d("IMAGE", "\"_EM_653_XYZ_\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("STATISTICS", 69L)
                .d("ID", "726")
                .d("SNAPSHOT_DATE", "\"2073-04-28 11:05:56\"")
                .d("ALL_CONTRIBUTORS_COUNT", "874")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "698")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "-677176996")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "622643137")
                .d("PROGRAM_LANGUAGES_COUNT", "396421741")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "463")
                .d("TEAMS_COUNT", "593")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("CONTRIBUTOR", 70L)
                .d("ID", "933")
                .d("ORGANIZATION_ID", "772")
                .d("SNAPSHOT_DATE", "\"2038-12-10 19:14:37\"")
                .d("NAME", "\"_EM_681_XYZ_\"")
                .d("ORGANIZATION_NAME", "\"bC2yAAW\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "13")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "658")
                .d("PERSONAL_COMMITS_COUNT", "536")
                .d("PERSONAL_PROJECTS_COUNT", "1329357597")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "qWu9")
                .get(baseUrlOfSut + "/projects?" + 
                    "organizations=koR&" + 
                    "limit=232&" + 
                    "end_date=2085-03-01T06%3A49%3A48Z")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "koR")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "start_date=2062-02-03T22%3A19%3A52Z&" + 
                    "access_token=sqYBTJr45OQCCN3")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .post(baseUrlOfSut + "/config/scoring.project")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/export?access_token=sqYBTJr45OQCCN3")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=koR&" + 
                    "offset=978&" + 
                    "q=PhEVq8R95ycOLn")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/import -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"contributors\": [ " + 
                    " { " + 
                    " \"id\": 359, " + 
                    " \"key\": {}, " + 
                    " \"loginId\": \"_EM_654_XYZ_\", " + 
                    " \"name\": \"_EM_655_XYZ_\", " + 
                    " \"organizationalProjectsCount\": 544, " + 
                    " \"personalCommitsCount\": 322, " + 
                    " \"snapshotDate\": \"2038-07-13T05:14:60+15:58\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 103, " + 
                    " \"name\": \"_EM_657_XYZ_\", " + 
                    " \"organizationId\": 551, " + 
                    " \"organizationName\": \"ZDlH5tDVLyXqs8\", " + 
                    " \"personalProjectsCount\": 23, " + 
                    " \"snapshotDate\": \"2074-08-13T15:39:22.275-00:10\", " + 
                    " \"url\": \"_EM_658_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"key\": { " + 
                    " \"id\": 132770915 " + 
                    " }, " + 
                    " \"organizationalProjectsCount\": 989, " + 
                    " \"snapshotDate\": \"1942-06-15T-1:41:60Z\", " + 
                    " \"url\": \"sa07W_\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/import")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/import -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/import")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> Response status 400 not defined for path '/statistics/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/contributors?end_date=2085-03-01T06%3A49%3A48Z")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Could not determinate loginId."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/config
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_38_getOnConfigWithQueryParamEmptyAccess_tokenReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/config -> Response status 400 not defined for path '/config'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/config?access_token=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("invalid_request"))
                .body("'error_description'", containsString("Access Token not valid"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/init
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_39_getOnInitWithQueryParamEmptyAccess_tokenReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/init -> Response status 400 not defined for path '/init'.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/init?access_token=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("invalid_request"))
                .body("'error_description'", containsString("Access Token not valid"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/statistics/contributors
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_40_getOnContributorsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> Response status 400 not defined for path '/statistics/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_117_XYZ_")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "organizations=aQd7JYhcfCZ7&" + 
                    "start_date=0O4jO9l")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Couldn't parse date string 0O4jO9l."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/projects
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_41_getOnProjectsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 22L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "90")
                .d("DESCRIPTION", "\"rYN4ka\"")
                .d("FORKS_COUNT", "390")
                .d("GIT_HUB_PROJECT_ID", "710")
                .d("LAST_PUSHED", "\"_EM_272_XYZ_\"")
                .d("NAME", "\"_EM_273_XYZ_\"")
                .d("ORGANIZATION_NAME", "\"zlAyU7\"")
                .d("PRIMARY_LANGUAGE", "\"dUq6\"")
                .d("SCORE", "NULL")
                .d("SNAPSHOT_DATE", "\"2077-07-31 08:54:43\"")
                .d("STARS_COUNT", "931")
                .d("URL", "\"Vg8X0jVi3VnREUID\"")
                .d("TITLE", "\"XiYMk\"")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/projects -> Response status 400 not defined for path '/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/projects?" + 
                    "organizations=zlAyU7&" + 
                    "offset=179916873&" + 
                    "start_date=2077-09-22T00%3A13%3A21.508-08%3A48&" + 
                    "end_date=1950-11-05T06%3A-1%3A03.471%2B10%3A04&" + 
                    "q=yDWGttSjn&" + 
                    "EMextraParam123=yGE5Ipz")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'exception'", containsString("org.springframework.web.method.annotation.MethodArgumentTypeMismatchException"))
                .body("'message'", containsString("Failed to convert value of type 'java.lang.String' to required type 'java.util.Date'; nested exception is org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [@io.swagger.annotations.ApiParam @org.springframework.web.bind.annotation.RequestParam @org.springframework.format.annotation.DateTimeFormat java.util.Date] for value '1950-11-05T06:-1:03.471+10:04'; nested exception is java.lang.IllegalArgumentException: Parse attempt failed for value [1950-11-05T06:-1:03.471+10:04]"))
                .body("'path'", containsString("/projects"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/projects
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_42_getOnProjectsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/projects -> Response status 400 not defined for path '/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/projects?" + 
                    "organizations=dc0oSK&" + 
                    "limit=265&" + 
                    "offset=151&" + 
                    "start_date=2092-02-30T19%3A21%3A08.305-12%3A40&" + 
                    "end_date=2030-00-29T00%3A57%3A04.833Z&" + 
                    "q=kK&" + 
                    "language=nGqx1mPaJYG&" + 
                    "EMextraParam123=_EM_356_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'exception'", containsString("org.springframework.web.method.annotation.MethodArgumentTypeMismatchException"))
                .body("'message'", containsString("Failed to convert value of type 'java.lang.String' to required type 'java.util.Date'; nested exception is org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [@io.swagger.annotations.ApiParam @org.springframework.web.bind.annotation.RequestParam @org.springframework.format.annotation.DateTimeFormat java.util.Date] for value '2092-02-30T19:21:08.305-12:40'; nested exception is java.lang.IllegalArgumentException: Parse attempt failed for value [2092-02-30T19:21:08.305-12:40]"))
                .body("'path'", containsString("/projects"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/statistics/languages
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_43_getOnLanguagesReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/languages -> Response status 400 not defined for path '/statistics/languages'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "end_date=_EM_4_XYZ_&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Couldn't parse date string _EM_4_XYZ_."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/statistics/projects
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_44_getOnProjectsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> Response status 400 not defined for path '/statistics/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "BhKz4U")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "organizations=hqptqmQ4B&" + 
                    "start_date=Lev&" + 
                    "end_date=h&" + 
                    "q=F&" + 
                    "sortBy=w75e5mxZR4P")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Couldn't parse date string Lev."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/statistics/projects
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_45_getOnStatisticsProjectsWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> Response status 400 not defined for path '/statistics/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "LanVZrs")
                .get(baseUrlOfSut + "/statistics/projects?start_date=ZWJH")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Couldn't parse date string ZWJH."));
    }
    
    
    /**
    * Calls:
    * 1 - (403) GET:/statistics/contributors
    * 2 - (403) POST:/config/scoring.project
    * 3 - (400) POST:/config/scoring.project
    * Found 3 potential faults of type-code 200
    */
    @Test(timeout = 60000)
    public void test_46_postOnConfigScoring_projectWithQueryParamEmptyAccess_token() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "organizations=_EM_354_XYZ_&" + 
                    "access_token=XwV")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .post(baseUrlOfSut + "/config/scoring.project?EMextraParam123=_EM_21_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> Response status 400 not defined for path '/config/scoring.project'.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .post(baseUrlOfSut + "/config/scoring.project?access_token=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("invalid_request"))
                .body("'error_description'", containsString("Access Token not valid"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/statistics
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_47_getOnStatisticsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics -> Response status 400 not defined for path '/statistics'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics?" + 
                    "organizations=GuzGF&" + 
                    "start_date=_EM_19_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Invalid date format for stardDate"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/statistics
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_48_getOnStatisticsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 12L)
                .d("ID", "907")
                .d("SNAPSHOT_DATE", "\"1994-06-12 01:03:55\"")
                .d("ALL_CONTRIBUTORS_COUNT", "779")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "733")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "319")
                .d("ORGANIZATION_NAME", "\"SwvLODQS0m5aro\"")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "891")
                .d("TAGS_COUNT", "913")
                .d("TEAMS_COUNT", "807")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "364")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics -> Response status 400 not defined for path '/statistics'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/statistics?" + 
                    "organizations=SwvLODQS0m5aro&" + 
                    "end_date=w7xaFHFEvRPDA&" + 
                    "EMextraParam123=_EM_138_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Invalid date format for endDate"));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/statistics/contributors
    * 2 - (403) GET:/languages
    * Found 2 potential faults of type-code 200
    */
    @Test(timeout = 60000)
    public void test_49_getOnLanguagesWithQueryParamsNegativeOffsetReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> Response status 400 not defined for path '/statistics/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "organizations=Hrfm&" + 
                    "start_date=ZifTT6kiZBGwKnvG")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Couldn't parse date string ZifTT6kiZBGwKnvG."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/languages -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=_EM_535_XYZ_&" + 
                    "limit=838&" + 
                    "offset=-850&" + 
                    "q=_EM_536_XYZ_&" + 
                    "access_token=RZ")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/statistics
    * 2 - (400) GET:/delete
    * Found 2 potential faults of type-code 200
    */
    @Test(timeout = 60000)
    public void test_50_getOnDeleteReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 107L)
                .d("ID", "332")
                .d("SNAPSHOT_DATE", "\"2000-08-06 21:46:28\"")
                .d("ALL_CONTRIBUTORS_COUNT", "66")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "168")
                .d("ALL_STARS_COUNT", "649")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "\"clywsSf|RDJkHy1\"")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "257")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "260")
                .d("TEAMS_COUNT", "970")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics -> Response status 400 not defined for path '/statistics'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "clywsSf|RDJkHy1")
                .get(baseUrlOfSut + "/statistics?" + 
                    "organizations=clywsSf%7CRDJkHy1&" + 
                    "end_date=2b4vzlfZFGqKj")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Invalid date format for endDate"));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/delete -> Response status 400 not defined for path '/delete'.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "zKzYcG_j")
                .get(baseUrlOfSut + "/delete?access_token=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("invalid_request"))
                .body("'error_description'", containsString("Access Token not valid"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/contributors
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_51_getOnContributorsWithQueryParamsEmptyAccess_token() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> Response status 400 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "Fxv2")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=ozvPOg9&" + 
                    "end_date=_&" + 
                    "sortBy=apI&" + 
                    "q=DGCUIg2&" + 
                    "access_token=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("invalid_request"))
                .body("'error_description'", containsString("Access Token not valid"));
    }
    
    
    /**
    * Calls:
    * (401) GET:/delete
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_52_getOnDeleteReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/delete -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "_EM_9_XYZ_")
                .get(baseUrlOfSut + "/delete")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("unauthorized"))
                .body("'error_description'", containsString("Full authentication is required to access this resource"));
    }
    
    
    /**
    * Calls:
    * (401) GET:/init
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_53_getOnInitReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/init -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/init?EMextraParam123=23Ail7Z5TLa")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("unauthorized"))
                .body("'error_description'", containsString("Full authentication is required to access this resource"));
    }
    
    
    /**
    * Calls:
    * (403) GET:/fetch
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_54_getOnFetchReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/fetch -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/fetch?access_token=suo0nEhKl")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/config
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_55_getOnConfigWithQueryParamsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/config -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/config?" + 
                    "EMextraParam123=_EM_119_XYZ_&" + 
                    "access_token=pk")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/delete
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_56_getOnDeleteWithQueryParamsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/delete -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "_EM_9_XYZ_")
                .get(baseUrlOfSut + "/delete?" + 
                    "EMextraParam123=42&" + 
                    "access_token=7l9aW2n5FZ")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/init
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_57_getOnInitReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/init -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/init?access_token=wrtytiw")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/export
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_58_getOnExportWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/export?access_token=r2kcdtq9V9jlG")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) POST:/import
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_59_postOnImportReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/import -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"projects\": [ " + 
                    " { " + 
                    " \"commitsCount\": 871, " + 
                    " \"lastPushed\": \"7F0eWtiJhVCn2Fg\", " + 
                    " \"maintainers\": [ " + 
                    " \"n3wjVO6gJAFN\" " + 
                    " ], " + 
                    " \"primaryLanguage\": \"C\", " + 
                    " \"snapshotDate\": \"2058-03-06T00:39:15.001Z\", " + 
                    " \"url\": \"EwoMiTSM0dF\" " + 
                    " }, " + 
                    " { " + 
                    " \"commitsCount\": 863, " + 
                    " \"contributorsCount\": 481, " + 
                    " \"description\": \"HcBaUSLajzQFkFQq\", " + 
                    " \"forksCount\": 568, " + 
                    " \"image\": \"Y\", " + 
                    " \"maintainers\": [ " + 
                    " \"_4G\", " + 
                    " \"1f\", " + 
                    " \"td4mvML\", " + 
                    " \"VOZU2Qhc\", " + 
                    " \"gTVM0\" " + 
                    " ], " + 
                    " \"snapshotDate\": \"1965-12-07T24:15:01.761Z\", " + 
                    " \"starsCount\": 9, " + 
                    " \"title\": \"pyZ\", " + 
                    " \"url\": \"lWnInjNv3\" " + 
                    " }, " + 
                    " { " + 
                    " \"commitsCount\": 120, " + 
                    " \"lastPushed\": \"EDiMzwf5\", " + 
                    " \"maintainers\": [ " + 
                    " \"oNBVC1de\", " + 
                    " \"HCKEziNj5OMMK\", " + 
                    " \"2lbD\", " + 
                    " \"w9CNNyw\" " + 
                    " ], " + 
                    " \"name\": \"j_feUFGL\", " + 
                    " \"organizationName\": \"RXdm\", " + 
                    " \"snapshotDate\": \"2030-11-12T23:34:27-04:38\", " + 
                    " \"title\": \"zeWe3AI\", " + 
                    " \"url\": \"laXIjWSIgE\" " + 
                    " }, " + 
                    " { " + 
                    " \"commitsCount\": 788, " + 
                    " \"contributorsCount\": 60, " + 
                    " \"externalContributorsCount\": 433, " + 
                    " \"forksCount\": 944, " + 
                    " \"gitHubProjectId\": 749, " + 
                    " \"image\": \"Te1\", " + 
                    " \"maintainers\": [ " + 
                    " \"CYaGH4bkXX\", " + 
                    " \"nOgB\", " + 
                    " \"aNChLDJHwGF2\", " + 
                    " \"xPHZ5DDKh614\", " + 
                    " \"IrgIC5Xwsb1\" " + 
                    " ], " + 
                    " \"organizationName\": \"bEcdUBLMMvx\", " + 
                    " \"score\": 957, " + 
                    " \"starsCount\": 415, " + 
                    " \"title\": \"\", " + 
                    " \"url\": \"V0jFxYvuZyq5oN\" " + 
                    " } " + 
                    " ], " + 
                    " \"statistics\": [] " + 
                    " } ")
                .post(baseUrlOfSut + "/import?" + 
                    "EMextraParam123=42&" + 
                    "access_token=g59IOBwZihG")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) POST:/config/scoring.project
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_60_postOnScoring_projectReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("X-Organizations", "NWCuaIxTYC")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" NWCuaIxTY ")
                .post(baseUrlOfSut + "/config/scoring.project?access_token=I7")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) POST:/config/scoring.project
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_61_postOnScoring_projectReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .post(baseUrlOfSut + "/config/scoring.project?EMextraParam123=_EM_21_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/statistics/languages
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_62_getOnLanguagesReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/languages -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "organizations=T&" + 
                    "start_date=Alflv&" + 
                    "access_token=8")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/statistics/contributors
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_63_getOnContributorsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "organizations=_EM_354_XYZ_&" + 
                    "start_date=6x&" + 
                    "access_token=_EM_355_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/statistics/contributors
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_64_getOnContributorsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "organizations=_EM_354_XYZ_&" + 
                    "end_date=JenFVHvV2F5m&" + 
                    "access_token=_EM_355_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * 1 - (403) POST:/import
    * 2 - (403) POST:/import
    * Found 2 potential faults of type-code 200
    */
    @Test(timeout = 60000)
    public void test_65_postOnImportReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/import -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"contributors\": [ " + 
                    " { " + 
                    " \"key\": { " + 
                    " \"id\": 688, " + 
                    " \"snapshotDate\": \"2031-10-12T14:36:53.585+11:35\" " + 
                    " }, " + 
                    " \"loginId\": \"kDpmNuCsrB\", " + 
                    " \"name\": \"Ra\", " + 
                    " \"organizationalCommitsCount\": 800, " + 
                    " \"personalCommitsCount\": 223, " + 
                    " \"personalProjectsCount\": 91, " + 
                    " \"snapshotDate\": \"1990-10-05T22:09:48-05:57\" " + 
                    " }, " + 
                    " { " + 
                    " \"organizationName\": \"5K6HM7eo3f5\", " + 
                    " \"organizationalCommitsCount\": 995, " + 
                    " \"personalCommitsCount\": 895, " + 
                    " \"personalProjectsCount\": 707, " + 
                    " \"snapshotDate\": \"1911-03-10T13:47:25Z\", " + 
                    " \"url\": \"JgqJCFWgAEKj\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 1940058908519677060, " + 
                    " \"loginId\": \"jAxB0uo7YS49gjJ\", " + 
                    " \"name\": \"lrwcosnGt\", " + 
                    " \"organizationId\": -7378199352527453781, " + 
                    " \"organizationalProjectsCount\": 108, " + 
                    " \"personalCommitsCount\": -823823607, " + 
                    " \"snapshotDate\": \"1992-05-00T11:47:28+06:04\", " + 
                    " \"url\": \"nMqIaGkDZ8OSV\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 954, " + 
                    " \"loginId\": \"9\", " + 
                    " \"organizationId\": 816, " + 
                    " \"organizationName\": \"_GQlPI1\" " + 
                    " }, " + 
                    " { " + 
                    " \"key\": { " + 
                    " \"organizationId\": 781, " + 
                    " \"snapshotDate\": \"2091-13-09T13:16:38+09:17\" " + 
                    " }, " + 
                    " \"loginId\": \"62YTzmC52\", " + 
                    " \"name\": \"KTTgNh2QejTa\", " + 
                    " \"organizationId\": 474, " + 
                    " \"organizationalProjectsCount\": 300, " + 
                    " \"personalCommitsCount\": 585, " + 
                    " \"snapshotDate\": \"1994-09-21T07:55:41.468Z\" " + 
                    " } " + 
                    " ], " + 
                    " \"projects\": [ " + 
                    " { " + 
                    " \"contributorsCount\": 934, " + 
                    " \"description\": \"mQjVoX0BcS2bi5C\", " + 
                    " \"gitHubProjectId\": 733, " + 
                    " \"image\": \"o3A6sT3\", " + 
                    " \"languageList\": [ " + 
                    " \"PR932gNIY7f\", " + 
                    " \"HZLWVWMPCo\", " + 
                    " \"BYY3FBKP\", " + 
                    " \"Irq0uc7oORczVTTm\", " + 
                    " \"nEbWdAN6xsxg\" " + 
                    " ], " + 
                    " \"name\": \"PUd\", " + 
                    " \"snapshotDate\": \"1976-01-22T10:-1:45.335-12:41\", " + 
                    " \"title\": \"s0KRO1xFAuMb0\", " + 
                    " \"url\": \"goMRhhbYa\" " + 
                    " }, " + 
                    " { " + 
                    " \"contributorsCount\": 193, " + 
                    " \"forksCount\": 40, " + 
                    " \"gitHubProjectId\": 891, " + 
                    " \"image\": \"IGPFNWrxK\", " + 
                    " \"languageList\": [ " + 
                    " \"t3xWzyoP8f_1\", " + 
                    " \"lPSLeJtxrZYBj\", " + 
                    " \"iNaZFNBT9W\", " + 
                    " \"fJgZ\", " + 
                    " \"ho\" " + 
                    " ], " + 
                    " \"lastPushed\": \"sFL\", " + 
                    " \"maintainers\": [ " + 
                    " \"f8IjeyyV_psJv\" " + 
                    " ], " + 
                    " \"name\": \"oCil\", " + 
                    " \"primaryLanguage\": \"NH\", " + 
                    " \"starsCount\": 140, " + 
                    " \"title\": \"IzIpzY1jp\", " + 
                    " \"url\": \"4pNp7tdPjqV63m\" " + 
                    " }, " + 
                    " { " + 
                    " \"commitsCount\": 901, " + 
                    " \"description\": \"AzH2CVZd9noB\", " + 
                    " \"externalContributorsCount\": 487, " + 
                    " \"gitHubProjectId\": 132, " + 
                    " \"languageList\": [ " + 
                    " \"\", " + 
                    " \"l1a2e_Du\" " + 
                    " ], " + 
                    " \"maintainers\": [], " + 
                    " \"starsCount\": 76, " + 
                    " \"title\": \"Dos3WNeeSPouC\", " + 
                    " \"url\": \"LwoTrD6\" " + 
                    " } " + 
                    " ], " + 
                    " \"statistics\": [ " + 
                    " { " + 
                    " \"allForksCount\": 633, " + 
                    " \"allSizeCount\": -338880923, " + 
                    " \"allStarsCount\": 315, " + 
                    " \"id\": 817, " + 
                    " \"key\": { " + 
                    " \"id\": 528, " + 
                    " \"snapshotDate\": \"1942-01-01T21:17:23.211+17:15\" " + 
                    " }, " + 
                    " \"publicProjectCount\": 275 " + 
                    " }, " + 
                    " { " + 
                    " \"allForksCount\": 671, " + 
                    " \"allSizeCount\": 897489446, " + 
                    " \"allStarsCount\": 761, " + 
                    " \"externalContributorsCount\": 274, " + 
                    " \"id\": 980, " + 
                    " \"key\": {}, " + 
                    " \"membersCount\": 760, " + 
                    " \"privateProjectCount\": 592, " + 
                    " \"programLanguagesCount\": 886, " + 
                    " \"publicProjectCount\": 58, " + 
                    " \"snapshotDate\": \"2050-12-19T12:00:41.737+04:39\", " + 
                    " \"tagsCount\": 619 " + 
                    " }, " + 
                    " { " + 
                    " \"allSizeCount\": 264, " + 
                    " \"externalContributorsCount\": 573, " + 
                    " \"key\": { " + 
                    " \"id\": 7116663562852375709 " + 
                    " }, " + 
                    " \"membersCount\": 482, " + 
                    " \"organizationName\": \"A_ZY4ufr\", " + 
                    " \"privateProjectCount\": 301, " + 
                    " \"programLanguagesCount\": 1204794772, " + 
                    " \"publicProjectCount\": 648, " + 
                    " \"snapshotDate\": \"2007-07-05T07:00:00.420Z\", " + 
                    " \"tagsCount\": 920, " + 
                    " \"teamsCount\": 457 " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/import?access_token=xdFAfOaPj9cC")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/import -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"contributors\": [ " + 
                    " { " + 
                    " \"name\": \"pYqXBOGCcpi8OGc\", " + 
                    " \"organizationId\": 80, " + 
                    " \"organizationName\": \"WQ03y8SXAvIy\", " + 
                    " \"organizationalCommitsCount\": 568, " + 
                    " \"organizationalProjectsCount\": 387 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 768, " + 
                    " \"loginId\": \"ZT501n5EmtRV5d\", " + 
                    " \"name\": \"\", " + 
                    " \"organizationalCommitsCount\": 265, " + 
                    " \"personalCommitsCount\": 849, " + 
                    " \"personalProjectsCount\": 950 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 378, " + 
                    " \"name\": \"euJgdNPc0czpF\", " + 
                    " \"organizationName\": \"REoBhEJ0v\", " + 
                    " \"url\": \"yEzBM9Iu98\" " + 
                    " }, " + 
                    " { " + 
                    " \"name\": \"g8lryT\", " + 
                    " \"organizationalCommitsCount\": 446, " + 
                    " \"organizationalProjectsCount\": 314, " + 
                    " \"personalProjectsCount\": 104 " + 
                    " }, " + 
                    " { " + 
                    " \"key\": { " + 
                    " \"id\": 2055672257 " + 
                    " }, " + 
                    " \"name\": \"hI5YOQv\", " + 
                    " \"organizationId\": 373, " + 
                    " \"organizationName\": \"wX9d4\", " + 
                    " \"organizationalCommitsCount\": 115, " + 
                    " \"personalCommitsCount\": 20 " + 
                    " } " + 
                    " ], " + 
                    " \"projects\": [ " + 
                    " { " + 
                    " \"contributorsCount\": 226, " + 
                    " \"description\": \"TMuXK\", " + 
                    " \"externalContributorsCount\": 874, " + 
                    " \"gitHubProjectId\": 33, " + 
                    " \"lastPushed\": \"O\", " + 
                    " \"maintainers\": [ " + 
                    " \"ZsWGxtqrXNKr\", " + 
                    " \"4tPuL3KXdULJ24A\" " + 
                    " ], " + 
                    " \"score\": 304, " + 
                    " \"starsCount\": 314, " + 
                    " \"title\": \"OiKumn\" " + 
                    " } " + 
                    " ], " + 
                    " \"statistics\": [ " + 
                    " { " + 
                    " \"allStarsCount\": 610, " + 
                    " \"externalContributorsCount\": 304, " + 
                    " \"id\": 365, " + 
                    " \"key\": { " + 
                    " \"id\": 760, " + 
                    " \"snapshotDate\": \"2017-07-00T05:32:40.624-10:41\" " + 
                    " }, " + 
                    " \"organizationName\": \"lbne_\", " + 
                    " \"privateProjectCount\": 35, " + 
                    " \"programLanguagesCount\": 30, " + 
                    " \"tagsCount\": 520 " + 
                    " }, " + 
                    " { " + 
                    " \"allSizeCount\": 486, " + 
                    " \"membersCount\": 730, " + 
                    " \"privateProjectCount\": 602, " + 
                    " \"publicProjectCount\": 582, " + 
                    " \"snapshotDate\": \"1917-09-20T09:06:39.826+18:11\", " + 
                    " \"teamsCount\": 269 " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/import?" + 
                    "access_token=S21ap1xT5MQ&" + 
                    "end_date=LTl_QfJgsM&" + 
                    "organizations=r8&" + 
                    "start_date=xN7Qx")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/statistics
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_66_getOnStatisticsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics?" + 
                    "organizations=_EM_351_XYZ_&" + 
                    "start_date=lGUNmQ&" + 
                    "end_date=Uid5X&" + 
                    "access_token=_EM_353_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/languages
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_67_getOnLanguagesWithQueryParamsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/languages -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=ynautr07&" + 
                    "limit=445&" + 
                    "offset=49&" + 
                    "access_token=4U2jYznDwMvNNS")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * 1 - (403) POST:/config/scoring.project
    * 2 - (403) POST:/config/scoring.project
    * Found 2 potential faults of type-code 200
    */
    @Test(timeout = 60000)
    public void test_68_postOnScoring_projectReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("X-Organizations", "Oly560beDk4GLQNi")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"wjH1dZZCQ\" ")
                .post(baseUrlOfSut + "/config/scoring.project")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"wjH1dZZCQ\" ")
                .post(baseUrlOfSut + "/config/scoring.project?" + 
                    "offset=Ir_EtcLiL3wC9&" + 
                    "limit=wjH1dZZCQ")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/statistics/projects
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_69_getOnProjectsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "organizations=zXwHL0n&" + 
                    "access_token=T&" + 
                    "offset=R696nqzVwNzBmz2t&" + 
                    "language=0")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * 1 - (403) GET:/statistics
    * 2 - (403) GET:/export
    * Found 2 potential faults of type-code 200
    */
    @Test(timeout = 60000)
    public void test_70_getOnExportWithQueryParamsEmptyOrganizationsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics?" + 
                    "organizations=S3&" + 
                    "end_date=sRtOEnQaVfE4V&" + 
                    "access_token=V")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "_EM_10_XYZ_")
                .header("x-organizations", "lh2")
                .header("X-Organizations", "EvEN5QkB2j8Qhi3L")
                .get(baseUrlOfSut + "/export?" + 
                    "access_token=fwuutx&" + 
                    "end_date=ywg&" + 
                    "organizations=")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/contributors
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_71_getOnContributorsWithQueryParamsEmptyStart_dateAndEmptySortBy() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=h3k9YJtcDGVzUECO&" + 
                    "limit=772&" + 
                    "offset=890&" + 
                    "start_date=&" + 
                    "sortBy=&" + 
                    "q=0D&" + 
                    "access_token=_EM_797_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/contributors
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_72_getOnContributorsWithQueryParamsNegativeOffsetEmptySortBy() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=_EM_798_XYZ_&" + 
                    "limit=772&" + 
                    "offset=-261254&" + 
                    "start_date=_EM_794_XYZ_&" + 
                    "sortBy=&" + 
                    "q=0D&" + 
                    "access_token=26pN0qtqLMo3")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/projects
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_73_getOnProjectsWithQueryParamsNegativeOffsetReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/projects -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "ow3xfju0JN3wr1")
                .header("X-Organizations", "uqix0bn3CNAAQ")
                .get(baseUrlOfSut + "/projects?" + 
                    "limit=884&" + 
                    "offset=-349908428&" + 
                    "start_date=2063-02-16T25%3A07%3A06.126%2B10%3A58&" + 
                    "q=k&" + 
                    "language=9cnkvM&" + 
                    "access_token=SNi")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/projects
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_74_getOnProjectsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/projects -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "fm")
                .get(baseUrlOfSut + "/projects?" + 
                    "offset=954&" + 
                    "start_date=1929-05-11T-1%3A44%3A55%2B08%3A25&" + 
                    "end_date=2024-02-11T01%3A04%3A38-00%3A12&" + 
                    "EMextraParam123=_EM_107_XYZ_&" + 
                    "access_token=Q6D24TKGpBiELZX")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/projects
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_75_getOnProjectsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/projects -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "OMoAlkA")
                .header("X-Organizations", "4f5kRAf")
                .get(baseUrlOfSut + "/projects?" + 
                    "offset=453&" + 
                    "start_date=1990-05-22T15%3A55%3A17.075Z&" + 
                    "end_date=1939-05-14T21%3A44%3A21.539-18%3A20&" + 
                    "sortBy=TVftIwScm6L&" + 
                    "q=ELYC8kFIeV&" + 
                    "language=TtD3&" + 
                    "access_token=Sykoq7aa9_mnBs5w")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * 1 - (403) POST:/config/scoring.project
    * 2 - (403) POST:/config/scoring.project
    * Found 2 potential faults of type-code 200
    */
    @Test(timeout = 60000)
    public void test_76_postOnScoring_projectReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("X-Organizations", "FscFiXUz")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"4NGVoPMMKm\" ")
                .post(baseUrlOfSut + "/config/scoring.project")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("X-Organizations", "FscFiXUz")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" _EM_854_XYZ_ ")
                .post(baseUrlOfSut + "/config/scoring.project?" + 
                    "access_token=h3ABiE2&" + 
                    "end_date=ZDDLuXls2OU&" + 
                    "q=64ip&" + 
                    "offset=x5yMF8tBd&" + 
                    "sortBy=XimLCdvAZzrdj")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * 1 - (403) POST:/config/scoring.project
    * 2 - (403) POST:/config/scoring.project
    * 3 - (403) GET:/fetch
    * Found 3 potential faults of type-code 200
    */
    @Test(timeout = 60000)
    public void test_77_getOnFetchReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .post(baseUrlOfSut + "/config/scoring.project?access_token=FFILToUX4")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" jY9cdTPqrrVj1nqM ")
                .post(baseUrlOfSut + "/config/scoring.project?" + 
                    "end_date=8fRX29&" + 
                    "offset=8fRX29&" + 
                    "organizations=8fRX29&" + 
                    "limit=8fRX29&" + 
                    "sortBy=8fRX29&" + 
                    "language=8fRX29&" + 
                    "start_date=8fRX29")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/fetch -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "2_80")
                .header("X-Organizations", "2Bo2McdVb2jDye")
                .get(baseUrlOfSut + "/fetch?" + 
                    "access_token=RQswZMvx7RYDENx&" + 
                    "end_date=c&" + 
                    "organizations=m1FUTdfeYQY_QT&" + 
                    "start_date=GyGcQpiFymJhqho")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * 1 - (403) POST:/config/scoring.project
    * 2 - (403) POST:/config/scoring.project
    * 3 - (403) GET:/fetch
    * Found 3 potential faults of type-code 200
    */
    @Test(timeout = 60000)
    public void test_78_getOnFetchReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "_EM_18_XYZ_")
                .contentType("application/json")
                .post(baseUrlOfSut + "/config/scoring.project")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" jY9cdTPqrrVj1nqM ")
                .post(baseUrlOfSut + "/config/scoring.project?" + 
                    "access_token=8fRX29&" + 
                    "end_date=8fRX29&" + 
                    "q=8fRX29&" + 
                    "organizations=8fRX29&" + 
                    "language=8fRX29")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/fetch -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/fetch?access_token=WNaMnts0RQZEd5R")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * 1 - (403) GET:/projects
    * 2 - (403) GET:/statistics/languages
    * Found 2 potential faults of type-code 200
    */
    @Test(timeout = 60000)
    public void test_79_getOnLanguagesReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/projects -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "OMoAlkA")
                .header("X-Organizations", "4f5kRAf")
                .get(baseUrlOfSut + "/projects?" + 
                    "offset=453&" + 
                    "start_date=1990-05-22T15%3A55%3A17.075Z&" + 
                    "end_date=1939-05-14T21%3A44%3A21.539-18%3A20&" + 
                    "sortBy=TVftIwScm6L&" + 
                    "q=ELYC8kFIeV&" + 
                    "language=TtD3&" + 
                    "access_token=Sykoq7aa9_mnBs5w")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/languages -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "cj8KCgPdIGzR")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "organizations=7a&" + 
                    "access_token=UBuuy&" + 
                    "q=2aY9X&" + 
                    "limit=mxr463GEErkJ6V")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) POST:/import
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_80_postOnImportReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/import -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"contributors\": [ " + 
                    " { " + 
                    " \"id\": 1858244314, " + 
                    " \"loginId\": \"mG2rtUpnim2Hb3GF\", " + 
                    " \"name\": \"IcavoKVE9SYBIr\", " + 
                    " \"organizationId\": 752, " + 
                    " \"organizationName\": \"zmGVA\", " + 
                    " \"organizationalCommitsCount\": 437, " + 
                    " \"url\": \"JXgXbsog\" " + 
                    " }, " + 
                    " { " + 
                    " \"key\": { " + 
                    " \"id\": 258, " + 
                    " \"organizationId\": 355, " + 
                    " \"snapshotDate\": \"2066-11-06T01:07:24.250Z\" " + 
                    " }, " + 
                    " \"organizationalCommitsCount\": 669, " + 
                    " \"personalCommitsCount\": 900, " + 
                    " \"personalProjectsCount\": 531, " + 
                    " \"snapshotDate\": \"1918-00-14T23:48:12Z\", " + 
                    " \"url\": \"pE\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/import")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
    }
    
    
    /**
    * Calls:
    * 1 - (403) GET:/statistics/projects
    * 2 - (403) POST:/config/scoring.project
    * 3 - (403) POST:/config/scoring.project
    * 4 - (403) GET:/projects
    * Found 4 potential faults of type-code 200
    */
    @Test(timeout = 60000)
    public void test_81_getOnProjectsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "F7z_")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "organizations=F7z_&" + 
                    "start_date=Dg1ltp&" + 
                    "end_date=&" + 
                    "access_token=F7z_&" + 
                    "q=F7z_&" + 
                    "offset=UDlqXIvTlTI")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("X-Organizations", "F7z_")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .post(baseUrlOfSut + "/config/scoring.project")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" xUiVAPxigGCk17 ")
                .post(baseUrlOfSut + "/config/scoring.project?" + 
                    "access_token=F7z_&" + 
                    "q=F7z_&" + 
                    "organizations=F7z_&" + 
                    "limit=F7z_&" + 
                    "sortBy=F7z_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/projects -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "ILUwmNYj9")
                .get(baseUrlOfSut + "/projects?" + 
                    "limit=297&" + 
                    "end_date=1999-12-21T15%3A49%3A48.335%2B01%3A05&" + 
                    "q=F7z_&" + 
                    "language=F7z_&" + 
                    "access_token=F7z_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * 1 - (403) POST:/import
    * 2 - (403) POST:/import
    * Found 2 potential faults of type-code 200
    */
    @Test(timeout = 60000)
    public void test_82_postOnImportReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/import -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "_EM_18_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"projects\": [], " + 
                    " \"statistics\": [ " + 
                    " { " + 
                    " \"allContributorsCount\": 909, " + 
                    " \"allForksCount\": 332, " + 
                    " \"allSizeCount\": 291, " + 
                    " \"key\": {}, " + 
                    " \"membersCount\": 656, " + 
                    " \"privateProjectCount\": 300, " + 
                    " \"programLanguagesCount\": 990, " + 
                    " \"publicProjectCount\": 229, " + 
                    " \"tagsCount\": 503755070 " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/import?EMextraParam123=_EM_17_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/import -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"projects\": [ " + 
                    " { " + 
                    " \"contributorsCount\": 566, " + 
                    " \"forksCount\": 250, " + 
                    " \"gitHubProjectId\": 492, " + 
                    " \"image\": \"Yi6WDLm6\", " + 
                    " \"lastPushed\": \"z7M31QLCws1rf\", " + 
                    " \"maintainers\": [ " + 
                    " \"a5tb\", " + 
                    " \"kX_\", " + 
                    " \"b4y6P\" " + 
                    " ], " + 
                    " \"name\": \"T9w\", " + 
                    " \"organizationName\": \"uIb6Oacl1H1\", " + 
                    " \"score\": 700, " + 
                    " \"snapshotDate\": \"2082-10-24T06:49:27.779Z\", " + 
                    " \"title\": \"pHgLb8jMD8h6T\" " + 
                    " }, " + 
                    " { " + 
                    " \"contributorsCount\": 370, " + 
                    " \"externalContributorsCount\": 122, " + 
                    " \"forksCount\": 0, " + 
                    " \"gitHubProjectId\": 442, " + 
                    " \"image\": \"N_94NKO\", " + 
                    " \"lastPushed\": \"HHoY5X_i0maiCVl\", " + 
                    " \"name\": \"nyjMD\", " + 
                    " \"primaryLanguage\": \"p1Vu8c2pMhuIix\", " + 
                    " \"score\": 486521235, " + 
                    " \"starsCount\": 583, " + 
                    " \"title\": \"BDRKZFzMa\", " + 
                    " \"url\": \"IUFa\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/import?" + 
                    "access_token=_oaVsAGFI&" + 
                    "end_date=xVA1o7jyWnhERN")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * 1 - (403) POST:/import
    * 2 - (403) POST:/import
    * Found 2 potential faults of type-code 200
    */
    @Test(timeout = 60000)
    public void test_83_postOnImportReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/import -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/import?EMextraParam123=42")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/import -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"projects\": [ " + 
                    " { " + 
                    " \"contributorsCount\": 29, " + 
                    " \"externalContributorsCount\": 808, " + 
                    " \"gitHubProjectId\": 202, " + 
                    " \"image\": \"pMwauqXNIU5yeS5c\", " + 
                    " \"languageList\": [ " + 
                    " \"OrJ\", " + 
                    " \"IXJOrgCbLNL\", " + 
                    " \"_EM_77_XYZ_\", " + 
                    " \"Dtjf\", " + 
                    " \"\" " + 
                    " ], " + 
                    " \"lastPushed\": \"_EM_78_XYZ_\", " + 
                    " \"maintainers\": [], " + 
                    " \"score\": 954, " + 
                    " \"snapshotDate\": \"1978-05-16T18:41:41.908+15:25\", " + 
                    " \"starsCount\": 805 " + 
                    " }, " + 
                    " { " + 
                    " \"commitsCount\": 996, " + 
                    " \"description\": \"mT\", " + 
                    " \"externalContributorsCount\": 995, " + 
                    " \"image\": \"cOqC\", " + 
                    " \"lastPushed\": \"u93fgEYk10q_4KoC\", " + 
                    " \"organizationName\": \"N\", " + 
                    " \"primaryLanguage\": \"_EM_86_XYZ_\", " + 
                    " \"snapshotDate\": \"2029-03-29T09:19:55Z\", " + 
                    " \"starsCount\": 133, " + 
                    " \"title\": \"_EM_87_XYZ_\", " + 
                    " \"url\": \"_EM_88_XYZ_\" " + 
                    " } " + 
                    " ], " + 
                    " \"statistics\": [ " + 
                    " { " + 
                    " \"allContributorsCount\": 284, " + 
                    " \"allStarsCount\": 946, " + 
                    " \"key\": {}, " + 
                    " \"teamsCount\": 850 " + 
                    " }, " + 
                    " { " + 
                    " \"allContributorsCount\": -1465877343, " + 
                    " \"allForksCount\": 31, " + 
                    " \"allSizeCount\": 644, " + 
                    " \"allStarsCount\": 724, " + 
                    " \"externalContributorsCount\": 937, " + 
                    " \"id\": 846, " + 
                    " \"snapshotDate\": \"2001-04-00T03:12:17Z\" " + 
                    " }, " + 
                    " { " + 
                    " \"allForksCount\": 629, " + 
                    " \"allStarsCount\": 386, " + 
                    " \"externalContributorsCount\": 4, " + 
                    " \"id\": -3057574486903777661, " + 
                    " \"organizationName\": \"_EM_90_XYZ_\", " + 
                    " \"privateProjectCount\": 506, " + 
                    " \"programLanguagesCount\": 563, " + 
                    " \"snapshotDate\": \"2062-07-09T09:07:40.068Z\", " + 
                    " \"tagsCount\": 442 " + 
                    " }, " + 
                    " { " + 
                    " \"allContributorsCount\": 938, " + 
                    " \"allForksCount\": 478, " + 
                    " \"allSizeCount\": 529, " + 
                    " \"allStarsCount\": 733, " + 
                    " \"id\": -639689346, " + 
                    " \"key\": { " + 
                    " \"id\": 7189098651581883455, " + 
                    " \"snapshotDate\": \"1916-03-21T12:08:43.889+10:49\" " + 
                    " }, " + 
                    " \"membersCount\": 315, " + 
                    " \"organizationName\": \"YelkU7CrhTwv4K\", " + 
                    " \"publicProjectCount\": 19, " + 
                    " \"snapshotDate\": \"1933-13-12T12:34:24.326-18:05\", " + 
                    " \"tagsCount\": 368 " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/import?EMextraParam123=42")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
    }
    
    
    /**
    * Calls:
    * 1 - (403) POST:/import
    * 2 - (403) POST:/import
    * Found 2 potential faults of type-code 200
    */
    @Test(timeout = 60000)
    public void test_84_postOnImportReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/import -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "_EM_18_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"contributors\": [ " + 
                    " { " + 
                    " \"key\": { " + 
                    " \"id\": 688, " + 
                    " \"snapshotDate\": \"2031-10-12T14:36:53.585+11:35\" " + 
                    " }, " + 
                    " \"loginId\": \"kDpmNuCsrB\", " + 
                    " \"name\": \"Ra\", " + 
                    " \"organizationalCommitsCount\": 800, " + 
                    " \"personalCommitsCount\": 223, " + 
                    " \"personalProjectsCount\": 91, " + 
                    " \"snapshotDate\": \"1990-10-05T22:09:48-05:57\" " + 
                    " }, " + 
                    " { " + 
                    " \"organizationName\": \"5K6HM7eo3f5\", " + 
                    " \"organizationalCommitsCount\": 995, " + 
                    " \"personalCommitsCount\": 895, " + 
                    " \"personalProjectsCount\": 707, " + 
                    " \"snapshotDate\": \"1911-03-10T13:47:25Z\", " + 
                    " \"url\": \"JgqJCFWgAEKj\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 1940058908519677060, " + 
                    " \"loginId\": \"jAxB0uo7YS49gjJ\", " + 
                    " \"name\": \"lrwcosnGt\", " + 
                    " \"organizationId\": -7378199352527453781, " + 
                    " \"organizationalProjectsCount\": 108, " + 
                    " \"personalCommitsCount\": -823823607, " + 
                    " \"snapshotDate\": \"1992-05-00T11:47:28+06:04\", " + 
                    " \"url\": \"nMqIaGkDZ8OSV\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 954, " + 
                    " \"loginId\": \"9\", " + 
                    " \"organizationId\": 816, " + 
                    " \"organizationName\": \"_GQlPI1\" " + 
                    " }, " + 
                    " { " + 
                    " \"key\": { " + 
                    " \"organizationId\": 781, " + 
                    " \"snapshotDate\": \"2091-13-09T13:16:38+09:17\" " + 
                    " }, " + 
                    " \"loginId\": \"62YTzmC52\", " + 
                    " \"name\": \"KTTgNh2QejTa\", " + 
                    " \"organizationId\": 474, " + 
                    " \"organizationalProjectsCount\": 300, " + 
                    " \"personalCommitsCount\": 585, " + 
                    " \"snapshotDate\": \"1994-09-21T07:55:41.468Z\" " + 
                    " } " + 
                    " ], " + 
                    " \"statistics\": [ " + 
                    " { " + 
                    " \"allForksCount\": 633, " + 
                    " \"allSizeCount\": -338880923, " + 
                    " \"allStarsCount\": 315, " + 
                    " \"id\": 817, " + 
                    " \"key\": { " + 
                    " \"id\": 528, " + 
                    " \"snapshotDate\": \"1942-01-01T21:17:23.211+17:15\" " + 
                    " }, " + 
                    " \"publicProjectCount\": 275 " + 
                    " }, " + 
                    " { " + 
                    " \"allForksCount\": 671, " + 
                    " \"allStarsCount\": 761, " + 
                    " \"id\": 964, " + 
                    " \"membersCount\": 760, " + 
                    " \"publicProjectCount\": 58, " + 
                    " \"tagsCount\": 619 " + 
                    " }, " + 
                    " { " + 
                    " \"allSizeCount\": 264, " + 
                    " \"externalContributorsCount\": 573, " + 
                    " \"key\": { " + 
                    " \"id\": 7116663562852375709 " + 
                    " }, " + 
                    " \"membersCount\": 482, " + 
                    " \"organizationName\": \"A_ZY4ufr\", " + 
                    " \"privateProjectCount\": 301, " + 
                    " \"programLanguagesCount\": 1204794772, " + 
                    " \"publicProjectCount\": 648, " + 
                    " \"snapshotDate\": \"2007-07-05T07:00:00.420Z\", " + 
                    " \"tagsCount\": 920, " + 
                    " \"teamsCount\": 457 " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/import?EMextraParam123=_EM_17_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/import -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"contributors\": [ " + 
                    " { " + 
                    " \"name\": \"pYqXBOGCcpi8OGc\", " + 
                    " \"organizationId\": 80, " + 
                    " \"organizationName\": \"WQ03y8SXAvIy\", " + 
                    " \"organizationalCommitsCount\": 568, " + 
                    " \"organizationalProjectsCount\": 387 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 768, " + 
                    " \"loginId\": \"ZT501n5EmtRV5d\", " + 
                    " \"name\": \"\", " + 
                    " \"organizationalCommitsCount\": 265, " + 
                    " \"personalCommitsCount\": 849, " + 
                    " \"personalProjectsCount\": 950 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 378, " + 
                    " \"name\": \"euJgdNPc0czpF\", " + 
                    " \"organizationName\": \"REoBhEJ0v\", " + 
                    " \"url\": \"yEzBM9Iu98\" " + 
                    " }, " + 
                    " { " + 
                    " \"name\": \"g8lryT\", " + 
                    " \"organizationalCommitsCount\": 446, " + 
                    " \"organizationalProjectsCount\": 314, " + 
                    " \"personalProjectsCount\": 104 " + 
                    " }, " + 
                    " { " + 
                    " \"key\": { " + 
                    " \"id\": 2055672257 " + 
                    " }, " + 
                    " \"name\": \"hI5YOQv\", " + 
                    " \"organizationId\": 373, " + 
                    " \"organizationName\": \"wX9d4\", " + 
                    " \"organizationalCommitsCount\": 115, " + 
                    " \"personalCommitsCount\": 20 " + 
                    " } " + 
                    " ], " + 
                    " \"projects\": [ " + 
                    " { " + 
                    " \"contributorsCount\": 226, " + 
                    " \"description\": \"TMuXK\", " + 
                    " \"externalContributorsCount\": 874, " + 
                    " \"gitHubProjectId\": 33, " + 
                    " \"lastPushed\": \"O\", " + 
                    " \"maintainers\": [ " + 
                    " \"ZsWGxtqrXNKr\", " + 
                    " \"4tPuL3KXdULJ24A\" " + 
                    " ], " + 
                    " \"score\": 304, " + 
                    " \"starsCount\": 314, " + 
                    " \"title\": \"OiKumn\" " + 
                    " } " + 
                    " ], " + 
                    " \"statistics\": [ " + 
                    " { " + 
                    " \"allStarsCount\": 610, " + 
                    " \"externalContributorsCount\": 304, " + 
                    " \"id\": 365, " + 
                    " \"key\": { " + 
                    " \"id\": 760, " + 
                    " \"snapshotDate\": \"2017-07-00T05:32:40.624-10:41\" " + 
                    " }, " + 
                    " \"organizationName\": \"lbne_\", " + 
                    " \"privateProjectCount\": 35, " + 
                    " \"programLanguagesCount\": 30, " + 
                    " \"tagsCount\": 520 " + 
                    " }, " + 
                    " { " + 
                    " \"allSizeCount\": 486, " + 
                    " \"membersCount\": 730, " + 
                    " \"privateProjectCount\": 602, " + 
                    " \"publicProjectCount\": 582, " + 
                    " \"snapshotDate\": \"1917-09-20T09:06:39.826+18:11\", " + 
                    " \"teamsCount\": 269 " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/import?" + 
                    "access_token=S21ap1xT5MQ&" + 
                    "start_date=xN7Qx")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }


}
