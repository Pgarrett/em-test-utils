import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.controller.mongo.dsl.MongoDsl.mongo;
import  org.evomaster.client.java.controller.api.dto.database.operations.MongoInsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.MongoInsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-02-16T18:42:02.691-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 253 tests
 * <br>
*  Covered targets: 494
 * <br>
*  Used time: 0h 15m 37s
 * <br>
*  Needed budget for current results: 98%
 * <br>
*  This file contains test cases that are likely to indicate faults.
*/
public class EvoMaster_faults_Test {

    
    private static final SutHandler controller = new em.embedded.org.cbioportal.session_service.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetStateOfSUT();
    }
    
    
    
    
    /**
    * Calls:
    * (500) GET:/api/sessions/{source}/{type}
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_0_getOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"42fd0853aed0436e7ca23e71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbaa6e2de3895964d4bedab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca848366aa801370f8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63b052ce8ecf1fcf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1a3be3dbf3d29278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede335ec3db04e87f8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cc5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1badeacebe05464aeaf5fa61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5ccc8e6ff7fe7c6055c9f\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault100. HTTP Status 500. framework_code GET:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/Q%3CPuIN;/custom_gene_list")
                .then()
                .statusCode(500)// framework_code
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/Q%3CPuIN;/custom_gene_list"));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/sessions/{source}/{type}
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_1_postOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. org/cbioportal/session_service/domain/Session_74_setData POST:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"settings\" ")
                .post(baseUrlOfSut + "/api/sessions/Q4X38qD/settings?EMextraParam123=_EM_49_XYZ_")
                .then()
                .statusCode(500)// org/cbioportal/session_service/domain/Session_74_setData
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/Q4X38qD/settings"));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/sessions/{source}/{type}/query/fetch
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_2_postOnQueryFetchShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. framework_code POST:/api/sessions/{source}/{type}/query/fetch
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Response status 500 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"_EM_7581_XYZ_\" ")
                .post(baseUrlOfSut + "/api/sessions/_bM_;HF9_XYZU/settings/query/fetch")
                .then()
                .statusCode(500)// framework_code
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/_bM_;HF9_XYZU/settings/query/fetch"));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/sessions/{source}/{type}
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_3_postOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"42fd0853aed0436e7ca23e71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbaa6e2de3895964e4bedab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"5a04b5ca8383669a81127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63b052ce8ecf1fcf3f8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1a3be3dbf3e29278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"60d4fe58bbc1b0fc876297ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cc5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1badeacebe05464aeaf50a61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc8e6ff7fe7c6055c9f\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault100. HTTP Status 500. framework_code POST:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" HexData ")
                .post(baseUrlOfSut + "/api/sessions/%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22EM_tainted_map%22:%22_EM_277_XYZ_%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D/virtual_study")
                .then()
                .statusCode(500)// framework_code
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22EM_tainted_map%22:%22_EM_277_XYZ_%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D/virtual_study"));
    }
    
    
    /**
    * Calls:
    * (500) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_4_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"43cc0a74b0c2539c7c92ee82\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"7acc702dc1aa3a74f3cdcca1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4af4b6cb9464767c74326f0a\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1cf72a151df7ec030be3ea\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fbb6d1a2ce2da04d2a07884f\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4d149baefb00d9954c7ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b6ddc1f588f4ae8af68a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10c105d9abba4ebb6bdfb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"2eb078bb42d4a121b09378ca\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"03539ba270554cf08c7fceef\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"a1c6cbfbefc0695eca611b68\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"70ccfe0b0b165fa738dda54b\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault100. HTTP Status 500. framework_code DELETE:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(baseUrlOfSut + "/api/sessions/%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22EM_tainted_map%22:%22_EM_282_XYZ_%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D/custom_gene_list/custom_gene_list?EMextraParam123=42")
                .then()
                .statusCode(500)// framework_code
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22EM_tainted_map%22:%22_EM_282_XYZ_%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D/custom_gene_list/custom_gene_list"));
    }
    
    
    /**
    * Calls:
    * (500) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_5_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"33dd0982b0d1439d7ca2ff91\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8bcc722be26a3c72f2bfec90\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"48f3a6caa472678a932260f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"7a0ef62b151df50c130be3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fbc5c0b2be1ec04f09089741\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d5c169cbcfbf1d9952b7ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0c6ddd1e588f4ae8af68a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10b1f7c89aaa5faa5bcdb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"2fa089bc42d59111cf9479ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f2779dd47f653dfd8ba0bed0\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault100. HTTP Status 500. framework_code DELETE:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22EM_tainted_map%22:%22_EM_282_XYZ_%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D/EVOMASTER/ISODate")
                .then()
                .statusCode(500)// framework_code
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22EM_tainted_map%22:%22_EM_282_XYZ_%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D/EVOMASTER/ISODate"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/api/sessions/{source}/{type}/{id}
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_6_getOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"3bc7bfe07f24ee88d94e046a\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"da70d50fc22a463584b53cf5\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault100. HTTP Status 500. framework_code GET:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/lQUi;/settings/_EM_3336_XYZ_?field=eGibIAR1AD")
                .then()
                .statusCode(500)// framework_code
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/lQUi;/settings/_EM_3336_XYZ_"));
    }
    
    
    /**
    * Calls:
    * (500) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_7_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"33cdf973a0d1539d6ca2ff81\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8bcb712cd27a3b72f2bfdca0\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"49f4b6cb9473778b832360f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1ef62a052de6fc020be3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fbc6d1b2be2eb04e19079740\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4d149baefb00d9954c7ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b6ddd1f588f4ae8af68a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10c107c99aba5eba6bceb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"2fa089bc42d59111cf9479ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f2669cc47f553dfe9c8fbed0\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault100. HTTP Status 500. framework_code DELETE:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22EM_tainted_map%22:%22_EM_282_XYZ_%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D/virtual_study/HexData")
                .then()
                .statusCode(500)// framework_code
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22EM_tainted_map%22:%22_EM_282_XYZ_%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D/virtual_study/HexData"));
    }
    
    
    /**
    * Calls:
    * (500) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_8_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"52ed1854aed0527f7ca22e82\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bcaa6e2de3895964e4bedab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"3a03b5cb938357aa92128ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6d0df63af63be8ecf0fdf3d9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"eba8d0a3bd3dbe4d39278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"52c3fe78cbcfb0fc9854a8ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87e8326\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbef52bdbcbe1dd3dd5c4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"9ddcc874cd61265473d8f8bb\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"4bdf0fe0bab32e0e41a3376a\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault100. HTTP Status 500. framework_code DELETE:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22EM_tainted_map%22:%22_EM_282_XYZ_%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D/EVOMASTER/true")
                .then()
                .statusCode(500)// framework_code
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22EM_tainted_map%22:%22_EM_282_XYZ_%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D/EVOMASTER/true"));
    }
    
    
    /**
    * Calls:
    * (500) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_9_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"31cd0853bee0539d5bb1fd81\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8bcb7f2cc28b3a73f2becca1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"49f4b6cb9473778b832360f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1df62a052ce6fc020be3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"0cb6d0b1df2da04e2af7873e\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"71d4d048cae0cf0c8854c79b\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b6ddd1f588f4ae8af68a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"da1fb006c9aabb4eba6bdfa5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"2fa089bc42d59111cf9477ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f263acc280463d0f9b90beef\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault100. HTTP Status 500. framework_code DELETE:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(baseUrlOfSut + "/api/sessions/%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22EM_tainted_map%22:%22_EM_282_XYZ_%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D/custom_data/new?EMextraParam123=42")
                .then()
                .statusCode(500)// framework_code
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22EM_tainted_map%22:%22_EM_282_XYZ_%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D/custom_data/new"));
    }
    
    
    /**
    * Calls:
    * (500) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_10_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"63cef872bdc1628d6ba1ffa1\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"acaa7f1ee27a3a72f2b1ca94\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04a5ca8383668a82127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63af52ce8fcf1fcf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"ecc7d1a3ce2fbe3d2a088650\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4d059bae1b00c9953b7aa\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"a1e92de539aeff1e4e436df9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"2be5c8c9bbaee587edd7dd89\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"5d122a95fcfe12671a417c20\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"6abc71fd3c5f0f9a58853d19\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"b55fb50d6c27aea1b7949cd4\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"5900f50af694cc91608f412b\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault100. HTTP Status 500. framework_code DELETE:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22EM_tainted_map%22:%22_EM_282_XYZ_%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D/main_session/main_session")
                .then()
                .statusCode(500)// framework_code
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22EM_tainted_map%22:%22_EM_282_XYZ_%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D/main_session/main_session"));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/sessions/{source}/{type}
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_11_postOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"32cd0973bfd1539d6ba1fe72\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"abba6f2cd29b4965e2bfbca1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"39f3c5cba473678c72337f0a\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1df62a052ce7fc020be3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fcb5d1b3be2cae2d3a188640\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"60d4d058bae0b00c9953b7aa\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"1b6dcb2f389f3af8cf5896bc\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ba20b107d99bba4dac6aefa5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"fb564e33119555a08716ff2e\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"b3f17203adc8e2feb274dfdd\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault100. HTTP Status 500. framework_code POST:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22EM_tainted_map%22:%22_EM_277_XYZ_%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D/EVOMASTER?EMextraParam123=42")
                .then()
                .statusCode(500)// framework_code
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22EM_tainted_map%22:%22_EM_277_XYZ_%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D/EVOMASTER"));
    }
    
    
    /**
    * Calls:
    * (500) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_12_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"52ed1854aed0527f7ca22e82\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbaa6e2de3895964e4bedab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"5a04b4ca8282579a82227ff9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"7c0cf63c052ce8edf1ece3f7\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"ec97e2a3ce4dbf3d1a269861\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8eabd063aebbaf0bd3cc4b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e108efe1ba395f0cd581d4fa\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"7f4f450b96b0ed29bdafafb8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault100. HTTP Status 500. framework_code DELETE:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22EM_tainted_map%22:%22_EM_282_XYZ_%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D/settings/null")
                .then()
                .statusCode(500)// framework_code
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22EM_tainted_map%22:%22_EM_282_XYZ_%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D/settings/null"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/api/sessions/{source}/{type}/{id}
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_13_getOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"a50798ac7dfeac38c0e5ae3f\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"f793fe4f1215d5cdd0dc412e\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"c707d82f98e220afa0e82ebe\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"c3fce5286de85aac26cc0bac\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault100. HTTP Status 500. framework_code GET:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_EM_14309_XYZ_/comparison_session/;HG?field=PT3w")
                .then()
                .statusCode(500)// framework_code
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/_EM_14309_XYZ_/comparison_session/;HG"));
    }
    
    
    /**
    * Calls:
    * (500) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_14_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"52ed1854aed0528f7ca22e82\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbaa6e2de3895964e4bedab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"3b04a6cb8394578a82128f08\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63b052ce8ecf1fcf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1a3be3dbf3d29278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fd886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbdf63bdbbbe0bd4dc4b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e5b0be93c1f4ccb91afbc347\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"70c1cead7ac1a849ae7f7a4d\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"c71ebfd27b79d4502533be83\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"92c5efb0ce6bf9bc3ebb5e8b\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault100. HTTP Status 500. framework_code DELETE:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22EM_tainted_map%22:%22_EM_282_XYZ_%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D/genomic_chart/null")
                .then()
                .statusCode(500)// framework_code
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22EM_tainted_map%22:%22_EM_282_XYZ_%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D/genomic_chart/null"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/api/sessions/{source}/{type}/{id}
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_15_getOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"a50698ac7dfebc38b0e5be3f\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"f793fe3f1215d5cdd0dc412e\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"022eb8152a405573643d800e\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"cde9f1539fd875dd41adca13\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f6beeeb1087f9d0a638d7ab9\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"fbeea9015c3fee140689596e\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault100. HTTP Status 500. framework_code GET:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/mRSUhQqE/custom_data/;GGD?field=iT3w")
                .then()
                .statusCode(500)// framework_code
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/mRSUhQqE/custom_data/;GGD"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/api/sessions/{source}/{type}/{id}
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_16_getOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"a50698ac7dfebc38b0e5be3f\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"f793fe3f1215d5cdd0dc412e\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"022eb8152a405573643d800e\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"cde9f1539fd875dd41adca13\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"5bd497a38cfbbfe60c53a32c\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"5509a6b3286ccb125dabd48e\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault100. HTTP Status 500. framework_code GET:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/mRSVjQqE/custom_gene_list/;HGD?field=iT3w")
                .then()
                .statusCode(500)// framework_code
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/mRSVjQqE/custom_gene_list/;HGD"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/api/sessions/{source}/{type}/{id}
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_17_getOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"a5caec405b26dd8f5ae40a39\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"9a17eccec3c4efe53b51b747\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault100. HTTP Status 500. framework_code GET:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_2740_XYZ_")
                .get(baseUrlOfSut + "/api/sessions/_EM_2739_XYZ_/group/67b25814fd1c7613a1feb0;8?field=UBBw__8nXM")
                .then()
                .statusCode(500)// framework_code
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/_EM_2739_XYZ_/group/67b25814fd1c7613a1feb0;8"));
    }
    
    
    /**
    * Calls:
    * (500) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_18_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"33cdf973a0d1539e6ca2ff81\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8bcb712cd27a3b72f1bfdca0\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"49f4b6cb9573778b832360f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"7b1de62a153ce6fc020cd4f9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fbc6d1b2be2eb04e19079740\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"60d4d149aaeea0fda954c7ac\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b6ede00699f38e8bf87a5ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10c107c99aba5eba6bceb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"3f9f88bb42d58112d0a579ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"e2669cc47f553dfe9c8fbed0\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault100. HTTP Status 500. framework_code DELETE:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22EM_tainted_map%22:%22_EM_282_XYZ_%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D/group/ObjectId")
                .then()
                .statusCode(500)// framework_code
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22EM_tainted_map%22:%22_EM_282_XYZ_%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D/group/ObjectId"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/api/sessions/{source}/{type}/{id}
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_19_getOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"ee151f9bc05dfc6b5f8dacf0\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"ed8d1a7fe5dfadf6bb8deadb\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault100. HTTP Status 500. framework_code GET:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/EQvDxdcy2ul/main_session/kq43;?field=OGJ9QplqL4YS")
                .then()
                .statusCode(500)// framework_code
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/EQvDxdcy2ul/main_session/kq43;"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/api/sessions/{source}/{type}/{id}
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_20_getOnWithQueryParamsShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"3bc7bfe07f24ee88d94e046a\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"da70d500c22a463584b53cf5\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault100. HTTP Status 500. framework_code GET:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_3065_XYZ_")
                .get(baseUrlOfSut + "/api/sessions/lQUi;/settings/query?" + 
                    "EMextraParam123=42&" + 
                    "field=eGibIAR1AD")
                .then()
                .statusCode(500)// framework_code
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/lQUi;/settings/query"));
    }
    
    
    /**
    * Calls:
    * (500) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_21_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"42ed1963acbf647e7b911d8f\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bb8a8e2cf3996a74c4cefab3\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca838366aa81127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"8d1bf65b054bf8dbf00cf3f7\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"0cb6e1a3ce3ebf3d29287760\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"2e9dde325ed4eaf4d88e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cd5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1b9ddafdbd04353ae9e6ea61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc8e6ff7fe7c6055c9f\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault100. HTTP Status 500. framework_code DELETE:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22EM_tainted_map%22:%22_EM_282_XYZ_%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D/EVOMASTER/NumberDecimal")
                .then()
                .statusCode(500)// framework_code
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22EM_tainted_map%22:%22_EM_282_XYZ_%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D/EVOMASTER/NumberDecimal"));
    }
    
    
    /**
    * Calls:
    * (500) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_22_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"32bd0a94cec1729d6c92ff62\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"9bba7f2dd28b3a64f2becba1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"49f4c6cb9473678b832360f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1df62a052ce7fc030be3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fcb6d1b3ce1dbf3e3a188751\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"50d6df68c8efa00b8a54c899\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0c5edd2f397059d89f79a5aa\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10c106d99bba4ebb6bdfc5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"3b0150b8f89cfe7e6a0f1aef\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"cfabbd1a1c99319ad6df13d7\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault100. HTTP Status 500. framework_code DELETE:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(baseUrlOfSut + "/api/sessions/%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22EM_tainted_map%22:%22_EM_282_XYZ_%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D/settings/new")
                .then()
                .statusCode(500)// framework_code
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22EM_tainted_map%22:%22_EM_282_XYZ_%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D/settings/new"));
    }
    
    
    /**
    * Calls:
    * (500) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_23_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"32cd0973bfd1539d6ba1fe72\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8bcb6f1cc28b3a73f2becca1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"59f4b6ca8473687b83247fe9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c1df62a052ce7fc020ce3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fbd8c1a1ce1b9e5d1a06674d\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4d149baefb00c9954c7ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b6ddd1f588f4ae8af68a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"da10b107daacba5dca6adea5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"1fa089bc42d59111cf9477ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f263ccb27e562dee8a71bcef\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault100. HTTP Status 500. framework_code DELETE:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22EM_tainted_map%22:%22_EM_282_XYZ_%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D/main_session/undefined")
                .then()
                .statusCode(500)// framework_code
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22EM_tainted_map%22:%22_EM_282_XYZ_%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D/main_session/undefined"));
    }
    
    
    /**
    * Calls:
    * (500) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_24_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"32cd0973bfd1539d6ba1fe72\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8bdb7f1bc18a3a83f3addcb2\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"58f4b6e99474767b942461f8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1df62af52ce7fc020be3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"e9b8d192de2b9f4c2af5684f\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"62d4f149cae1c00d8a64d6aa\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b6ddd10498f49e89f58a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10c107d9abba4ebb6bcfb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"1fa089bc42d59111c19477ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f264bcc27f463dff9b71acdf\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault100. HTTP Status 500. framework_code DELETE:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22EM_tainted_map%22:%22_EM_282_XYZ_%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D/genomic_chart/MinKey")
                .then()
                .statusCode(500)// framework_code
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22EM_tainted_map%22:%22_EM_282_XYZ_%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D/genomic_chart/MinKey"));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/sessions/{source}/{type}/query/fetch
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_25_postOnFetchShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. framework_code POST:/api/sessions/{source}/{type}/query/fetch
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Response status 500 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"sgVtGHI\" ")
                .post(baseUrlOfSut + "/api/sessions/NK;ag/EVOMASTER/query/fetch?" + 
                    "field=_EM_9519_XYZ_&" + 
                    "value=_EM_9520_XYZ_")
                .then()
                .statusCode(500)// framework_code
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/NK;ag/EVOMASTER/query/fetch"));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/sessions/{source}/{type}/query/fetch
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_26_postOnFetchShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. framework_code POST:/api/sessions/{source}/{type}/query/fetch
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Response status 500 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"_EM_14942_XYZ_\" ")
                .post(baseUrlOfSut + "/api/sessions/_EM_24;41_XYZ_/comparison_session/query/fetch?" + 
                    "field=_EM_9519_XYZ_&" + 
                    "value=_EM_9520_XYZ_")
                .then()
                .statusCode(500)// framework_code
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/_EM_24;41_XYZ_/comparison_session/query/fetch"));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/sessions/{source}/{type}/query/fetch
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_27_postOnFetchShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. framework_code POST:/api/sessions/{source}/{type}/query/fetch
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Response status 500 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"K[W\" ")
                .post(baseUrlOfSut + "/api/sessions/%3F;B6/custom_gene_list/query/fetch?" + 
                    "field=Luo72R2dZ&" + 
                    "value=fEO_9520_XYZ_6")
                .then()
                .statusCode(500)// framework_code
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/%3F;B6/custom_gene_list/query/fetch"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/api/sessions/{source}/{type}/query
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_28_getOnQueryShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"22bd0864bfd152ad6bb1ff71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"7abb7f1cc19b3a72f2aebcb2\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"49f4c6cb9373787b832360f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6a2ed43a053cf80b011ce3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"eaa7d2a0ce1b9f5e2bf6684e\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"6fc5e26bcad09ffdaa52c7bc\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"1b6ddd1f588f4ae8af68a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10c128d99bbc5d9a6bbfc4\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"1f9089ac52d59211b0a457ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f264bcc27f463df09b71acdf\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"0eebabd11faeb3ec2e99da1b\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"e1daead14badbc997ef92e5d\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"87d8fb4ab4a832cf707bdbba\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"cdea4697e3da201435faa8c2\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault100. HTTP Status 500. framework_code GET:/api/sessions/{source}/{type}/query
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Response status 500 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/;UUUiMUUtUjS/group/query?" + 
                    "field=z%7CKc&" + 
                    "value=2IYU8tUpcU_U")
                .then()
                .statusCode(500)// framework_code
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/;UUUiMUUtUjS/group/query"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/api/sessions/{source}/{type}/query
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_29_getOnQueryShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"32cd0973bfd1539d6ba1fe72\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"9bba7f2dd28b3a74f2becba1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"49f4b6cb9473678b832360f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1df62a052ce7fc020be3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fcb6d1b3ce2dbf3e3a188751\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"60d4d059bae0b00c9953b7aa\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"1b6dcb2f389f3af8cf5896bc\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ba20b107d99bba4dac6aefa5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"eb665e3401a454a19806ee3d\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"b3f17203bdc8e2feb274dfdd\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault100. HTTP Status 500. org/cbioportal/session_service/domain/internal/SessionRepositoryImpl_104_findBySourceAndTypeAndQuery GET:/api/sessions/{source}/{type}/query
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Response status 500 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_EM_4579_XYZ_/main_session/query?" + 
                    "field=_%24RESTRICTED_TYPES&" + 
                    "value=2IFL8tUpck_L&" + 
                    "EMextraParam123=_EM_98_XYZ_")
                .then()
                .statusCode(500)// org/cbioportal/session_service/domain/internal/SessionRepositoryImpl_104_findBySourceAndTypeAndQuery
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/_EM_4579_XYZ_/main_session/query"));
    }
    
    
    /**
    * Calls:
    * (500) PUT:/api/sessions/{source}/{type}/{id}
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_30_putOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"31cd0853bee0539d5bb1fd81\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8bcb7f2cc28b3a73f2becca1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"49f4b6cb9473778b832360f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1df62a052ce6fc020be3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"0cb6d0b1df2da04e2af7873e\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"71d4d048cae0cf0c8854c79b\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b6ddd1f588f4ae8af68a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"da1fb006c9aabb4eba6bdfa5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"2fa089bc42d59111cf9477ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f263acc280463d0f9b90beef\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault100. HTTP Status 500. framework_code PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_101_XYZ_")
                .contentType("application/json")
                .body(" \"lvXoL\" ")
                .put(baseUrlOfSut + "/api/sessions/cb_6Q%255OtLst_CLa/custom_data/RZYLMzE?EMextraParam123=_EM_100_XYZ_")
                .then()
                .statusCode(500)// framework_code
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/cb_6Q%255OtLst_CLa/custom_data/RZYLMzE"));
    }
    
    
    /**
    * Calls:
    * 1 - (200) GET:/info
    * 2 - (404) DELETE:/api/sessions/{source}/{type}/{id}
    * 3 - (200) POST:/api/sessions/{source}/{type}
    * 4 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * 5 - (200) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 4 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_31_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"42ed1864adc0547e8c922e80\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bb9a7f3cf3995964c4bef9b4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"3a14b5b98483669a72127f08\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"7c1cf64b052cf8dbf0fb02e7\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1a3be3dbf3d29278760\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b0fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87f8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebadf52bdbbbe0bd2bc5b4e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1b9ddaedbd04353ae9f6ea61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc8e6ff7fe7c6055c9f\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        String location_type = "";
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/info -> GET on path '/info' defines a response schema but no response body found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/info")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 404 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/wQ8xs2aEr7gefIK/virtual_study/_EM_9544_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/wQ8xs2aEr7gefIK/virtual_study/_EM_9544_XYZ_"));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/virtual_study/virtual_study")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
        location_type = "/api/sessions/virtual_study/virtual_study" + "/" + res_2.extract().body().path("id").toString();
        
        // Fault100. HTTP Status 500. org/cbioportal/session_service/domain/Session_74_setData PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"new\" ")
                .put(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/UUID/group/%7B%7D"))
                .then()
                .statusCode(500)// org/cbioportal/session_service/domain/Session_74_setData
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/virtual_study/virtual_study/67b25b89fd1c7613a1fecdc5"));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/BinData/virtual_study/virtual_study"))
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * 1 - (200) GET:/info
    * 2 - (404) DELETE:/api/sessions/{source}/{type}/{id}
    * 3 - (200) POST:/api/sessions/{source}/{type}
    * 4 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * 5 - (200) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 4 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_32_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"51fdf863ade1425d6ca33d81\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbaa7f2cd3895a73e5bfdac4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383669a81127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63b052ce8ecf1fcf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7c1b3ae2cbf3d38278852\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cc5c4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1badeacebe05464aeaf5fa61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc7e6ff7fe7c6055c8f\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        String location_type = "";
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/info -> GET on path '/info' defines a response schema but no response body found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/info")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 404 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/sS4eff9Yo6Nv/genomic_chart/m")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/sS4eff9Yo6Nv/genomic_chart/m"));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/NumberDecimal/virtual_study")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
        location_type = "/api/sessions/NumberDecimal/virtual_study" + "/" + res_2.extract().body().path("id").toString();
        
        // Fault100. HTTP Status 500. org/cbioportal/session_service/domain/Session_74_setData PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"comparison_sessioo\" ")
                .put(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/comparison_sessioo/comparison_session/%7B%7D"))
                .then()
                .statusCode(500)// org/cbioportal/session_service/domain/Session_74_setData
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/NumberDecimal/virtual_study/67b25b91fd1c7613a1fece01"));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/new/genomic_chart/NaN"))
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * 1 - (200) GET:/info
    * 2 - (404) DELETE:/api/sessions/{source}/{type}/{id}
    * 3 - (200) POST:/api/sessions/{source}/{type}
    * 4 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * 5 - (200) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 4 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_33_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"51fdf863ade1425d6ca33d71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbab6f3ce2796964e4cedaa3\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383669a81127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63b052ce8ecf1fcf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1a3be3dbf3d29278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc887397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cc5c4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1badeacebe05464aea05fa61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e5e6ccc8e7fe80d7c7143c8e\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        String location_type = "";
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/info -> GET on path '/info' defines a response schema but no response body found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/info")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 404 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/sS4ef9Yo6Nv/genomic_chart/m")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/sS4ef9Yo6Nv/genomic_chart/m"));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/EVOMASTER/custom_gene_list")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
        location_type = "/api/sessions/EVOMASTER/custom_gene_list" + "/" + res_2.extract().body().path("id").toString();
        
        // Fault100. HTTP Status 500. org/cbioportal/session_service/domain/Session_74_setData PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"EVOMASTER\" ")
                .put(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/EVOMASTER/custom_data/%7B%7D"))
                .then()
                .statusCode(500)// org/cbioportal/session_service/domain/Session_74_setData
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/EVOMASTER/custom_gene_list/67b25b8ffd1c7613a1fecdef"));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/false/EVOMASTER/NaN"))
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * 1 - (200) GET:/info
    * 2 - (404) DELETE:/api/sessions/{source}/{type}/{id}
    * 3 - (200) POST:/api/sessions/{source}/{type}
    * 4 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * 5 - (200) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 4 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_34_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"42ed1963acbf647e7b911e8f\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bb8a8e2cf3996a74c4cefab3\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383669a81127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"8d1bf64b054c08cbf01ce307\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1a3ad3dbf2b2927875f\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"60d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3d9cce316ed4e9f4d88e7336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cc5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1b9ddafdbe04353ae9e6ea61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc8e6ff7fe7c6055c9f\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        String location_type = "";
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/info -> GET on path '/info' defines a response schema but no response body found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/info")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 404 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/_EM_9522_XYZ_/virtual_study/_VNU7U4UcUYUU")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/_EM_9522_XYZ_/virtual_study/_VNU7U4UcUYUU"));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/RegExp/settings")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
        location_type = "/api/sessions/RegExp/settings" + "/" + res_2.extract().body().path("id").toString();
        
        // Fault100. HTTP Status 500. org/cbioportal/session_service/domain/Session_74_setData PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"genomic_chart\" ")
                .put(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/RegExp/main_session/MaxKey"))
                .then()
                .statusCode(500)// org/cbioportal/session_service/domain/Session_74_setData
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/RegExp/settings/67b25b91fd1c7613a1fece07"));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/genomic_chart/genomic_chart/Infinity"))
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * 1 - (200) GET:/info
    * 2 - (400) GET:/api/sessions/{source}/{type}
    * 3 - (200) POST:/api/sessions/{source}/{type}
    * 4 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * 5 - (200) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 4 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_35_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"42fd0853aed0436e7ca23e71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbaa6e2de3895964e4bedab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8483669a81127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63b052ce8ecf1fcf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1a3be3dbf3d29278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cc5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1badeacebe05464aeaf5fa61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc8e6ff7fe7c6055c9f\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        String location_type = "";
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/info -> GET on path '/info' defines a response schema but no response body found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/info")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/IKPuRkY/EVOMASTER")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/IKPuRkY/EVOMASTER"));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/Infinity/virtual_study")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
        location_type = "/api/sessions/Infinity/virtual_study" + "/" + res_2.extract().body().path("id").toString();
        
        // Fault100. HTTP Status 500. org/cbioportal/session_service/domain/Session_74_setData PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"virtual_study\" ")
                .put(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/NumberInt/genomic_chart/%7B%7D"))
                .then()
                .statusCode(500)// org/cbioportal/session_service/domain/Session_74_setData
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/Infinity/virtual_study/67b25b87fd1c7613a1fecdba"));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/UUID/custom_gene_list/false"))
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * 1 - (200) GET:/info
    * 2 - (400) GET:/api/sessions/{source}/{type}
    * 3 - (200) POST:/api/sessions/{source}/{type}
    * 4 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * 5 - (200) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 4 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_36_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"42fd0853aed0436e7ca23e71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbaa6e2de3895964e4bedab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383669a81127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63b052ce8ecf1fcf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1a3be3dbf3d29278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cc5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1badeacebe05464ae9f5fa61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc8e6ff7fe7c6055c9f\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        String location_type = "";
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/info -> GET on path '/info' defines a response schema but no response body found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/info")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/IKPuQkY/EVOMASTER")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/IKPuQkY/EVOMASTER"));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/ObjectId/virtual_study")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
        location_type = "/api/sessions/ObjectId/virtual_study" + "/" + res_2.extract().body().path("id").toString();
        
        // Fault100. HTTP Status 500. org/cbioportal/session_service/domain/Session_74_setData PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"\" ")
                .put(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/NumberInt/group/genomic_chart"))
                .then()
                .statusCode(500)// org/cbioportal/session_service/domain/Session_74_setData
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/ObjectId/virtual_study/67b25b8dfd1c7613a1fecde1"));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/Timestamp/genomic_chart/UUID"))
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * 1 - (200) GET:/info
    * 2 - (400) GET:/api/sessions/{source}/{type}
    * 3 - (200) POST:/api/sessions/{source}/{type}
    * 4 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * 5 - (200) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 4 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_37_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"42fd0853aed0436e7ca23e71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbaa6e2de3895964e4bedab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383669a81127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63b052ce8ecf1fcf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1a3be3dbf3d29278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d40e69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cc5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1badeacebe05464ae9f5fa61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc8e6ff7fe7c6055c9f\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        String location_type = "";
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/info -> GET on path '/info' defines a response schema but no response body found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/info")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/IKPuQkY/EVOMASTER")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/IKPuQkY/EVOMASTER"));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/ObjectId/virtual_study")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
        location_type = "/api/sessions/ObjectId/virtual_study" + "/" + res_2.extract().body().path("id").toString();
        
        // Fault100. HTTP Status 500. org/cbioportal/session_service/domain/Session_74_setData PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"\" ")
                .put(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/NumberInt/group/genomic_chart"))
                .then()
                .statusCode(500)// org/cbioportal/session_service/domain/Session_74_setData
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/ObjectId/virtual_study/67b25b8dfd1c7613a1fecde4"));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/NumberInt/genomic_chart/UUID"))
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * 1 - (200) GET:/info
    * 2 - (400) GET:/api/sessions/{source}/{type}
    * 3 - (200) POST:/api/sessions/{source}/{type}
    * 4 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * 5 - (200) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 4 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_38_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"42fd0853aed0436e7ca23e71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbaa6e2de3895964e4bedab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383669a81127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63b052ce8ecf1fcf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1a3be3dbf3d29278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cc5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1badeacebe05464ae9f5fa61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc8e6ff7fe7c6055c9f\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        String location_type = "";
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/info -> GET on path '/info' defines a response schema but no response body found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/info")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/IKPuQkY/EVOMASTER")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/IKPuQkY/EVOMASTER"));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/ObjectId/virtual_study")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
        location_type = "/api/sessions/ObjectId/virtual_study" + "/" + res_2.extract().body().path("id").toString();
        
        // Fault100. HTTP Status 500. org/cbioportal/session_service/domain/Session_74_setData PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"\" ")
                .put(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/NumberInt/main_session/main_session"))
                .then()
                .statusCode(500)// org/cbioportal/session_service/domain/Session_74_setData
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/ObjectId/virtual_study/67b25b91fd1c7613a1fece06"));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/Timestamp/genomic_chart/MaxKey"))
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * 1 - (200) GET:/info
    * 2 - (400) GET:/api/sessions/{source}/{type}
    * 3 - (200) POST:/api/sessions/{source}/{type}
    * 4 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * 5 - (200) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 4 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_39_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"42fd0853aed0436e7ca13e71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbaa6e2de3895964e4bedab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383669a81127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63b052ce8ecf1fcf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1a3be3dbf3d29278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cc5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1badeacebe05464aeaf5fa61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc8e6ff7fe7c6055c9f\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        String location_type = "";
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/info -> GET on path '/info' defines a response schema but no response body found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/info")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/IKPuQkY/EVOMASTER")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/IKPuQkY/EVOMASTER"));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/ObjectId/virtual_study")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
        location_type = "/api/sessions/ObjectId/virtual_study" + "/" + res_2.extract().body().path("id").toString();
        
        // Fault100. HTTP Status 500. org/cbioportal/session_service/domain/Session_74_setData PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"false\" ")
                .put(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/NumberInt/genomic_chart/virtual_study"))
                .then()
                .statusCode(500)// org/cbioportal/session_service/domain/Session_74_setData
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/ObjectId/virtual_study/67b25b92fd1c7613a1fece0c"));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/Date/custom_gene_list/NaN"))
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * 1 - (200) GET:/info
    * 2 - (400) GET:/api/sessions/{source}/{type}
    * 3 - (200) POST:/api/sessions/{source}/{type}
    * 4 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * 5 - (200) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 4 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_40_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"42fd0853aed0436e7ca13e71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbaa6e2de3895964e4bedab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383669a81127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63b052ce8ecf1fcf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1a3be3dbf3d29278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cc5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1badeacebe05464aeaf5fa61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc8e6ff7fe7c6055c9f\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        String location_type = "";
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/info -> GET on path '/info' defines a response schema but no response body found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/info")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/IKPuQkY/EVOMASTER")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/IKPuQkY/EVOMASTER"));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/ObjectId/virtual_study")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
        location_type = "/api/sessions/ObjectId/virtual_study" + "/" + res_2.extract().body().path("id").toString();
        
        // Fault100. HTTP Status 500. org/cbioportal/session_service/domain/Session_74_setData PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"false\" ")
                .put(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/NumberInt/genomic_chart/virtual_study"))
                .then()
                .statusCode(500)// org/cbioportal/session_service/domain/Session_74_setData
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/ObjectId/virtual_study/67b25b92fd1c7613a1fece0d"));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/null/custom_gene_list/NaN"))
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * 1 - (200) GET:/info
    * 2 - (404) GET:/api/sessions/{source}/{type}/{id}
    * 3 - (200) POST:/api/sessions/{source}/{type}
    * 4 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * 5 - (200) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 4 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_41_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"42ec1864adc0446d8c923d81\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bb9a7f3cf3995964c4bef9b4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383669a81127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"7c1cf64b052cf8dbf0fb03e7\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1a3be3dbf3d29278760\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87f8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cc5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1b9ddaddbd04353ae9f6ea61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc8e6ff7fe7c6055c9f\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        String location_type = "";
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/info -> GET on path '/info' defines a response schema but no response body found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/info")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/sessions/9b/group/TU2xZEE")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/9b/group/TU2xZEE"));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/ObjectId/virtual_study")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
        location_type = "/api/sessions/ObjectId/virtual_study" + "/" + res_2.extract().body().path("id").toString();
        
        // Fault100. HTTP Status 500. org/cbioportal/session_service/domain/Session_74_setData PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"false\" ")
                .put(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/NumberInt/genomic_chart/%7B%7D"))
                .then()
                .statusCode(500)// org/cbioportal/session_service/domain/Session_74_setData
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/ObjectId/virtual_study/67b25b88fd1c7613a1fecdc0"));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/true/settings/settings"))
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * 1 - (200) GET:/info
    * 2 - (404) GET:/api/sessions/{source}/{type}/{id}
    * 3 - (200) POST:/api/sessions/{source}/{type}
    * 4 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * 5 - (200) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 4 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_42_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"52fd1963adbf547d7b921d8f\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bb8a8d3cf3996a64c4cefbb3\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca838366a981127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"8d1bf65b054bf8db000cf3f7\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"0cb6d0b3cf3dbf3d39287660\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"2e9dde325ed4eaf4d88e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cd5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1b9ddafdbd04353ae9e6ea61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"d7d5ccd9e7ff70e7c6165c90\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"48d10f6d0ea9289ad6ed634c\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"9fbc62a1a3032bf5f58ea5a9\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        String location_type = "";
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/info -> GET on path '/info' defines a response schema but no response body found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/info")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/kExBJt/comparison_session/r03R2?field=2W8poRe")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/kExBJt/comparison_session/r03R2"));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/comparison_session/virtual_study")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
        location_type = "/api/sessions/comparison_session/virtual_study" + "/" + res_2.extract().body().path("id").toString();
        
        // Fault100. HTTP Status 500. org/cbioportal/session_service/domain/Session_74_setData PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"comparison_session\" ")
                .put(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/DBPointer/group/MaxKey"))
                .then()
                .statusCode(500)// org/cbioportal/session_service/domain/Session_74_setData
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/comparison_session/virtual_study/67b25b8afd1c7613a1fecdcf"));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/comparison_session/comparison_session/NumberDecimal"))
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * 1 - (200) GET:/info
    * 2 - (404) GET:/api/sessions/{source}/{type}/{id}
    * 3 - (200) POST:/api/sessions/{source}/{type}
    * 4 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * 5 - (200) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 4 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_43_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"42ed1963acbf647e7b911d8f\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bb8a8e2cf3996a74c4cefab3\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca838366aa81127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"8d1bf65b054bf8dbf00cf3f7\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fcb6e1a3ce3ebf3d29287760\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"2e9dde325ed4eaf4d88e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cd5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1b9ddafdbd04353ae9e6ea61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5ccc8e6ff7fe7b6045c9f\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"2c3856d26a30cab2c312dfda\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"b39e9b74dba1febabbd41a1b\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        String location_type = "";
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/info -> GET on path '/info' defines a response schema but no response body found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/info")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/sgkTL8ulL/custom_gene_list/0o?" + 
                    "EMextraParam123=42&" + 
                    "field=qlgBYqpQV")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/sgkTL8ulL/custom_gene_list/0o"));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/Timestamp/genomic_chart")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
        location_type = "/api/sessions/Timestamp/genomic_chart" + "/" + res_2.extract().body().path("id").toString();
        
        // Fault100. HTTP Status 500. org/cbioportal/session_service/domain/Session_74_setData PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"{}\" ")
                .put(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/BinData/group/MaxKey"))
                .then()
                .statusCode(500)// org/cbioportal/session_service/domain/Session_74_setData
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/Timestamp/genomic_chart/67b25b89fd1c7613a1fecdc7"));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/genomic_chart/EVOMASTER/NumberInt"))
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * 1 - (200) GET:/info
    * 2 - (404) GET:/api/sessions/{source}/{type}/{id}
    * 3 - (200) POST:/api/sessions/{source}/{type}
    * 4 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * 5 - (200) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 4 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_44_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"42ec1865adc0446d8c923d81\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bb9a6f2cf2996964d4beeab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca9383669a81127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"5bfd063b152cd8dc01fdf3e7\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1a3be3dbf3d29278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3daede414ee4eb04d68f8226\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdabbe0cd3cc5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1bade9cfbe05564aeaf50b61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc8e6ff7fe7c6055c9f\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        String location_type = "";
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/info -> GET on path '/info' defines a response schema but no response body found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/info")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/h1WoxNssiC1y/group/AMkFwS3_irW")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/h1WoxNssiC1y/group/AMkFwS3_irW"));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/ObjectId/settings")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
        location_type = "/api/sessions/ObjectId/settings" + "/" + res_2.extract().body().path("id").toString();
        
        // Fault100. HTTP Status 500. org/cbioportal/session_service/domain/Session_74_setData PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"false\" ")
                .put(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/%7B%7D/genomic_chart/%7B%7D"))
                .then()
                .statusCode(500)// org/cbioportal/session_service/domain/Session_74_setData
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/ObjectId/settings/67b25b90fd1c7613a1fecdfe"));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/UUID/EVOMASTER/NumberLong"))
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * 1 - (200) GET:/info
    * 2 - (200) GET:/api/sessions/{source}/{type}
    * 3 - (200) POST:/api/sessions/{source}/{type}
    * 4 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * 5 - (200) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 4 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_45_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"42fd0853aed0436e7ca23e71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbaa6e2de3895964e4bedab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383669a81127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63b052ce8ecf1fcf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1a3be3dbf3d29278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cc5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1badeacebe05464aeaf5fa61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc8e6ff7fe7c6055c9f\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        String location_type = "";
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/info -> GET on path '/info' defines a response schema but no response body found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/info")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/IKPuQkY/comparison_session")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/ObjectId/virtual_study")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
        location_type = "/api/sessions/ObjectId/virtual_study" + "/" + res_2.extract().body().path("id").toString();
        
        // Fault100. HTTP Status 500. org/cbioportal/session_service/domain/Session_74_setData PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"false\" ")
                .put(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/NumberInt/genomic_chart/main_session"))
                .then()
                .statusCode(500)// org/cbioportal/session_service/domain/Session_74_setData
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/ObjectId/virtual_study/67b25b8afd1c7613a1fecdcc"));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/Infinity/main_session/%7B%7D"))
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * 1 - (200) GET:/info
    * 2 - (200) GET:/api/sessions/{source}/{type}
    * 3 - (200) POST:/api/sessions/{source}/{type}
    * 4 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * 5 - (200) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 4 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_46_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"42fd0853aed0436e7ca23e71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbaa6d2de3895964e4bedab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383669a81127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"7bfd064a051ce8ecf1ecf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d2a3be3dbf3d29278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61c4fe69cad0b1fc886396ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9edf335ed4faf5c76e8247\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cc5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1badeacebe05464aeaf5fa61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"f7d5ccd8e6ff8ff8c5155d90\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        String location_type = "";
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/info -> GET on path '/info' defines a response schema but no response body found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/info")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_EM_7982_XYZ_/settings")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/ObjectId/virtual_study")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
        location_type = "/api/sessions/ObjectId/virtual_study" + "/" + res_2.extract().body().path("id").toString();
        
        // Fault100. HTTP Status 500. org/cbioportal/session_service/domain/Session_74_setData PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"false\" ")
                .put(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/%7B%7D/custom_gene_list/genUUi__chert"))
                .then()
                .statusCode(500)// org/cbioportal/session_service/domain/Session_74_setData
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/ObjectId/virtual_study/67b25b90fd1c7613a1fecdff"));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/NumberLong/genomic_chart/genUUi__chert"))
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * 1 - (200) GET:/info
    * 2 - (200) GET:/api/sessions/{source}/{type}
    * 3 - (200) POST:/api/sessions/{source}/{type}
    * 4 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * 5 - (200) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 4 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_47_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"42fd0853aed0436e7ca23e71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbaa6d2de3895964e4bedab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383669a81127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63b052ce8ecf1fcf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d2a3be3dbf3d29278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc886396ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9edf335ed4faf6c76e8246\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cc5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1badeacebe05464aeaf5fa61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc8e6ff7fe7c6055c9f\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        String location_type = "";
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/info -> GET on path '/info' defines a response schema but no response body found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/info")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/IKPuQkY/settings")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/ObjectId/virtual_study")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
        location_type = "/api/sessions/ObjectId/virtual_study" + "/" + res_2.extract().body().path("id").toString();
        
        // Fault100. HTTP Status 500. org/cbioportal/session_service/domain/Session_74_setData PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"genomic_chart\" ")
                .put(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/genomic_chart/genomic_chart/genomic_chart"))
                .then()
                .statusCode(500)// org/cbioportal/session_service/domain/Session_74_setData
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/ObjectId/virtual_study/67b25b90fd1c7613a1fece00"));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/ObjectId/genomic_chart/NumberDecimal"))
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * 1 - (200) GET:/info
    * 2 - (500) GET:/api/sessions/{source}/{type}/{id}
    * 3 - (200) POST:/api/sessions/{source}/{type}
    * 4 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * 5 - (200) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 5 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_48_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"42ed1963acbf647e7b911d8f\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bb8a8e2cf3996a74c4cefab3\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca838366aa81127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"8d1bf65b054bf8dbf00cf3f7\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"0cb6e1a3ce3ebf3d29287760\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"2e9dde325ed4eaf4d88e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cd5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1b9ddafdbd04353ae9e6ea61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc8e6ff7fe7c6055c9f\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        String location_type = "";
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/info -> GET on path '/info' defines a response schema but no response body found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/info")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
        
        // Fault100. HTTP Status 500. framework_code GET:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/rU6JX;h/custom_gene_list/T490baxEVY2e?field=0Ktw2qeSs2j")
                .then()
                .statusCode(500)// framework_code
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/rU6JX;h/custom_gene_list/T490baxEVY2e"));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/RegExp/virtual_study")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
        location_type = "/api/sessions/RegExp/virtual_study" + "/" + res_2.extract().body().path("id").toString();
        
        // Fault100. HTTP Status 500. org/cbioportal/session_service/domain/Session_74_setData PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"EVOMASTER\" ")
                .put(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/RegExp/group/MaxKey"))
                .then()
                .statusCode(500)// org/cbioportal/session_service/domain/Session_74_setData
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/RegExp/virtual_study/67b25b89fd1c7613a1fecdc6"));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/EVOMASTER/EVOMASTER/NumberDecimal"))
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * 1 - (200) GET:/info
    * 2 - (404) PUT:/api/sessions/{source}/{type}/{id}
    * 3 - (200) POST:/api/sessions/{source}/{type}
    * 4 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * 5 - (200) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 4 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_49_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"52ed1854aed0527f7ca22e82\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbaa6e2de3895964e4bedab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383669a72127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63b052ce8ecf1fcf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1a3be3dbf3d29278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cc5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1badeacebe05464aeaf4fa61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc8e6ff7fe6c6f55c9f\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        String location_type = "";
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/info -> GET on path '/info' defines a response schema but no response body found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/info")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"jrXoKHKG\" ")
                .put(baseUrlOfSut + "/api/sessions/BUUuUU/custom_data/_EM_316_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/BUUuUU/custom_data/_EM_316_XYZ_"));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/RegExp/comparison_session")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
        location_type = "/api/sessions/RegExp/comparison_session" + "/" + res_2.extract().body().path("id").toString();
        
        // Fault100. HTTP Status 500. org/cbioportal/session_service/domain/Session_74_setData PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"false\" ")
                .put(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/%7B%7D/genomic_chart/%7B%7D"))
                .then()
                .statusCode(500)// org/cbioportal/session_service/domain/Session_74_setData
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/RegExp/comparison_session/67b25b88fd1c7613a1fecdbd"));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/RegExp/genomic_chart/%7B%7D"))
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * 1 - (200) GET:/info
    * 2 - (404) PUT:/api/sessions/{source}/{type}/{id}
    * 3 - (200) POST:/api/sessions/{source}/{type}
    * 4 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * 5 - (200) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 4 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_50_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"51fdf863ade1425d6ca33d71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbaa6e2de3895964e4bedab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383669a81127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63b052ce8ecf1fcf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1a3be3dbf3d29278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cc5c4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1badeacebe05464aeaf5fa61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc8e6ff7fe7c6055c8f\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        String location_type = "";
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/info -> GET on path '/info' defines a response schema but no response body found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/info")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"jr`oKHK\" ")
                .put(baseUrlOfSut + "/api/sessions/BUUuUU/group/1badeacebe05464aeaf5fa61")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/BUUuUU/group/1badeacebe05464aeaf5fa61"));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/NumberDecimal/virtual_study")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
        location_type = "/api/sessions/NumberDecimal/virtual_study" + "/" + res_2.extract().body().path("id").toString();
        
        // Fault100. HTTP Status 500. org/cbioportal/session_service/domain/Session_74_setData PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"comparison_session\" ")
                .put(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/NumberInt/comparison_session/true"))
                .then()
                .statusCode(500)// org/cbioportal/session_service/domain/Session_74_setData
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/NumberDecimal/virtual_study/67b25b8efd1c7613a1fecdee"));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/UUID/genomic_chart/NaN"))
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * 1 - (200) GET:/info
    * 2 - (404) PUT:/api/sessions/{source}/{type}/{id}
    * 3 - (200) POST:/api/sessions/{source}/{type}
    * 4 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * 5 - (200) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 4 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_51_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"42fd0853aed0436e7ca23e71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbaa6e2de3895964e4bedab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383669a81127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63b052ce8ecf1fce3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d0a3be3dbf3d29278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cc5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"0baceacebe05565af9050a51\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc8e6ff7fe7c6055c9f\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        String location_type = "";
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/info -> GET on path '/info' defines a response schema but no response body found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/info")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"jrXoKHK\" ")
                .put(baseUrlOfSut + "/api/sessions/BUUyUU/settings/_EM_316_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/BUUyUU/settings/_EM_316_XYZ_"));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/ObjectId/settings")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
        location_type = "/api/sessions/ObjectId/settings" + "/" + res_2.extract().body().path("id").toString();
        
        // Fault100. HTTP Status 500. org/cbioportal/session_service/domain/Session_74_setData PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"false\" ")
                .put(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/null/group/custom_data"))
                .then()
                .statusCode(500)// org/cbioportal/session_service/domain/Session_74_setData
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/ObjectId/settings/67b25b8afd1c7613a1fecdcb"));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/custom_data/custom_data/custom_data"))
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * 1 - (200) GET:/api/sessions/{source}/{type}
    * 2 - (404) GET:/api/sessions/{source}/{type}/{id}
    * 3 - (200) POST:/api/sessions/{source}/{type}
    * 4 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * 5 - (200) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 4 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_52_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"42fd0853aed0436e7ca23e71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbaa6e2de3895964e4bedab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383669a81127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63b052ce8ecf1fcf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1a3be3dbf3d29278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cc5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1badeacebe05464aeaf5fa61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc8e6ff7fe7c6055c9f\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"acebe1e6f9d237e07a3a5a0c\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"ea4d4185cae30a5293cba749\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        String location_type = "";
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/Hy/genomic_chart?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/sessions/BFDe9wKY0/settings/aTwtHOanvOPJPcv2")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/BFDe9wKY0/settings/aTwtHOanvOPJPcv2"));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/ObjectId/virtual_study")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
        location_type = "/api/sessions/ObjectId/virtual_study" + "/" + res_2.extract().body().path("id").toString();
        
        // Fault100. HTTP Status 500. org/cbioportal/session_service/domain/Session_74_setData PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"false\" ")
                .put(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/NumberInt/genomic_chart/virtual_study"))
                .then()
                .statusCode(500)// org/cbioportal/session_service/domain/Session_74_setData
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/ObjectId/virtual_study/67b25b8bfd1c7613a1fecdd5"));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/Timestamp/custom_gene_list/NaN"))
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * 1 - (200) GET:/info
    * 2 - (400) POST:/api/sessions/{source}/{type}
    * 3 - (200) GET:/api/sessions/{source}/{type}
    * 4 - (200) POST:/api/sessions/{source}/{type}
    * 5 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * 6 - (200) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 5 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_53_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"52ed1854aed0527f7ca22e82\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbaa6e2de3895964e4bedab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4af4b5ca7472669b92126ef8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b0cf53bf52cf7ecf00be2f9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1a3be3dbf3d29278762\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d5ee68cad0b0fc786397ba\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cc5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1badeacebe05464aeaf5fa61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"d7d5cdd7e6ff7fe7c7054c9f\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"1edf2d8e237c7cfa0603df8b\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"ebf1962cd2eb6186d92bce9a\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        String location_type = "";
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/info -> GET on path '/info' defines a response schema but no response body found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/info")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"virtual_study\" ")
                .post(baseUrlOfSut + "/api/sessions/virtual_study/EVOMASTER")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/virtual_study/EVOMASTER"));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/virtual_study/virtual_study")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/custom_data/custom_data")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
        location_type = "/api/sessions/custom_data/custom_data" + "/" + res_3.extract().body().path("id").toString();
        
        // Fault100. HTTP Status 500. org/cbioportal/session_service/domain/Session_74_setData PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"{}\" ")
                .put(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/NumberInt/genomic_chart/custom_data"))
                .then()
                .statusCode(500)// org/cbioportal/session_service/domain/Session_74_setData
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/custom_data/custom_data/67b25b90fd1c7613a1fecdfc"));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/undefined/custom_gene_list/true"))
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * 1 - (200) GET:/info
    * 2 - (404) PUT:/api/sessions/{source}/{type}/{id}
    * 3 - (200) POST:/api/sessions/{source}/{type}
    * 4 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * 5 - (200) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 4 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_54_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"52ed1854aed0527f7ca22e82\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbaa6e2de3895964e4bedab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383669a82127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63b052ce8ecf1fcf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1a3be3dbf3d29278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cc5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1badeacebe05464aeaf5fa61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc8e6ff7fe7c6f55c9f\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"0a82d70c74c4df832f81eafd\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"deb16e9df7ebecabe1d3881c\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        String location_type = "";
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/info -> GET on path '/info' defines a response schema but no response body found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/info?EMextraParam123=_EM_610_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"jrXoKHK\" ")
                .put(baseUrlOfSut + "/api/sessions/BUUuUU/main_session/_EM_316_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/BUUuUU/main_session/_EM_316_XYZ_"));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/ObjectId/virtual_study")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
        location_type = "/api/sessions/ObjectId/virtual_study" + "/" + res_2.extract().body().path("id").toString();
        
        // Fault100. HTTP Status 500. org/cbioportal/session_service/domain/Session_74_setData PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"{}\" ")
                .put(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/NumberInt/genomic_chart/virtual_study"))
                .then()
                .statusCode(500)// org/cbioportal/session_service/domain/Session_74_setData
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/ObjectId/virtual_study/67b25b85fd1c7613a1fecdb0"));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/RegExp/custom_gene_list/true"))
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/api/sessions/{source}/{type}/query/fetch
    * 2 - (200) GET:/info
    * 3 - (404) DELETE:/api/sessions/{source}/{type}/{id}
    * 4 - (200) POST:/api/sessions/{source}/{type}
    * 5 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * 6 - (200) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 5 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_55_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"33cdf973a0d1539e6ca2ff81\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8bcb712cd27a3b72f1bfdca0\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"49f4b6cb9573778b832360f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"7b1de62a153ce6fc020cd4f9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fbc6d1b2be2eb04e19079740\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"60d4d149aaeea0fda954c7ac\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b6ede00699f38e8bf87a5ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10c107c99aba5eba6bceb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"3f9f88bb42d58112d0a579ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"e2669cc47f553dfe9c8fbed0\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        String location_type = "";
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"UD\" ")
                .post(baseUrlOfSut + "/api/sessions/_EM_6393_XYZ_/genomic_chart/query/fetch")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/_EM_6393_XYZ_/genomic_chart/query/fetch"));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/info -> GET on path '/info' defines a response schema but no response body found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/info?value=tt572mgC1TO1V")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 404 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/TB0XGzsS/main_session/xNs")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/TB0XGzsS/main_session/xNs"));
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/DBPointer/main_session")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
        location_type = "/api/sessions/DBPointer/main_session" + "/" + res_3.extract().body().path("id").toString();
        
        // Fault100. HTTP Status 500. org/cbioportal/session_service/domain/Session_74_setData PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"{}\" ")
                .put(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/group/group/ISODate"))
                .then()
                .statusCode(500)// org/cbioportal/session_service/domain/Session_74_setData
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/DBPointer/main_session/67b25b8afd1c7613a1fecdce"));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22EM_tainted_map%22:%22_EM_282_XYZ_%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D/group/ObjectId"))
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/api/sessions/{source}/{type}/query/fetch
    * 2 - (200) GET:/info
    * 3 - (404) PUT:/api/sessions/{source}/{type}/{id}
    * 4 - (200) POST:/api/sessions/{source}/{type}
    * 5 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * 6 - (200) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 5 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_56_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"33cdf973a0d1539d6ca2ff81\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8bcb712cd27a3b72f2bfdca0\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"49f4b6cb9473778b832360f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1ef62a052de6fc020be3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fbc6d1b2be2eb04e19079740\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4d149baefb00d9954c7ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b6ddd1f588f4ae8af68a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10c107c99aba5eba6bceb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"2fa089bc42d59111cf9479ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f2669cc47f553dfe9c8fbed0\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        String location_type = "";
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"UD\" ")
                .post(baseUrlOfSut + "/api/sessions/26jNOX%60AAJWF1/genomic_chart/query/fetch")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/26jNOX%60AAJWF1/genomic_chart/query/fetch"));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/info -> GET on path '/info' defines a response schema but no response body found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/info?" + 
                    "field=_EM_6036_XYZ_&" + 
                    "value=tt572mgC1TO2V")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"_EM_5084_XYZ_\" ")
                .put(baseUrlOfSut + "/api/sessions/B4su/custom_data/_EM_6037_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/B4su/custom_data/_EM_6037_XYZ_"));
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/virtual_study/main_session")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
        location_type = "/api/sessions/virtual_study/main_session" + "/" + res_3.extract().body().path("id").toString();
        
        // Fault100. HTTP Status 500. org/cbioportal/session_service/domain/Session_74_setData PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"{}\" ")
                .put(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/virtual_study/genomic_chart/HexData"))
                .then()
                .statusCode(500)// org/cbioportal/session_service/domain/Session_74_setData
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/virtual_study/main_session/67b25b8efd1c7613a1fecdea"));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22EM_tainted_map%22:%22_EM_282_XYZ_%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D/virtual_study/HexData"))
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * 1 - (500) GET:/api/sessions/{source}/{type}/query
    * 2 - (200) GET:/info
    * 3 - (400) GET:/api/sessions/{source}/{type}
    * 4 - (200) POST:/api/sessions/{source}/{type}
    * 5 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * 6 - (200) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 6 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_57_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"22bd0864bfd152ad6bb1ff71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"7abb7f1cc19b3a72f2aebcb2\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"49f4c6cb9373787b832360f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6a2ed43a053cf80b011ce3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"eaa7d2a0ce1b9f5e2bf6684e\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"6fc5e26bcad09ffdaa52c7bc\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"1b6ddd1f588f4ae8af68a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10c128d99bbc5d9a6bbfc4\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"1f9089ac52d59211b0a457ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f264bcc27f463df09b71acdf\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"0eebabd11faeb3ec2e99da1b\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"e1daead14badbc997ef92e5d\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"87d8fb4ab4a832cf707bdbba\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"cdea4697e3da201435faa8c2\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        String location_type = "";
        
        // Fault100. HTTP Status 500. framework_code GET:/api/sessions/{source}/{type}/query
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Response status 500 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/;UUUiMUUtUjS/group/query?" + 
                    "field=z%7CKc&" + 
                    "value=2IYU8tUpcU_U")
                .then()
                .statusCode(500)// framework_code
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/;UUUiMUUtUjS/group/query"));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/info -> GET on path '/info' defines a response schema but no response body found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/info?value=_EM_6825_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/79efFWcIcz4YB/EVOMASTER")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/79efFWcIcz4YB/EVOMASTER"));
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/EVOMASTER/group")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
        location_type = "/api/sessions/EVOMASTER/group" + "/" + res_3.extract().body().path("id").toString();
        
        // Fault100. HTTP Status 500. org/cbioportal/session_service/domain/Session_74_setData PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"{}\" ")
                .put(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/EVOMASTER/main_session/ISODate"))
                .then()
                .statusCode(500)// org/cbioportal/session_service/domain/Session_74_setData
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/EVOMASTER/group/67b25b85fd1c7613a1fecdaf"));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/MaxKey/EVOMASTER/EVOMASTER"))
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * 1 - (200) GET:/api/sessions/{source}/{type}
    * 2 - (200) GET:/info
    * 3 - (404) PUT:/api/sessions/{source}/{type}/{id}
    * 4 - (200) POST:/api/sessions/{source}/{type}
    * 5 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * 6 - (200) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 5 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_58_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"32cd0973bfd1539d6ba1fe72\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8bdb7f1bc18a3a83f3addcb2\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"58f4b6e99474767b942461f8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1df62af52ce7fc020be3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"e9b8d192de2b9f4c2af5684f\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"62d4f149cae1c00d8a64d6aa\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b6ddd10498f49e89f58a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10c107d9abba4ebb6bcfb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"1fa089bc42d59111c19477ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f264bcc27f463dff9b71acdf\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        String location_type = "";
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/kj/comparison_session")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/info -> GET on path '/info' defines a response schema but no response body found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/info?" + 
                    "field=by&" + 
                    "value=tt572mgC1TK2V")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"DQR\" ")
                .put(baseUrlOfSut + "/api/sessions/:8%7Bu/custom_data/IKW8EoDp")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/:8%7Bu/custom_data/IKW8EoDp"));
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/genomic_chart/genomic_chart")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
        location_type = "/api/sessions/genomic_chart/genomic_chart" + "/" + res_3.extract().body().path("id").toString();
        
        // Fault100. HTTP Status 500. org/cbioportal/session_service/domain/Session_74_setData PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"genomic_chart\" ")
                .put(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/genomic_chart/custom_data/RegExp"))
                .then()
                .statusCode(500)// org/cbioportal/session_service/domain/Session_74_setData
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/genomic_chart/genomic_chart/67b25b90fd1c7613a1fecdfa"));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22EM_tainted_map%22:%22_EM_282_XYZ_%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D/genomic_chart/MinKey"))
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/api/sessions/{source}/{type}/query/fetch
    * 2 - (200) GET:/info
    * 3 - (404) PUT:/api/sessions/{source}/{type}/{id}
    * 4 - (200) POST:/api/sessions/{source}/{type}
    * 5 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * 6 - (200) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 5 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_59_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"33dd0982b0d1439d7ca2ff91\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8bcc722be26a3c72f2bfec90\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"48f3a6caa472678a932260f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"7a0ef62b151df50c130be3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fbc5c0b2be1ec04f09089741\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d5c169cbcfbf1d9952b7ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0c6ddd1e588f4ae8af68a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10b1f7c89aaa5faa5bcdb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"2fa089bc42d59111cf9479ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f2779dd47f653dfd8ba0bed0\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        String location_type = "";
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"DsQiLKxZkr1V6J\" ")
                .post(baseUrlOfSut + "/api/sessions/_EM_6075_XYZ_/main_session/query/fetch")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/_EM_6075_XYZ_/main_session/query/fetch"));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/info -> GET on path '/info' defines a response schema but no response body found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/info?field=M1Ui")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"]EMWB084BPYZ\u003c\" ")
                .put(baseUrlOfSut + "/api/sessions/B4sy/genomic_chart/_EM_6037_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/B4sy/genomic_chart/_EM_6037_XYZ_"));
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/group/settings")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
        location_type = "/api/sessions/group/settings" + "/" + res_3.extract().body().path("id").toString();
        
        // Fault100. HTTP Status 500. org/cbioportal/session_service/domain/Session_74_setData PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"{}\" ")
                .put(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/NumberInt/group/UUID"))
                .then()
                .statusCode(500)// org/cbioportal/session_service/domain/Session_74_setData
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/group/settings/67b25b8ffd1c7613a1fecdf6"));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22EM_tainted_map%22:%22_EM_282_XYZ_%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D/EVOMASTER/ISODate"))
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * 1 - (200) GET:/api/sessions/{source}/{type}/query
    * 2 - (200) GET:/info
    * 3 - (400) GET:/api/sessions/{source}/{type}
    * 4 - (200) POST:/api/sessions/{source}/{type}
    * 5 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * 6 - (200) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 5 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_60_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"22bd0864bfd152ad6bb1ff71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"7abb7f1cc19b3a72f2aebcb2\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"49f4c6cb9373777b832360f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6a2ed43a053cf80b011ce3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"eaa7d2a0ce1b9f5e2bf6684e\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"7fd5f25acaefaf0c9a53d7bb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"1b6ddd1f588f4ae8af68a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10c128d99bbc5d9a6bbfc4\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"1f9089ac52d59211b0a467ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f264bcc27f463df09b71acdf\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"0eebabd11faeb3ec2e99da1b\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"e1daead14badbc997ef92e5d\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"87d8fb4ab4a832cf707bdbba\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"cdea4697e3da200435faa8c2\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        String location_type = "";
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/3nrSiUBKtHjS/group/query?" + 
                    "field=zzKc&" + 
                    "value=2IUU8tUpcU_U")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/info -> GET on path '/info' defines a response schema but no response body found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/info?" + 
                    "field=_EM_6138_XYZ_&" + 
                    "value=tt572mgC1TO2V")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/79efFWcIcz4YB/EVOMASTER")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/79efFWcIcz4YB/EVOMASTER"));
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/main_session/group")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
        location_type = "/api/sessions/main_session/group" + "/" + res_3.extract().body().path("id").toString();
        
        // Fault100. HTTP Status 500. org/cbioportal/session_service/domain/Session_74_setData PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"{}\" ")
                .put(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/main_session/main_session/HexData"))
                .then()
                .statusCode(500)// org/cbioportal/session_service/domain/Session_74_setData
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/main_session/group/67b25b8ffd1c7613a1fecdf3"));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/UUID/virtual_study/Date"))
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * 1 - (200) GET:/api/sessions/{source}/{type}/query
    * 2 - (200) GET:/info
    * 3 - (400) GET:/api/sessions/{source}/{type}
    * 4 - (200) POST:/api/sessions/{source}/{type}
    * 5 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * 6 - (200) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 5 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_61_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"12ce0864c0f242bd7bc1fe72\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"7abb7f1cc19b3a72f2aebcb1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"49f4b6cba373777b832360f8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6a2ed43a053cf80b021ce3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fa97f291cd1bb04e2bf6893f\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"70d4e259caefaf0c9a54c7bb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b6ddd1f588f4ae8af68a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"c911c127d99bad5d9a6bbfb4\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"2fa098ad42d4a221b0a558ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f264bcc27f463df09b71acdf\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"0cec9ce120bda3ec2d8ada1a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"e2cad9e14badac988ef82e5d\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"ccf17ab375adf0137b5db709\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"338d6b541780b0ff1cbc40e3\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e28adb234aa7ad8d221b7a9e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"7f15c1a0de1fbefde27a259e\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        String location_type = "";
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_EM_5002_XYZ_/main_session/query?" + 
                    "field=data&" + 
                    "value=2IUU8tUpcU_U")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/info -> GET on path '/info' defines a response schema but no response body found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/info?" + 
                    "field=_EM_6138_XYZ_&" + 
                    "value=tt572mgC1TO2V")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/79efFWkIcz4Y/EVOMASTER")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/79efFWkIcz4Y/EVOMASTER"));
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/true/settings")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
        location_type = "/api/sessions/true/settings" + "/" + res_3.extract().body().path("id").toString();
        
        // Fault100. HTTP Status 500. org/cbioportal/session_service/domain/Session_74_setData PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"{}\" ")
                .put(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/Date/comparison_session/%7B%7D"))
                .then()
                .statusCode(500)// org/cbioportal/session_service/domain/Session_74_setData
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/true/settings/67b25b8ffd1c7613a1fecdf0"));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/false/comparison_session/RegExp"))
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * 1 - (200) GET:/api/sessions/{source}/{type}/query
    * 2 - (200) GET:/info
    * 3 - (200) GET:/api/sessions/{source}/{type}
    * 4 - (200) POST:/api/sessions/{source}/{type}
    * 5 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * 6 - (200) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 5 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_62_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"32cd0973bfd1539d5ba1fe72\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"7bcb7f1cc28b3a73f2becca1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"39f4b6cb9373778b832360f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1df62a052ce7fc020be3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"eaa7d2a0ce1b9f5e2bf6684e\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4d149baefb00d9954c7ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0c6cde0f589e4ae7bf59a5ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"c911c007c99bbb5dab6bcfb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"0fa099bb32e59111ce9378ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f264bcc27f463dff9b71acdf\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"d54d2e6a5fade757c9459f04\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"96ee55952564622ec57d5aea\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        String location_type = "";
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_EM_5002_XYZ_/custom_gene_list/query?" + 
                    "field=zzKc&" + 
                    "value=2IUU8tUpcU_U")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/info -> GET on path '/info' defines a response schema but no response body found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/info?" + 
                    "field=by&" + 
                    "value=tt572mgC1TO2V")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_b6d/comparison_session")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/genomic_chavt/group")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
        location_type = "/api/sessions/genomic_chavt/group" + "/" + res_3.extract().body().path("id").toString();
        
        // Fault100. HTTP Status 500. org/cbioportal/session_service/domain/Session_74_setData PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"genomic_chavt\" ")
                .put(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/genomic_chavt/genomic_chart/genomic_chavt"))
                .then()
                .statusCode(500)// org/cbioportal/session_service/domain/Session_74_setData
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/genomic_chavt/group/67b25b87fd1c7613a1fecdb8"));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/RegExp/virtual_study/BinData"))
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * 1 - (200) GET:/api/sessions/{source}/{type}/query
    * 2 - (200) GET:/info
    * 3 - (200) GET:/api/sessions/{source}/{type}
    * 4 - (200) POST:/api/sessions/{source}/{type}
    * 5 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * 6 - (200) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 5 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_63_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"22bd0874cfe241bd6bc1ff72\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"7abb7f1cc19b3a72f2aebcb1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"49f4b6cba373777b832360f8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6a2ed43a053cf80b021ce3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fa97f291ce1bb04e2bf6893f\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"70d4e259caefaf0c9a54c7bb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b6ddd1f588f4ae8af68a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"c911c127d99bad5d9a6bbfb4\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"1f9089ac53d59211b0a467ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f264bcc27f463df09b71acdf\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"0cec9ce120bda3ec2d8ada1a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"e2cad9e14badac988ef82e5d\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"ccf17ab375adf0137b5db709\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"328d6b541780b0ff1cbc40e3\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        String location_type = "";
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_EM_5002_XYZ_/main_session/query?" + 
                    "field=data&" + 
                    "value=2IUU8tUpcU_U")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/info -> GET on path '/info' defines a response schema but no response body found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/info?" + 
                    "field=_EM_6138_XYZ_&" + 
                    "value=tt572mgC1TO2V")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/79efFWkIcz4Y/virtual_study")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/true/main_session")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
        location_type = "/api/sessions/true/main_session" + "/" + res_3.extract().body().path("id").toString();
        
        // Fault100. HTTP Status 500. org/cbioportal/session_service/domain/Session_74_setData PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"{}\" ")
                .put(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/Date/comparison_session/comparison_session"))
                .then()
                .statusCode(500)// org/cbioportal/session_service/domain/Session_74_setData
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/true/main_session/67b25b88fd1c7613a1fecdbc"));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/UUID/comparison_session/ObjectId"))
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * 1 - (200) GET:/api/sessions/{source}/{type}/query
    * 2 - (200) GET:/info
    * 3 - (200) GET:/api/sessions/{source}/{type}
    * 4 - (200) POST:/api/sessions/{source}/{type}
    * 5 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * 6 - (200) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 5 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_64_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"22bc0754bfd162ae6bb1ff71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8bdb602cc27a3a63f2aecba0\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a05b6dba373877a932360fa\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6a2fe42b053cf90c011cd3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"eaa7d2a0ce1b9f5e2cf6684e\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"71d4e259caefaf0c9a54c7bb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b6ddd1f588f4ae8af68a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"d911df16c98bcb5cbc6bbfa6\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"1f9089ac52d59211b0a467ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f264bcc27f463df09b71abdf\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"0cecabe11fadc3fb1ea9d91a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"e1dbfad14badbc997ef92e5d\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        String location_type = "";
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_EM_6570_XYZ_/genomic_chart/query?" + 
                    "field=zzKc&" + 
                    "value=")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/info -> GET on path '/info' defines a response schema but no response body found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/info?" + 
                    "field=by&" + 
                    "value=tt572mgC1TO2V")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/1tVliTvEcXz06xRK/custom_data")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/new/group")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
        location_type = "/api/sessions/new/group" + "/" + res_3.extract().body().path("id").toString();
        
        // Fault100. HTTP Status 500. org/cbioportal/session_service/domain/Session_74_setData PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"{}\" ")
                .put(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/NumberDecimal/group/virtual_study"))
                .then()
                .statusCode(500)// org/cbioportal/session_service/domain/Session_74_setData
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/new/group/67b25b8efd1c7613a1fecde8"));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/MinKey/virtual_study/null"))
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * 1 - (200) GET:/api/sessions/{source}/{type}/query
    * 2 - (200) GET:/info
    * 3 - (404) PUT:/api/sessions/{source}/{type}/{id}
    * 4 - (200) POST:/api/sessions/{source}/{type}
    * 5 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * 6 - (200) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 5 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_65_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"32cd0973bfd1539d6ba1fe72\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8bcb6f1cc28b3a73f2becca1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"59f4b6ca8473687b83247fe9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c1df62a052ce7fc020ce3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fbd8c1a1ce1b9e5d1a06674d\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4d149baefb00c9954c7ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b6ddd1f588f4ae8af68a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"da10b107daacba5dca6adea5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"1fa089bc42d59111cf9477ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f263ccb27e562dee8a71bcef\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        String location_type = "";
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_EM_5002_XYZ_/genomic_chart/query?" + 
                    "field=data&" + 
                    "value=2IUU8tUpcU_U")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/info -> GET on path '/info' defines a response schema but no response body found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/info?" + 
                    "field=by&" + 
                    "value=_EM_6004_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"uLwHkXEZ0zxMipb\" ")
                .put(baseUrlOfSut + "/api/sessions/B8su/custom_gene_list/frZNR2")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/B8su/custom_gene_list/frZNR2"));
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/main_session/comparison_session")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
        location_type = "/api/sessions/main_session/comparison_session" + "/" + res_3.extract().body().path("id").toString();
        
        // Fault100. HTTP Status 500. org/cbioportal/session_service/domain/Session_74_setData PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"main_session\" ")
                .put(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/NumberDecimal/genomic_chart/%7B%7D"))
                .then()
                .statusCode(500)// org/cbioportal/session_service/domain/Session_74_setData
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/main_session/comparison_session/67b25b8efd1c7613a1fecde9"));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22EM_tainted_map%22:%22_EM_282_XYZ_%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D/main_session/undefined"))
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * 1 - (200) GET:/api/sessions/{source}/{type}/query
    * 2 - (200) GET:/info
    * 3 - (200) GET:/api/sessions/{source}/{type}
    * 4 - (200) POST:/api/sessions/{source}/{type}
    * 5 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * 6 - (200) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 5 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_66_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"22bd0864bfd152ad6bb1ff71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8bcb7f1cc28b3a73f2becca1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"49f4b6cb9374777b832360f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6a2ed43a053cf80b021ce3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"eaa7d2a0ce1b9f5e2bf6684e\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"70d4e259caefaf0c9954c7bb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b6ddd1f588f4ae8af68a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"c911c017c99bbb5dab6bcfb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"1f9089ac52d59212b0a467ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f264bcc27f463df09b71acdf\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"0cecabe11fadc3fb1ea9d91a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"e1dbead14badbc997ef92e5d\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        String location_type = "";
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/S1sud4wW2zQg5hQ/genomic_chart/query?" + 
                    "field=zzKc&" + 
                    "value=2IUU8tUpcU_U")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/info -> GET on path '/info' defines a response schema but no response body found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/info?" + 
                    "field=by&" + 
                    "value=tt572mgC1TO2V")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_EM_6103_XYZ/custom_data")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/new/group")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
        location_type = "/api/sessions/new/group" + "/" + res_3.extract().body().path("id").toString();
        
        // Fault100. HTTP Status 500. org/cbioportal/session_service/domain/Session_74_setData PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"\" ")
                .put(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/NumberInt/genomic_chart/HexData"))
                .then()
                .statusCode(500)// org/cbioportal/session_service/domain/Session_74_setData
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/new/group/67b25b8efd1c7613a1fecded"));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/HexData/genomic_chart/genomic_chart"))
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * 1 - (200) GET:/api/sessions/{source}/{type}/query
    * 2 - (200) GET:/info
    * 3 - (200) GET:/api/sessions/{source}/{type}
    * 4 - (200) POST:/api/sessions/{source}/{type}
    * 5 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * 6 - (200) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 5 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_67_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"21bc0764bfe0639c6cb1ff71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8bcb7f1cc28b3a73f2becca1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"49f4b6cb9373777b832360f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6a2ed43a053cf80b021ce3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"eaa7d2a0ce1b9f5e2bf6684e\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"70d4e168baeeae1b9a54c8ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b6ddd1f588f4ae8af68a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca11c118b99abb5dbb6ccfc5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"1f9089ac52d59211b0a467ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f264bcd16f363e0f9b71add0\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"0cecabe11fadc3fb1ea9d91a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"e1dadae14badbdaa6efa2e6c\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        String location_type = "";
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_EM_5002_XYZ_/group/query?" + 
                    "field=zzKc&" + 
                    "value=2IUU8tUpcU_U")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/info -> GET on path '/info' defines a response schema but no response body found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/info?value=tt572mgC1TO2V")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/42/comparison_session")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/new/main_session")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
        location_type = "/api/sessions/new/main_session" + "/" + res_3.extract().body().path("id").toString();
        
        // Fault100. HTTP Status 500. org/cbioportal/session_service/domain/Session_74_setData PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"main_session\" ")
                .put(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/NumberDecimal/genomic_chart/%7B%7D"))
                .then()
                .statusCode(500)// org/cbioportal/session_service/domain/Session_74_setData
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/new/main_session/67b25b8ffd1c7613a1fecdf1"));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/ISODate/settings/new"))
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * 1 - (200) GET:/api/sessions/{source}/{type}/query
    * 2 - (200) GET:/info
    * 3 - (200) GET:/api/sessions/{source}/{type}
    * 4 - (200) POST:/api/sessions/{source}/{type}
    * 5 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * 6 - (200) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 5 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_68_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"21be0965cfd243ad6bb0ff72\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"7abb7f1cc19b3a72f2aebcb1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"49f4b6cb9373777b832360f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6a2ed43a053cf80b021ce3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"eaa7d2a0ce1b9f5e2bf6684e\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"70d4e259caefaf0c9a54c7bb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b6ddd1f588f4ae8af68a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"c911c127d99bac5d9a6bbfb4\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"1f9089ac52d59211b0a467ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f264bcc27f463df09b71acdf\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"0debabd11faeb2ec2e99da1b\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"e1dadad14b9dac997d092d6d\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"49b1d564c69eeea0e3ebdf92\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"4cd3cf11560feba07a2e8c90\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        String location_type = "";
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_EM_5002_XYZ_/group/query?" + 
                    "field=zzKc&" + 
                    "value=")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/info -> GET on path '/info' defines a response schema but no response body found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/info?" + 
                    "field=_EM_6138_XYZ_&" + 
                    "value=tt572mgC1TO2V")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/79efFWcIcz4YB/settings")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/null/group")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
        location_type = "/api/sessions/null/group" + "/" + res_3.extract().body().path("id").toString();
        
        // Fault100. HTTP Status 500. org/cbioportal/session_service/domain/Session_74_setData PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"{}\" ")
                .put(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/NumberInt/group/HexData"))
                .then()
                .statusCode(500)// org/cbioportal/session_service/domain/Session_74_setData
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/null/group/67b25b8ffd1c7613a1fecdf5"));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/Timestamp/EVOMASTER/DBPointer"))
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * 1 - (200) GET:/api/sessions/{source}/{type}/query
    * 2 - (200) GET:/info
    * 3 - (404) PUT:/api/sessions/{source}/{type}/{id}
    * 4 - (200) POST:/api/sessions/{source}/{type}
    * 5 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * 6 - (200) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 5 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_69_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"32cd0973bfd1539d6ba1fe72\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8bcb7f1cc28b3a73f2bdcca1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"49f4b6cb9373778b832360f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1df62a052ce7fc020be3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fab7d1a1ce1c9f5d1af6784e\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"60d4d149baefb00d9954c7ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b6ddd1f588f4ae8af68a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10c107d9abba4ebb6bdfb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"20908aac53e59102cf9477ca\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f264bcc27f464dff9b71acdf\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        String location_type = "";
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_EU_U00UUXUUU/genomic_chart/query?" + 
                    "field=data&" + 
                    "value=2IUU8tUpcU_U")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/info -> GET on path '/info' defines a response schema but no response body found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/info?field=by")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"_EM_5004_XYZ_\" ")
                .put(baseUrlOfSut + "/api/sessions/B8s/custom_data/_EM_5003_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/B8s/custom_data/_EM_5003_XYZ_"));
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/ISODate/settings")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
        location_type = "/api/sessions/ISODate/settings" + "/" + res_3.extract().body().path("id").toString();
        
        // Fault100. HTTP Status 500. org/cbioportal/session_service/domain/Session_74_setData PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"main_session\" ")
                .put(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/main_session/custom_gene_list/HexData"))
                .then()
                .statusCode(500)// org/cbioportal/session_service/domain/Session_74_setData
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/ISODate/settings/67b25b8cfd1c7613a1fecddf"));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/main_session/main_session/main_session"))
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/api/sessions/{source}/{type}/query/fetch
    * 2 - (200) GET:/info
    * 3 - (200) GET:/api/sessions/{source}/{type}/query
    * 4 - (400) GET:/api/sessions/{source}/{type}/{id}
    * 5 - (200) POST:/api/sessions/{source}/{type}
    * 6 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * 7 - (200) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 6 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_70_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"32cd0973bfd1539d6ba1fe72\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8acb701bc28a3b73f3aebdb1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"3803a7db9482687b95345fea\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1df62a052ce7fc020be3ea\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"ecb6d0a2ce2ca13d2b078840\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"60c4c03acaf0a00e9955c7ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b7ede0f688f4ae7ae59b7db\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10c106d9abba4ebb6bdfb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"20a089bc42e58011cf8478ca\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f2749ac280664dff8c81adde\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"dbe7aee76afb6f79db65bc7e\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"a67d66ff53b69c343ac03b7c\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"ee3dd2cf9e46ea9fd1a0b00f\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"7619c03f925cccb4e9cd6646\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"c959fcdd7ae2feb69e33d42b\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"f4eecfec58aeaaae8d235ee4\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        String location_type = "";
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"6V\" ")
                .post(baseUrlOfSut + "/api/sessions/__jNOXUAZe%60F1/custom_gene_list/query/fetch")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/__jNOXUAZe%60F1/custom_gene_list/query/fetch"));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/info -> GET on path '/info' defines a response schema but no response body found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/info?" + 
                    "EMextraParam123=_EM_610_XYZ_&" + 
                    "field=_EM_5615_XYZ_&" + 
                    "value=_EM_5616_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/%5EUMU45U9_XYUUC/main_session/query?" + 
                    "field=source&" + 
                    "value=&" + 
                    "EMextraParam123=_EM_98_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/sessions/3l/EVOMASTER/query?EMextraParam123=42")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/3l/EVOMASTER/query"));
        
        ValidatableResponse res_4 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/NumberInt/group")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
        location_type = "/api/sessions/NumberInt/group" + "/" + res_4.extract().body().path("id").toString();
        
        // Fault100. HTTP Status 500. org/cbioportal/session_service/domain/Session_74_setData PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" \"gUorU\" ")
                .put(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/ObjectId/custom_data/Infinity"))
                .then()
                .statusCode(500)// org/cbioportal/session_service/domain/Session_74_setData
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/NumberInt/group/67b25b89fd1c7613a1fecdc2"));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/DBPointer/main_session/%7B%7D?EMextraParam123=42"))
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/api/sessions/{source}/{type}/query/fetch
    * 2 - (200) GET:/info
    * 3 - (200) GET:/api/sessions/{source}/{type}/query
    * 4 - (404) GET:/api/sessions/{source}/{type}/{id}
    * 5 - (200) POST:/api/sessions/{source}/{type}
    * 6 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * 7 - (200) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 6 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_71_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"24cf1a82bed2529e5ab10e82\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8bcb6f1cc28b3a73f2becc91\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4803a5ca9483787c84346ffa\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"7b1ff749151dd70c130ad3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"ecb6d0a2ce2ca13d1b078840\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"70d4c02bcaffb10e8945c6ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"2b5edd1078804ae9b048a6bd\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"c92fb0f6e8aaab4ebb6bd0b5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"10bf78bb42e5a211cf8487ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f374acb270464d0eac8fcce0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"da0790d56afb6079dc64cc7e\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"a67d66ef53b69c343ac03b7b\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"ed4dd0f08f25ea8fc1a0bf0d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"7619c03f925cdcb4e9cd6646\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"7b6697982b3c61a3c5c884ac\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"0518dc0efd6c83861f916ef6\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        String location_type = "";
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" \"3S\" ")
                .post(baseUrlOfSut + "/api/sessions/2UjNRX%60KAOWUU/genomic_chart/query/fetch?EMextraParam123=_EM_93_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/2UjNRX%60KAOWUU/genomic_chart/query/fetch"));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/info -> GET on path '/info' defines a response schema but no response body found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/info?" + 
                    "EMextraParam123=_EM_610_XYZ_&" + 
                    "field=by&" + 
                    "value=tt572mgC1TO2V")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_99_XYZ_")
                .get(baseUrlOfSut + "/api/sessions/_EM_5500_XYZ_F/custom_data/query?" + 
                    "field=zzKc&" + 
                    "value=&" + 
                    "EMextraParam123=_EM_98_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/sessions/_EM_5499_XYZ_1Z/main_session/XeT0EJeaRbAP?EMextraParam123=42")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/_EM_5499_XYZ_1Z/main_session/XeT0EJeaRbAP"));
        
        ValidatableResponse res_4 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/custom_gene_list/custom_data")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
        location_type = "/api/sessions/custom_gene_list/custom_data" + "/" + res_4.extract().body().path("id").toString();
        
        // Fault100. HTTP Status 500. org/cbioportal/session_service/domain/Session_74_setData PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"custom_gene_list\" ")
                .put(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/%7B%7D/main_session/%7B%7D?EMextraParam123=42"))
                .then()
                .statusCode(500)// org/cbioportal/session_service/domain/Session_74_setData
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/custom_gene_list/custom_data/67b25b8dfd1c7613a1fecde0"));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/NaN/custom_gene_list/false?EMextraParam123=42"))
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/api/sessions/{source}/{type}/query/fetch
    * 2 - (200) GET:/info
    * 3 - (200) GET:/api/sessions/{source}/{type}/query
    * 4 - (400) GET:/api/sessions/{source}/{type}/{id}
    * 5 - (200) POST:/api/sessions/{source}/{type}
    * 6 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * 7 - (200) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 6 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_72_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"33ce0a72bfd1639d5ba1ff72\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8bcb6f2cc28b3a73f2becc91\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4813a5bb8383787d74256ffa\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1df62a052ce7fc020be3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"ecb6d0a2ce2ca13d1b078840\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"70d4c02bcaf0b10e8945c6ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"1b5dee2f68805ae8bf58a6cc\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10c106d9abba4ebb6bdfb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"11ce78bb32e5a101de8488ca\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f374acb270464d0eac8fcce0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"ca17afd56aec6078ec65cc7e\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"a67d66ef53b69c343ac03b7b\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"ed3dd0e09e36ea80b090b01e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"7619c03f925cdcb4e9cd6646\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"7b6697982b3c60a3c5c884ac\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"0518dc1efd6b83961f916ef6\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        String location_type = "";
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"39\" ")
                .post(baseUrlOfSut + "/api/sessions/UQjNRXpGUUge%5D/genomic_chart/query/fetch?EMextraParam123=_EM_93_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/UQjNRXpGUUge%5D/genomic_chart/query/fetch"));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/info -> GET on path '/info' defines a response schema but no response body found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/info?" + 
                    "field=by&" + 
                    "value=_EM_5510_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_99_XYZ_")
                .get(baseUrlOfSut + "/api/sessions/_EM_5500_XYZ_/custom_data/query?" + 
                    "field=id&" + 
                    "value=&" + 
                    "EMextraParam123=_EM_98_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/%60MM_UDUU_UUU_1/custom_gene_list/query?EMextraParam123=42")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/%60MM_UDUU_UUU_1/custom_gene_list/query"));
        
        ValidatableResponse res_4 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/custom_gene_list/custom_gene_list")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
        location_type = "/api/sessions/custom_gene_list/custom_gene_list" + "/" + res_4.extract().body().path("id").toString();
        
        // Fault100. HTTP Status 500. org/cbioportal/session_service/domain/Session_74_setData PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"custom_gene_list\" ")
                .put(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/ObjectId/custom_data/HexData"))
                .then()
                .statusCode(500)// org/cbioportal/session_service/domain/Session_74_setData
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/custom_gene_list/custom_gene_list/67b25b8dfd1c7613a1fecde2"));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/NumberDecimal/comparison_session/false?EMextraParam123=42"))
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/api/sessions/{source}/{type}/query/fetch
    * 2 - (200) GET:/info
    * 3 - (200) GET:/api/sessions/{source}/{type}/query
    * 4 - (404) GET:/api/sessions/{source}/{type}/{id}
    * 5 - (200) POST:/api/sessions/{source}/{type}
    * 6 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * 7 - (200) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 6 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_73_deleteOnSessionShowsFaults_100_200() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"33ccfa63cfc154ad7cb1ee71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8bcb7f2cc28b3a74f2becca1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"49f4b6cb9473778b832360f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"5b2e061a152cf70d01fbe3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"eca6d0a2ce2c913d1b078740\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"60c4c03acaf0b00e9954c7ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0a6dde10698f3bf7af68b6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10c106d9abba4ebb6bdfb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"2fb099ab42d48020cf9577ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f174abb361475d00ab72bddf\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"cce7add76bec6068db76bc7e\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"976e650f43b78d334ab03a7b\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"c6934c88c7a60c652005ad2f\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"732d032bc8593a36bafe8cd0\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        String location_type = "";
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" \"42\" ")
                .post(baseUrlOfSut + "/api/sessions/_EM_5503_XYZ_/custom_gene_list/query/fetch?EMextraParam123=_EM_93_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/_EM_5503_XYZ_/custom_gene_list/query/fetch"));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/info -> GET on path '/info' defines a response schema but no response body found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/info")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/%5EUMU45E9_XYUU/comparison_session/query?" + 
                    "field=zzKc&" + 
                    "value=")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/Elx/main_session/_EM_5504_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/Elx/main_session/_EM_5504_XYZ_"));
        
        ValidatableResponse res_4 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/Timestamp/main_session")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
        location_type = "/api/sessions/Timestamp/main_session" + "/" + res_4.extract().body().path("id").toString();
        
        // Fault100. HTTP Status 500. org/cbioportal/session_service/domain/Session_74_setData PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" \"{}\" ")
                .put(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/NumberLong/genomic_chart/genomic_chart?EMextraParam123=42"))
                .then()
                .statusCode(500)// org/cbioportal/session_service/domain/Session_74_setData
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/Timestamp/main_session/67b25b8afd1c7613a1fecdca"));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_type, baseUrlOfSut + "/api/sessions/genomic_chart/settings/Timestamp?EMextraParam123=42"))
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/sessions/{source}/{type}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_74_getOnSessionReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/sessions/Z7Xd9_9E1uF/settings")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/sessions/{source}/{type}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_75_getOnSessionReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/s1oPp9CuO6A/custom_gene_list")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/sessions/{source}/{type}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_76_getOnSessionReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/sessions/_EM_356_XYZ_/group")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/sessions/{source}/{type}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_77_getOnSessionReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/jY_KNLgcjTEN/virtual_study")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/sessions/{source}/{type}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_78_getOnSessionReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/8SlEInEex/comparison_session")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/sessions/{source}/{type}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_79_getOnSessionReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/sessions/pta2rvjDV/main_session")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/sessions/{source}/{type}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_80_getOnSessionReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_EM_53_XYZ_/custom_data?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/sessions/{source}/{type}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_81_getOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"ccdc48eb108d185b0e3edf31\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"2828d6092c9fe14049672715\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_EM_113_XYZ_/genomic_chart?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/info
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_82_getOnInfoReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/info -> GET on path '/info' defines a response schema but no response body found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/info?" + 
                    "EMextraParam123=_EM_610_XYZ_&" + 
                    "field=_EM_662_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (200) GET:/info
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_83_getOnInfoReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/info -> GET on path '/info' defines a response schema but no response body found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/info?" + 
                    "EMextraParam123=_EM_664_XYZ_&" + 
                    "value=_EM_665_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/sessions/{source}/{type}/query
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_84_getOnQueryReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_EM_18_XYZ_/custom_data/query?" + 
                    "field=_EM_19_XYZ_&" + 
                    "value=bUsrXr2x4f5ke&" + 
                    "EMextraParam123=_EM_20_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/sessions/{source}/{type}/query
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_85_getOnQueryReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"4e9db6d1d73cde59706110f4\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fdb9d6e9cc7798ef95f4c01c\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/@q_w/group/query?" + 
                    "field=9uMfGIEX5jnSmL&" + 
                    "value=9xd&" + 
                    "EMextraParam123=_EM_819_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/sessions/{source}/{type}/query
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_86_getOnQueryReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"ab40d7c8669dbeeec2f87fde\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"c6bcacc6a6dddb0e48cde7d2\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_1523_XYZ_")
                .get(baseUrlOfSut + "/api/sessions/zVkLumypv/settings/query?" + 
                    "field=type&" + 
                    "value=b&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/sessions/{source}/{type}/query
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_87_getOnQueryReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_2_XYZ_")
                .get(baseUrlOfSut + "/api/sessions/SbP7/comparison_session/query?" + 
                    "field=_EM_0_XYZ_&" + 
                    "value=_EM_1_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/sessions/{source}/{type}/query
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_88_getOnQueryReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"ff8c9a9ba8fc327beeb790fe\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"13ca9b11f908febff3b6c684\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/8/group/query?" + 
                    "field=_EM_2116_XYZ_&" + 
                    "value=&" + 
                    "EMextraParam123=_EM_2118_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/sessions/{source}/{type}/query
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_89_getOnQueryReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"31cc0a63afc0628d6aa1ff72\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8bcb7f1cc28b3a73f2becca1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"39f4a6dc8272878c832460e8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1df62a053ce7fc020be3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"f9b6d0b2de2c8f6e0a06783e\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"71d4d149baefb00d9954c7ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"fb7dec2e487f3be7af69a6db\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10c107d9abba4ebb6bdfb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"1fa089bc42d59111cf9477ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f264bcc27f463dff9b71acdf\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"cdce3cff41f5c9923cdf20f9\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"00c4b851eecdc7b479b47211\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"a4788546eeb5e936db3d34ef\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"876e0e1a257980cf9e959854\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/oWZxa6jC6fis/group/query?" + 
                    "field=data&" + 
                    "value=")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/sessions/{source}/{type}/query
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_90_getOnQueryReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"22bd0874cfe241bd6bc1ff72\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"7abb7f1cc19b3a72f2aebcb1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"49f4b6cba373777b832360f8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6a2ed43a053cf80b021ce3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fa97f291ce1bb04e2bf6893f\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"70d4e259caefaf0c9a54c7bb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b6ddd1f588f4ae8af68a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"c911c127d99bad5d9a6bbfb4\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"1f9089ac53d59211b0a467ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f264bcc27f463df09b71acdf\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"0cec9ce120bda3ec2d8ada1a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"e2cad9e14badac988ef82e5d\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"ccf17ab375adf0137b5db709\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"328d6b541780b0ff1cbc40e3\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_EM_5002_XYZ_/main_session/query?" + 
                    "field=data&" + 
                    "value=2IUU8tUpcU_U")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/sessions/{source}/{type}/query
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_91_getOnQueryReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"41de1873bec0538d6bb20063\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"9bba7f2dd28b3a74f2aecba1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383679a82127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63a052ce8fcf1fcf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fcb6d1a3ce2dbf3e3a188751\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61c3d159cbd1bf0ca854a7aa\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_EM_315_XYZ_/main_session/query?" + 
                    "field=zzKc&" + 
                    "value=2IFL8tepck_Ld")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/sessions/{source}/{type}/query
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_92_getOnQueryReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"62dd1864bfd1638e6cb21e82\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"ab9a7e1ee3894974f4bfcab3\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383668a82127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63a052ce8ecf1fcf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fcb6d1a3ce2dbf3e3a178751\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"60e4df69bae0b1fc8853a7ba\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_EM_315_XYZ_/virtual_study/query?" + 
                    "field=zzKc&" + 
                    "value=2IFL8tepckWL&" + 
                    "EMextraParam123=_EM_98_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/sessions/{source}/{type}/query
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_93_getOnQueryReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"32cd0973bfd1539d6ba1fe72\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"abba6f2cd29b4965e2bfbca1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"39f3c5cba473678c72337f0a\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1df62a052ce7fc020be3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fcb5d1b3be2cae2d3a188640\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"60d4d058bae0b00c9953b7aa\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"1b6dcb2f389f3af8cf5896bc\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ba20b107d99bba4dac6aefa5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"fb564e33119555a08716ff2e\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"b3f17203adc8e2feb274dfdd\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_99_XYZ_")
                .get(baseUrlOfSut + "/api/sessions/I4P0FLXroA5/custom_data/query?" + 
                    "field=zzKc&" + 
                    "value=2IFL8tUpck_L")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/sessions/{source}/{type}/query
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_94_getOnQueryReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"32cd0973bfd1539d5ba1fe72\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"7bcb7f1cc28b3a73f2becca1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"39f4b6cb9373778b832360f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1df62a052ce7fc020be3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"eaa7d2a0ce1b9f5e2bf6684e\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4d149baefb00d9954c7ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0c6cde0f589e4ae7bf59a5ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"c911c007c99bbb5dab6bcfb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"0fa099bb32e59111ce9378ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f264bcc27f463dff9b71acdf\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"d54d2e6a5fade757c9459f04\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"96ee55952564622ec57d5aea\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_EM_5002_XYZ_/custom_gene_list/query?" + 
                    "field=zzKc&" + 
                    "value=2IUU8tUpcU_U")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/sessions/{source}/{type}/query
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_95_getOnQueryReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"dd35ca49b22de4ac99b1cbd0\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"dea9da5456516b778bf8764e\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_EM_4507_XYZ_/settings/query?" + 
                    "field=u4yCRxb&" + 
                    "value=&" + 
                    "EMextraParam123=_EM_3713_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/sessions/{source}/{type}/query
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_96_getOnQueryReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"befc4e9cdd65ab3604b041e0\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"d0ef4c3e2b37b13c3781719e\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_EM_1131_XYZ_/genomic_chart/query?" + 
                    "field=_EM_1132_XYZ_&" + 
                    "value=_EM_1133_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/sessions/{source}/{type}/query
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_97_getOnQueryReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"21ce0982adb1728d6ca3ff72\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"9bba7f2dd28b3a74f2becba1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383678a82127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63a052ce8fcf1fcf3e8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/A/group/query?" + 
                    "field=zzKc&" + 
                    "value=_EM_97_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/sessions/{source}/{type}/query
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_98_getOnQueryReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_1057_XYZ_")
                .get(baseUrlOfSut + "/api/sessions/sGGsqPB0Krg/settings/query?" + 
                    "field=_EM_1055_XYZ_&" + 
                    "value=_EM_1056_XYZ_&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/sessions/{source}/{type}/query
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_99_getOnQueryReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_EM_7426_XYZ_/virtual_study/query?" + 
                    "field=_EM_7427_XYZ_&" + 
                    "value=_EM_7428_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/sessions/{source}/{type}/query
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_100_getOnQueryReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"41de0973bec1639d6ba20f73\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"9bba7f2dd28b3a74f2becba1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"5a14b5c98394578a81128e08\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63a052ce8fdf1fcf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fcb6d1a3ce2dbf3e3a188751\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"62e3e05acbf0cf0b9843b6a9\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_99_XYZ_")
                .get(baseUrlOfSut + "/api/sessions/_EM_315_XYZ_G/virtual_study/query?" + 
                    "field=class&" + 
                    "value=&" + 
                    "EMextraParam123=_EM_98_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/sessions/{source}/{type}/query
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_101_getOnQueryReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"12bd0973bdc1549e5d820e62\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"abb9601ed28b2b65f3aebaa1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"38f4c5bc8473587a921261f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1cf62b051dd6fc011af2e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fcb6d1b3ce2dbf3e3a188751\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"51c5df58baf0a00b8a53b899\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"1b7edc2f489f5be8af68a5ba\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10d106d99bba4ebb6bdfb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"3c005fb8f7adfe7d6a0f0bee\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"bf8abd0b1a9822b8d6ce21c7\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/UUM_155=UUYZb/comparison_session/query?" + 
                    "field=_EM_96_XYZ_&" + 
                    "value=")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/sessions/{source}/{type}/query
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_102_getOnQueryReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"32cd0973bfd1539d6ba1fe72\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8acb701bc28a3b73f3aebdb1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"3803a7db9482687b95345fea\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1df62a052ce7fc020be3ea\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"ecb6d0a2ce2ca13d2b078840\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"60c4c03acaf0a00e9955c7ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b7ede0f688f4ae7ae59b7db\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10c106d9abba4ebb6bdfb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"20a089bc42e58011cf8478ca\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f2749ac280664dff8c81adde\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"dbe7aee76afb6f79db65bc7e\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"a67d66ff53b69c343ac03b7c\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"ee3dd2cf9e46ea9fd1a0b00f\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"7619c03f925cccb4e9cd6646\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"c959fcdd7ae2feb69e33d42b\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"f4eecfec58aeaaae8d235ee4\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/%5EUMU45U9_XYUUC/main_session/query?" + 
                    "field=source&" + 
                    "value=&" + 
                    "EMextraParam123=_EM_98_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/sessions/{source}/{type}/query
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_103_getOnQueryReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"63cef872bdc1628d6ba1ffa1\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"acaa7f1ee27a3a72f2b1ca94\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04a5ca8383668a82127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63af52ce8fcf1fcf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"ecc7d1a3ce2fbe3d2a088650\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4d059bae1b00c9953b7aa\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"a1e92de539aeff1e4e436df9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"2be5c8c9bbaee587edd7dd89\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"5d122a95fcfe12671a417c20\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"6abc71fd3c5f0f9a58853d19\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"b55fb50d6c27aea1b7949cd4\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"5900f50af694cc91608f412b\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_EM_5914_XYZ_/group/query?" + 
                    "field=checksum&" + 
                    "value=")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (400) GET:/api/sessions/{source}/{type}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_104_getOnSessionReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/sessions/_EM_251_XYZ_/EVOMASTER?EMextraParam123=_EM_252_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/_EM_251_XYZ_/EVOMASTER"));
    }
    
    
    /**
    * Calls:
    * (400) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_105_deleteOnSessionReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 400 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/%5C/main_session/O4xkhO18g9SzRgF")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("text/html");
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/sessions/{source}/{type}/query/fetch
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_106_postOnFetchReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"_EM_8_XYZ_\" ")
                .post(baseUrlOfSut + "/api/sessions/dxtuwLBLrs/main_session/query/fetch?EMextraParam123=42")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/dxtuwLBLrs/main_session/query/fetch"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/sessions/{source}/{type}/query/fetch
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_107_postOnFetchReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"32cd0973bfd1539d6ba1fe72\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"9bba7f2dd39b3a74f2becba1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"49f4b6cb9473778b832360f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1df62a052ce7fc020be3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fba6d0a2ce2db04d2a177740\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4d149baefb00d9954c7ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b6ddc2f489f39e8b068a6bb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca0fb107d9baca4ecb6adfb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"2fa089bc42c59111cf9477ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f264abb370564dff9c80bdd0\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"U\" ")
                .post(baseUrlOfSut + "/api/sessions/g%5CjNOXUAUUUU1/custom_data/query/fetch?EMextraParam123=_EM_93_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("text/html");
    }
    
    
    /**
    * Calls:
    * (400) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_108_deleteOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"22bd0864bfd152ad6bb1ff71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"7abb7f1cc19b3a72f2aebcb2\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"49f4c6cb9373787b832360f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6a2ed43a053cf80b011ce3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"eaa7d2a0ce1b9f5e2bf6684e\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"6fc5e26bcad09ffdaa52c7bc\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"1b6ddd1f588f4ae8af68a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10c128d99bbc5d9a6bbfc4\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"1f9089ac52d59211b0a457ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f264bcc27f463df09b71acdf\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"0eebabd11faeb3ec2e99da1b\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"e1daead14badbc997ef92e5d\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"87d8fb4ab4a832cf707bdbba\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"cdea4697e3da201435faa8c2\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 400 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/MaxKey/EVOMASTER/EVOMASTER")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/MaxKey/EVOMASTER/EVOMASTER"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_109_getOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"eef6993f7378174beba284ae\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"a2f777d3ab944a80ec2ea14b\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> Response status 400 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_585_XYZ_")
                .get(baseUrlOfSut + "/api/sessions/_EM_584_XYZ_/custom_gene_list/A%5CvVoeXU?field=_EM_1307_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("text/html");
    }
    
    
    /**
    * Calls:
    * (400) GET:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_110_getOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"42fd0853aed0436e7ca23e71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbaa6e2de3895964d4bedab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca848366aa801370f8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63b052ce8ecf1fcf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1a3be3dbf3d29278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede335ec3db04e87f8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cc5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1badeacebe05464aeaf5fa61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5ccc8e6ff7fe7c6055c9f\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> Response status 400 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/sessions/ypl/EVOMASTER/Lv_wT85Ehl?EMextraParam123=42")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/ypl/EVOMASTER/Lv_wT85Ehl"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/sessions/{source}/{type}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_111_postOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"43cc0a74b0c2539c7c92ee82\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"7acc702dc1aa3a74f3cdcca1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4af4b6cb9464767c74326f0a\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1cf72a151df7ec030be3ea\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fbb6d1a2ce2da04d2a07884f\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4d149baefb00d9954c7ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b6ddc1f588f4ae8af68a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10c105d9abba4ebb6bdfb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"2eb078bb42d4a121b09378ca\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"03539ba270554cf08c7fceef\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"a1c6cbfbefc0695eca611b68\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"70ccfe0b0b165fa738dda54b\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/Date/EVOMASTER")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/Date/EVOMASTER"));
    }
    
    
    /**
    * Calls:
    * (400) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_112_deleteOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"42ed1963acbf647e7b911d8f\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bb8a8e2cf3996a74c4cefab3\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca838366aa81127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"8d1bf65b054bf8dbf00cf3f7\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fcb6e1a3ce3ebf3d29287760\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"2e9dde325ed4eaf4d88e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cd5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1b9ddafdbd04353ae9e6ea61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5ccc8e6ff7fe7b6045c9f\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"2c3856d26a30cab2c312dfda\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"b39e9b74dba1febabbd41a1b\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 400 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/genomic_chart/EVOMASTER/NumberInt")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/genomic_chart/EVOMASTER/NumberInt"));
    }
    
    
    /**
    * Calls:
    * (400) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_113_deleteOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"51fdf863ade1425d6ca33d71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbab6f3ce2796964e4cedaa3\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383669a81127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63b052ce8ecf1fcf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1a3be3dbf3d29278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc887397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cc5c4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1badeacebe05464aea05fa61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e5e6ccc8e7fe80d7c7143c8e\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 400 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/false/EVOMASTER/NaN")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/false/EVOMASTER/NaN"));
    }
    
    
    /**
    * Calls:
    * (400) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_114_deleteOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"21be0965cfd243ad6bb0ff72\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"7abb7f1cc19b3a72f2aebcb1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"49f4b6cb9373777b832360f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6a2ed43a053cf80b021ce3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"eaa7d2a0ce1b9f5e2bf6684e\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"70d4e259caefaf0c9a54c7bb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b6ddd1f588f4ae8af68a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"c911c127d99bac5d9a6bbfb4\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"1f9089ac52d59211b0a467ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f264bcc27f463df09b71acdf\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"0debabd11faeb2ec2e99da1b\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"e1dadad14b9dac997d092d6d\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"49b1d564c69eeea0e3ebdf92\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"4cd3cf11560feba07a2e8c90\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 400 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/Timestamp/EVOMASTER/DBPointer")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/Timestamp/EVOMASTER/DBPointer"));
    }
    
    
    /**
    * Calls:
    * (400) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_115_deleteOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"42ec1865adc0446d8c923d81\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bb9a6f2cf2996964d4beeab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca9383669a81127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"5bfd063b152cd8dc01fdf3e7\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1a3be3dbf3d29278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3daede414ee4eb04d68f8226\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdabbe0cd3cc5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1bade9cfbe05564aeaf50b61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc8e6ff7fe7c6055c9f\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 400 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/UUID/EVOMASTER/NumberLong")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/UUID/EVOMASTER/NumberLong"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/sessions/{source}/{type}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_116_postOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"51fdf863ade1425d6ca33d71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbab6f3ce2796964e4cedaa3\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383669a81127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63b052ce8ecf1fcf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1a3be3dbf3d29278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cc5c4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1badeacebe05464aea05fa61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e6d6cdc8e6ff80e7c7154c9e\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/custom_%5Cata/virtual_study")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("text/html");
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/sessions/{source}/{type}/query/fetch
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_117_postOnFetchReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"x\" ")
                .post(baseUrlOfSut + "/api/sessions/3esTY6hlDOOczf/virtual_study/query/fetch?" + 
                    "field=LD6VqTlNbl&" + 
                    "value=x")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/3esTY6hlDOOczf/virtual_study/query/fetch"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/sessions/{source}/{type}/query/fetch
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_118_postOnFetchReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"K[W\" ")
                .post(baseUrlOfSut + "/api/sessions/%3F5B4/genomic_chart/query/fetch?" + 
                    "field=Luo72R2dZ&" + 
                    "value=fEO_9520_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/%3F5B4/genomic_chart/query/fetch"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/sessions/{source}/{type}/query/fetch
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_119_postOnFetchReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"X\" ")
                .post(baseUrlOfSut + "/api/sessions/dS/group/query/fetch?" + 
                    "field=RSbgI&" + 
                    "value=X")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/dS/group/query/fetch"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/sessions/{source}/{type}/query/fetch
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_120_postOnQueryFetchWithQueryParamsEmptyValueReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" \"\" ")
                .post(baseUrlOfSut + "/api/sessions/_EM_1053_XYZ_/custom_gene_list/query/fetch?" + 
                    "EMextraParam123=_EM_130_XYZ_&" + 
                    "value=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/_EM_1053_XYZ_/custom_gene_list/query/fetch"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/sessions/{source}/{type}/query/fetch
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_121_postOnFetchReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"nmx0M5gwaG4\" ")
                .post(baseUrlOfSut + "/api/sessions/WAvLjK/custom_gene_list/query/fetch?field=_EM_7432_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/WAvLjK/custom_gene_list/query/fetch"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/sessions/{source}/{type}/query/fetch
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_122_postOnFetchReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"_EM_14942_XYZ_\" ")
                .post(baseUrlOfSut + "/api/sessions/_EM_24%3C41_XYZ_/custom_data/query/fetch?" + 
                    "field=_EM_9519_XYZ_&" + 
                    "value=_EM_9520_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/_EM_24%3C41_XYZ_/custom_data/query/fetch"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_123_getOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"3bb8b0e07f24ff78d83ef46b\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"da70d50fc22a453584b53cf5\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_3065_XYZ_")
                .get(baseUrlOfSut + "/api/sessions/fQAd7/settings/query?field=eGibI1R1A")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/fQAd7/settings/query"));
    }
    
    
    /**
    * Calls:
    * (400) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_124_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"33befb72bee1749c5a91ff81\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"9cbb6f2cc28a396301becc91\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"5812a4cc7393897e74266ffa\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1df62a052ce7fc020be3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"ecb6d0a2ce2ca13d1b078840\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"70d4c02bcaf0b10e8945c6ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"1b5dee2f68805ae8bf58a6cc\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10c106d9abba4ebb6bdfc5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"21cd69bc42e6a0f0ce7387ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f4839ca270564efebd70ddd0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"ca17afd56aec6078ec65cc7e\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"a67d66ef53b69c343ac03b7b\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"ed3ed0e09e36ea80b090b01e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"7619c02f925cdcb4e9cd6646\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"7b6697982b3c60a3c5c884ac\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"0417cd1eec6b82961e915ff6\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 400 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"{}\" ")
                .put(baseUrlOfSut + "/api/sessions/new/EVOMASTER/%7B%7D")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/new/EVOMASTER/%7B%7D"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_125_getOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"3bc7bfe17f24ee88d94e046a\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"da70d50fc22a463584b53cf5\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_EM_11194_XYZ_/settings/query?field=eGibIAR3AD")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/_EM_11194_XYZ_/settings/query"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_126_getOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"3cc7bfe07f24ee88d95e046a\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"da70d500c22a463584b53cf5\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/WIBlZC0p_Z/virtual_study/query?field=eGibIAR1ADu")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/WIBlZC0p_Z/virtual_study/query"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/api/sessions/{source}/{type}/query
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_127_getOnQueryReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"43cc0a74b0c2539c7c92ee82\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"7acc702dc1aa3a74f3cdcca1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4af4b6cb9464767c74326f0a\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1cf72a151df7ec030be3ea\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fbb6d1a2ce2da04d2a07884f\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4d149baefb00d9954c7ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b6ddc1f588f4ae8af68a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10c105d9abba4ebb6bdfb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"2eb078bb42d4a121b09378ca\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"03539ba270554cf08c7fceef\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"a1c6cbfbefc0695eca611b68\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"70ccfe0b0b165fa738dda54b\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/%5EUMU45U9_XYUU/EVOMASTER/query?" + 
                    "field=%24numberDecimal&" + 
                    "value=UIV%5D8UQpcQ_S&" + 
                    "EMextraParam123=_EM_98_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/%5EUMU45U9_XYUU/EVOMASTER/query"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/api/sessions/{source}/{type}/query
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_128_getOnQueryReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"b92d4dd9eb18d73811dcd9ca\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"d8cf18934bbe6c92cbb343b0\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/0rY7HbTSOeYFsOa/genomic_chart/query?" + 
                    "field=%24code&" + 
                    "value=_EM_1411_XYZ_&" + 
                    "EMextraParam123=_EM_1382_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/0rY7HbTSOeYFsOa/genomic_chart/query"));
    }
    
    
    /**
    * Calls:
    * (400) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_129_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"3be83f0258a9bb9d36a9a5e4\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"5f46af1d866c1f4cf9bf8b9a\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 400 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "dpn8oD")
                .contentType("application/json")
                .body(" \"XJBqyrWKIW\" ")
                .put(baseUrlOfSut + "/api/sessions/pzO76d%5CM_Tf0H4v0/group/1SaT?" + 
                    "EMextraParam123=42&" + 
                    "field=MwOJi3&" + 
                    "value=_EM_843_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("text/html");
    }
    
    
    /**
    * Calls:
    * (400) GET:/api/sessions/{source}/{type}/query
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_130_getOnQueryReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"32bd0a94cec1729d6c92ff62\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"9bba7f2dd28b3a64f2becba1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"49f4c6cb9473678b832360f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1df62a052ce7fc030be3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fcb6d1b3ce1dbf3e3a188751\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"50d6df68c8efa00b8a54c899\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0c5edd2f397059d89f79a5aa\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10c106d99bba4ebb6bdfc5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"3b0150b8f89cfe7e6a0f1aef\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"cfabbd1a1c99319ad6df13d7\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_EE_15%3F9_XYZb/virtual_study/query?" + 
                    "field=%24symbol&" + 
                    "value=2IFL8tUpckWL&" + 
                    "EMextraParam123=_EM_98_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/_EE_15%3F9_XYZb/virtual_study/query"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/api/sessions/{source}/{type}/query
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_131_getOnQueryReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"62cd1874afd0638d7db30e71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"9b9b6e1ff288586404b0caa4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383668a82127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0ce63af42ce9ece1fdf2e7\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fcb6d1a3ce2dbf3e3a178751\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"60e4df69bae0b1fc8853a7ba\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"b95aad7cdaed4e7a09247e02\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"b7a817aaa9f95ee828d3dd1c\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"6e336f43a0d7ab1dadac1ddf\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"df9cb772a9dc746eda2ec413\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_EM_315_XYZ_/custom_gene_list/query?" + 
                    "field=%24numberLong&" + 
                    "value=UIFUUtUpUjWL&" + 
                    "EMextraParam123=_EM_98_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/_EM_315_XYZ_/custom_gene_list/query"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/api/sessions/{source}/{type}/query
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_132_getOnQueryReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"62dd1864bfd1638e6cb21e82\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"ab9a7e1ee3894974f4bfcab3\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"3b04b6da9483769c92127fe7\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6bfce53af62be9ede10de2e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fcb5d2a3ce1cce2f4a167742\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"60e4df69bae0b1fc8853b7ba\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"b95aac7cdaed4e7a09247e02\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"b7a817aaa9f95ee828d3dd1c\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"2f615cff519ea0db3a661dcf\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"d98ed740efb4e84b3351dce1\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_EM_315_XYZ_/EVOMASTER/query?" + 
                    "field=%24timestamp&" + 
                    "value=UIFUUtUpUjWL4&" + 
                    "EMextraParam123=_EM_98_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/_EM_315_XYZ_/EVOMASTER/query"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/api/sessions/{source}/{type}/query
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_133_getOnQueryReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"22cd0973bfd1539d6ba1fe72\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8bcb7f2cd28b3a83f2becca1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"49f4b6cb9473778b842360f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1df62a052ce7fc020be3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"ecb6d0a2ce2c913d1b078740\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"60c4c03acaf0b00e9954c7ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0a6dde10698f3bf7af68a5cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca2fc116d9aaba4ecb6cdfb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"2fa089bc42d59111cf9478ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f274abb370564dff9c80bddf\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"dbe7bdd67afb5e7ada66bc6f\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"976e650f43b78d334bb03a8b\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"c6934c88c7a60c652005ad2f\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"732d032bc8593a36bafe8cd0\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/%5EUMU45U9_%5CYUU/EVOMASTER/query?" + 
                    "field=%24options&" + 
                    "value=&" + 
                    "EMextraParam123=_EM_98_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("text/html");
    }
    
    
    /**
    * Calls:
    * (400) GET:/api/sessions/{source}/{type}/query
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_134_getOnQueryReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"32cd0973bfd1539d6ba1fe72\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8bcb7f2dc28b3a73f2becca1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"49f4b6bb9473778b832360f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1df62b052ce7fc020be3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"ebc5d1a2de3b803c2b178841\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61b3cf3ac900b01f9a44d7ac\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b6ddd1f588f4ae8af68a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"da01d107e8bba94eab7bd0a5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"1fa199ab52c69102c09476a9\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f274abb370564dff9c80bddf\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"dbd69df66aeb7f79ea75bc8e\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"a67d66ff53b69c343ac03b7b\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"acdd0da8326db40a1ce9bbff\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"acabfb523fe1de67aaec53f0\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_99_XYZ_")
                .get(baseUrlOfSut + "/api/sessions/%5EUMW45U9_XYUU/comparison_session/query?" + 
                    "field=%24uuid&" + 
                    "value=2IUU8tUpcU_Uy&" + 
                    "EMextraParam123=_EM_98_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/%5EUMW45U9_XYUU/comparison_session/query"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/api/sessions/{source}/{type}/query
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_135_getOnQueryReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"62dd1964bfd1638e6cb21e82\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"ab9a7e1ee3894974f4bfcab3\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383668a82127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63a052ce8ecf1fcf3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fcb6d1a3ce2dbf3e3a178751\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"60f3ef49baefb00b8741a6ba\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"00eb67b38f3964fc36a2aadb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"f88efe8a94d0c81a965ffe51\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"e489dcfde6cceb31de499ef2\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"b8a8e8ca6f8d7fcb2b8cede3\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"5afb8a140f878d72ddf6fe6a\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"5aca8e3d1ef7426cf69daa22\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_99_XYZ_")
                .get(baseUrlOfSut + "/api/sessions/_EM_315_XYZ_/EVOMASTER/query?" + 
                    "field=_id&" + 
                    "value=2IFL8tepckWL&" + 
                    "EMextraParam123=_EM_98_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/_EM_315_XYZ_/EVOMASTER/query"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/api/sessions/{source}/{type}/query
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_136_getOnQueryReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"33ce0a72bfc1639d5ba1ff72\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"6baa5f2cb17b3974f2dedb80\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4813a5bb8383787d74256ffa\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1df62a052ce7fc020be3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"ecb6d0a2ce2ca13d1b078840\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"70d4c02bcaf0b10e8945c6ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"1c5eee20687049e8bf48a7cc\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10c106d9abba4ebb6bdfb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"10cd78bb42d5a001ce8579ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f364ada27f463d0ebd80dce0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"ca17afd56aec6078ec65cc7e\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"a67d66ef53b69c343ac03b6b\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"ed3dd0e09e36ea80b090b01e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"7619c03f925cdcb4e9cd6646\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"7b6697982b3c60a3c5c884ac\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"0518dc1efd6b83961f916ef6\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_EM_5500_XYZ_/custom_data/query?" + 
                    "field=%24date&" + 
                    "value=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/_EM_5500_XYZ_/custom_data/query"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/api/sessions/{source}/{type}/query
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_137_getOnQueryReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"52cd0873bec1628e6ba20f82\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"abaa7f2ee28a3a73f3bfcaa3\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a14b4c97473757983138ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63a052ce90d00fcf3d8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fcc7d194ce3ece4d2807765f\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4d059bae1b00c9a53b7aa\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"27951c77b53c3daec112510e\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"28dc8ef5d363a5bce4fec528\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/42/group/query?" + 
                    "field=%24minKey&" + 
                    "value=2IFL8tepckWL")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/42/group/query"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/api/sessions/{source}/{type}/query
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_138_getOnQueryReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"f0ede3da51b0b0bba7a20d85\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"9f0522daeaeffc7cedd549ef\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/sessions/_EM_2562_XYZ_/genomic_chart/query?" + 
                    "field=%24undefined&" + 
                    "value=_EM_2117_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/_EM_2562_XYZ_/genomic_chart/query"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/api/sessions/{source}/{type}/query
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_139_getOnQueryReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"62dd0765bfe0548d5cb21f81\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bb8b6f0ee488397503bfbab3\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b4cb9384679a93126fe8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b0de63a051be9ecf1edf2d7\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"ecb5d1b3ce2ebf2e4a078751\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"60e4df69bae0b1fc885397ba\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"b95aad7cdaed4e7a09257e02\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"b7b817ba99f85dfa17d2dd2b\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"fdcab40e9b65179ef9ad8aab\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"5c41bfec1f460f9e6c1b81dd\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_99_XYZ_")
                .get(baseUrlOfSut + "/api/sessions/_EM_5081_XYZ_/virtual_study/query?" + 
                    "field=%24numberInt&" + 
                    "value=&" + 
                    "EMextraParam123=_EM_98_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/_EM_5081_XYZ_/virtual_study/query"));
    }
    
    
    /**
    * Calls:
    * (400) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_140_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"42fd0853aed0436e7ca23e71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbaa6e2de3895964e4bedab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4b04b5ba8383669a81136008\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63b052ce8ecf1fcf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1a3be3dbf3d29278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"62d40e79dad0a20b986497da\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87d8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cc5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1badeacebe05464aeaf5fa61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc8e6ff7fe6c6055c9f\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 400 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"jrXoKHK\" ")
                .put(baseUrlOfSut + "/api/sessions/BUUuUU/EVOMASTER/1badeacebe05464aeaf5fa61")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/BUUuUU/EVOMASTER/1badeacebe05464aeaf5fa61"));
    }
    
    
    /**
    * Calls:
    * (404) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_141_deleteOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"52ed1854aed0527f7ca22e82\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbaa6e2de3895964e4bedab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383669a82127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63b052ce8ecf1fcf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1a3be3dbf3d29278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cc5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1badeacebe05464aeaf5fa61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc8e6ff7fe7c6f55c9f\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"0a82d70c74c4df832f81eafd\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"deb16e9df7ebecabe1d3881c\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 404 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/RegExp/custom_gene_list/true")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/RegExp/custom_gene_list/true"));
    }
    
    
    /**
    * Calls:
    * (404) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_142_deleteOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"32cd0973bfd1539d5ba1fe72\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"7bcb7f1cc28b3a73f2becca1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"39f4b6cb9373778b832360f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1df62a052ce7fc020be3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"eaa7d2a0ce1b9f5e2bf6684e\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4d149baefb00d9954c7ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0c6cde0f589e4ae7bf59a5ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"c911c007c99bbb5dab6bcfb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"0fa099bb32e59111ce9378ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f264bcc27f463dff9b71acdf\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"d54d2e6a5fade757c9459f04\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"96ee55952564622ec57d5aea\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 404 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/RegExp/virtual_study/BinData")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/RegExp/virtual_study/BinData"));
    }
    
    
    /**
    * Calls:
    * (404) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_143_deleteOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"22bd0864bfd152ad6bb1ff71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"7abb7f1cc19b3a72f2aebcb2\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"49f4c6cb9373777b832360f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6a2ed43a053cf80b011ce3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"eaa7d2a0ce1b9f5e2bf6684e\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"7fd5f25acaefaf0c9a53d7bb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"1b6ddd1f588f4ae8af68a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10c128d99bbc5d9a6bbfc4\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"1f9089ac52d59211b0a467ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f264bcc27f463df09b71acdf\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"0eebabd11faeb3ec2e99da1b\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"e1daead14badbc997ef92e5d\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"87d8fb4ab4a832cf707bdbba\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"cdea4697e3da200435faa8c2\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 404 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/UUID/virtual_study/Date")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/UUID/virtual_study/Date"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_144_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"984e028af0990a8ac309c49e\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"e6cd9de7a1de890fa81cef9b\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_364_XYZ_")
                .contentType("application/json")
                .body(" \"qfAsJDyB\" ")
                .put(baseUrlOfSut + "/api/sessions/_EM_362_XYZ_/group/_EM_363_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/_EM_362_XYZ_/group/_EM_363_XYZ_"));
    }
    
    
    /**
    * Calls:
    * (404) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_145_deleteOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"22bd0874cfe241bd6bc1ff72\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"7abb7f1cc19b3a72f2aebcb1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"49f4b6cba373777b832360f8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6a2ed43a053cf80b021ce3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fa97f291ce1bb04e2bf6893f\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"70d4e259caefaf0c9a54c7bb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b6ddd1f588f4ae8af68a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"c911c127d99bad5d9a6bbfb4\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"1f9089ac53d59211b0a467ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f264bcc27f463df09b71acdf\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"0cec9ce120bda3ec2d8ada1a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"e2cad9e14badac988ef82e5d\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"ccf17ab375adf0137b5db709\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"328d6b541780b0ff1cbc40e3\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 404 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/UUID/comparison_session/ObjectId")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/UUID/comparison_session/ObjectId"));
    }
    
    
    /**
    * Calls:
    * (404) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_146_deleteOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"42ec1864adc0446d8c923d81\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bb9a7f3cf3995964c4bef9b4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383669a81127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"7c1cf64b052cf8dbf0fb03e7\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1a3be3dbf3d29278760\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87f8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cc5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1b9ddaddbd04353ae9f6ea61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc8e6ff7fe7c6055c9f\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 404 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/true/settings/settings")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/true/settings/settings"));
    }
    
    
    /**
    * Calls:
    * (404) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_147_deleteOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"32cd0973bfd1539d6ba1fe72\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8acb701bc28a3b73f3aebdb1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"3803a7db9482687b95345fea\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1df62a052ce7fc020be3ea\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"ecb6d0a2ce2ca13d2b078840\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"60c4c03acaf0a00e9955c7ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b7ede0f688f4ae7ae59b7db\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10c106d9abba4ebb6bdfb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"20a089bc42e58011cf8478ca\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f2749ac280664dff8c81adde\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"dbe7aee76afb6f79db65bc7e\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"a67d66ff53b69c343ac03b7c\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"ee3dd2cf9e46ea9fd1a0b00f\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"7619c03f925cccb4e9cd6646\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"c959fcdd7ae2feb69e33d42b\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"f4eecfec58aeaaae8d235ee4\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 404 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/DBPointer/main_session/%7B%7D?EMextraParam123=42")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/DBPointer/main_session/%7B%7D"));
    }
    
    
    /**
    * Calls:
    * (404) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_148_deleteOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"33ccfa63cfc154ad7cb1ee71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8bcb7f2cc28b3a74f2becca1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"49f4b6cb9473778b832360f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"5b2e061a152cf70d01fbe3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"eca6d0a2ce2c913d1b078740\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"60c4c03acaf0b00e9954c7ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0a6dde10698f3bf7af68b6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10c106d9abba4ebb6bdfb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"2fb099ab42d48020cf9577ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f174abb361475d00ab72bddf\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"cce7add76bec6068db76bc7e\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"976e650f43b78d334ab03a7b\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"c6934c88c7a60c652005ad2f\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"732d032bc8593a36bafe8cd0\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 404 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/genomic_chart/settings/Timestamp?EMextraParam123=42")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/genomic_chart/settings/Timestamp"));
    }
    
    
    /**
    * Calls:
    * (404) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_149_deleteOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"51fdf863ade1425d6ca33d71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbaa6e2de3895964e4bedab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383669a81127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63b052ce8ecf1fcf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1a3be3dbf3d29278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cc5c4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1badeacebe05464aeaf5fa61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc8e6ff7fe7c6055c8f\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 404 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/UUID/genomic_chart/NaN")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/UUID/genomic_chart/NaN"));
    }
    
    
    /**
    * Calls:
    * (404) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_150_deleteOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"42fd0853aed0436e7ca23e71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbaa6e2de3895964e4bedab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383669a81127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63b052ce8ecf1fcf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1a3be3dbf3d29278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cc5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1badeacebe05464aeaf5fa61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc8e6ff7fe7c6055c9f\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 404 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/Infinity/main_session/%7B%7D")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/Infinity/main_session/%7B%7D"));
    }
    
    
    /**
    * Calls:
    * (404) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_151_deleteOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"24cf1a82bed2529e5ab10e82\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8bcb6f1cc28b3a73f2becc91\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4803a5ca9483787c84346ffa\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"7b1ff749151dd70c130ad3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"ecb6d0a2ce2ca13d1b078840\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"70d4c02bcaffb10e8945c6ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"2b5edd1078804ae9b048a6bd\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"c92fb0f6e8aaab4ebb6bd0b5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"10bf78bb42e5a211cf8487ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f374acb270464d0eac8fcce0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"da0790d56afb6079dc64cc7e\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"a67d66ef53b69c343ac03b7b\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"ed4dd0f08f25ea8fc1a0bf0d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"7619c03f925cdcb4e9cd6646\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"7b6697982b3c61a3c5c884ac\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"0518dc0efd6c83861f916ef6\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 404 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/NaN/custom_gene_list/false?EMextraParam123=42")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/NaN/custom_gene_list/false"));
    }
    
    
    /**
    * Calls:
    * (404) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_152_deleteOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"42fd0853aed0436e7ca23e71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbaa6e2de3895964e4bedab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383669a81127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63b052ce8ecf1fcf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1a3be3dbf3d29278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cc5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1badeacebe05464ae9f5fa61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc8e6ff7fe7c6055c9f\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 404 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/Timestamp/genomic_chart/UUID")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/Timestamp/genomic_chart/UUID"));
    }
    
    
    /**
    * Calls:
    * (404) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_153_deleteOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"33ce0a72bfd1639d5ba1ff72\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8bcb6f2cc28b3a73f2becc91\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4813a5bb8383787d74256ffa\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1df62a052ce7fc020be3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"ecb6d0a2ce2ca13d1b078840\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"70d4c02bcaf0b10e8945c6ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"1b5dee2f68805ae8bf58a6cc\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10c106d9abba4ebb6bdfb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"11ce78bb32e5a101de8488ca\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f374acb270464d0eac8fcce0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"ca17afd56aec6078ec65cc7e\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"a67d66ef53b69c343ac03b7b\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"ed3dd0e09e36ea80b090b01e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"7619c03f925cdcb4e9cd6646\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"7b6697982b3c60a3c5c884ac\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"0518dc1efd6b83961f916ef6\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 404 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/NumberDecimal/comparison_session/false?EMextraParam123=42")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/NumberDecimal/comparison_session/false"));
    }
    
    
    /**
    * Calls:
    * (404) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_154_deleteOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"42fd0853aed0436e7ca23e71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbaa6e2de3895964e4bedab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383669a81127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63b052ce8ecf1fcf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1a3be3dbf3d29278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d40e69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cc5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1badeacebe05464ae9f5fa61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc8e6ff7fe7c6055c9f\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 404 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/NumberInt/genomic_chart/UUID")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/NumberInt/genomic_chart/UUID"));
    }
    
    
    /**
    * Calls:
    * (404) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_155_deleteOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"22bc0754bfd162ae6bb1ff71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8bdb602cc27a3a63f2aecba0\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a05b6dba373877a932360fa\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6a2fe42b053cf90c011cd3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"eaa7d2a0ce1b9f5e2cf6684e\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"71d4e259caefaf0c9a54c7bb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b6ddd1f588f4ae8af68a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"d911df16c98bcb5cbc6bbfa6\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"1f9089ac52d59211b0a467ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f264bcc27f463df09b71abdf\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"0cecabe11fadc3fb1ea9d91a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"e1dbfad14badbc997ef92e5d\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 404 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/MinKey/virtual_study/null")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/MinKey/virtual_study/null"));
    }
    
    
    /**
    * Calls:
    * (404) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_156_deleteOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"22bd0864bfd152ad6bb1ff71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8bcb7f1cc28b3a73f2becca1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"49f4b6cb9374777b832360f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6a2ed43a053cf80b021ce3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"eaa7d2a0ce1b9f5e2bf6684e\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"70d4e259caefaf0c9954c7bb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b6ddd1f588f4ae8af68a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"c911c017c99bbb5dab6bcfb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"1f9089ac52d59212b0a467ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f264bcc27f463df09b71acdf\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"0cecabe11fadc3fb1ea9d91a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"e1dbead14badbc997ef92e5d\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 404 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/HexData/genomic_chart/genomic_chart")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/HexData/genomic_chart/genomic_chart"));
    }
    
    
    /**
    * Calls:
    * (404) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_157_deleteOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"12ce0864c0f242bd7bc1fe72\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"7abb7f1cc19b3a72f2aebcb1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"49f4b6cba373777b832360f8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6a2ed43a053cf80b021ce3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fa97f291cd1bb04e2bf6893f\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"70d4e259caefaf0c9a54c7bb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b6ddd1f588f4ae8af68a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"c911c127d99bad5d9a6bbfb4\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"2fa098ad42d4a221b0a558ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f264bcc27f463df09b71acdf\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"0cec9ce120bda3ec2d8ada1a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"e2cad9e14badac988ef82e5d\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"ccf17ab375adf0137b5db709\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"338d6b541780b0ff1cbc40e3\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e28adb234aa7ad8d221b7a9e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"7f15c1a0de1fbefde27a259e\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 404 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/false/comparison_session/RegExp")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/false/comparison_session/RegExp"));
    }
    
    
    /**
    * Calls:
    * (404) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_158_deleteOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"21bc0764bfe0639c6cb1ff71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8bcb7f1cc28b3a73f2becca1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"49f4b6cb9373777b832360f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6a2ed43a053cf80b021ce3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"eaa7d2a0ce1b9f5e2bf6684e\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"70d4e168baeeae1b9a54c8ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b6ddd1f588f4ae8af68a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca11c118b99abb5dbb6ccfc5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"1f9089ac52d59211b0a467ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f264bcd16f363e0f9b71add0\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"0cecabe11fadc3fb1ea9d91a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"e1dadae14badbdaa6efa2e6c\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 404 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/ISODate/settings/new")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/ISODate/settings/new"));
    }
    
    
    /**
    * Calls:
    * (404) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_159_deleteOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"52ed1854aed0527f7ca22e82\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbaa6e2de3895964e4bedab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4af4b5ca7472669b92126ef8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b0cf53bf52cf7ecf00be2f9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1a3be3dbf3d29278762\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d5ee68cad0b0fc786397ba\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cc5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1badeacebe05464aeaf5fa61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"d7d5cdd7e6ff7fe7c7054c9f\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"1edf2d8e237c7cfa0603df8b\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"ebf1962cd2eb6186d92bce9a\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 404 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/undefined/custom_gene_list/true")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/undefined/custom_gene_list/true"));
    }
    
    
    /**
    * Calls:
    * (404) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_160_deleteOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"42fd0853aed0436e7ca23e71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbaa6d2de3895964e4bedab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383669a81127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"7bfd064a051ce8ecf1ecf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d2a3be3dbf3d29278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61c4fe69cad0b1fc886396ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9edf335ed4faf5c76e8247\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cc5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1badeacebe05464aeaf5fa61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"f7d5ccd8e6ff8ff8c5155d90\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 404 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/NumberLong/genomic_chart/genUUi__chert")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/NumberLong/genomic_chart/genUUi__chert"));
    }
    
    
    /**
    * Calls:
    * (404) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_161_deleteOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"42fd0853aed0436e7ca23e71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbaa6d2de3895964e4bedab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383669a81127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63b052ce8ecf1fcf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d2a3be3dbf3d29278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc886396ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9edf335ed4faf6c76e8246\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cc5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1badeacebe05464aeaf5fa61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc8e6ff7fe7c6055c9f\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 404 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/ObjectId/genomic_chart/NumberDecimal")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/ObjectId/genomic_chart/NumberDecimal"));
    }
    
    
    /**
    * Calls:
    * (404) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_162_deleteOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"51fdf863ade1425d6ca33d81\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbaa7f2cd3895a73e5bfdac4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383669a81127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63b052ce8ecf1fcf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7c1b3ae2cbf3d38278852\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cc5c4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1badeacebe05464aeaf5fa61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc7e6ff7fe7c6055c8f\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 404 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/new/genomic_chart/NaN")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/new/genomic_chart/NaN"));
    }
    
    
    /**
    * Calls:
    * (404) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_163_deleteOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"42fd0853aed0436e7ca23e71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbaa6e2de3895964e4bedab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383669a81127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63b052ce8ecf1fcf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1a3be3dbf3d29278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cc5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1badeacebe05464ae9f5fa61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc8e6ff7fe7c6055c9f\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 404 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/Timestamp/genomic_chart/MaxKey")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/Timestamp/genomic_chart/MaxKey"));
    }
    
    
    /**
    * Calls:
    * (404) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_164_deleteOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"42ed1963acbf647e7b911e8f\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bb8a8e2cf3996a74c4cefab3\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383669a81127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"8d1bf64b054c08cbf01ce307\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1a3ad3dbf2b2927875f\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"60d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3d9cce316ed4e9f4d88e7336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cc5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1b9ddafdbe04353ae9e6ea61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc8e6ff7fe7c6055c9f\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 404 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/genomic_chart/genomic_chart/Infinity")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/genomic_chart/genomic_chart/Infinity"));
    }
    
    
    /**
    * Calls:
    * (404) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_165_deleteOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"42fd0853aed0436e7ca13e71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbaa6e2de3895964e4bedab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383669a81127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63b052ce8ecf1fcf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1a3be3dbf3d29278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cc5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1badeacebe05464aeaf5fa61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc8e6ff7fe7c6055c9f\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 404 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/Date/custom_gene_list/NaN")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/Date/custom_gene_list/NaN"));
    }
    
    
    /**
    * Calls:
    * (404) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_166_deleteOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"42fd0853aed0436e7ca13e71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbaa6e2de3895964e4bedab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383669a81127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63b052ce8ecf1fcf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1a3be3dbf3d29278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cc5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1badeacebe05464aeaf5fa61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc8e6ff7fe7c6055c9f\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 404 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/null/custom_gene_list/NaN")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/null/custom_gene_list/NaN"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_167_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"22bd0864bfd152ad6bb1ff71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"7abb7f1cc19b3a72f2aebcb2\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"49f4c6cb9373787b832360f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6a2ed43a053cf80b011ce3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"eaa7d2a0ce1b9f5e2bf6684e\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"6fc5e26bcad09ffdaa52c7bc\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"1b6ddd1f588f4ae8af68a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10c128d99bbc5d9a6bbfc4\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"1f9089ac52d59211b0a457ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f264bcc27f463df09b71acdf\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"0eebabd11faeb3ec2e99da1b\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"e1daead14badbc997ef92e5d\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"87d8fb4ab4a832cf707bdbba\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"cdea4697e3da201435faa8c2\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"{}\" ")
                .put(baseUrlOfSut + "/api/sessions/EVOMASTER/main_session/ISODate")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/EVOMASTER/main_session/ISODate"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_168_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"52ed1854aed0527f7ca22e82\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbaa6e2de3895964e4bedab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383669a82127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63b052ce8ecf1fcf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1a3be3dbf3d29278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cc5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1badeacebe05464aeaf5fa61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc8e6ff7fe7c6f55c9f\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"0a82d70c74c4df832f81eafd\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"deb16e9df7ebecabe1d3881c\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"{}\" ")
                .put(baseUrlOfSut + "/api/sessions/NumberInt/genomic_chart/virtual_study")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/NumberInt/genomic_chart/virtual_study"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_169_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"41de0973bec1639d6ba20f73\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"9bba7f2dd28b3a74f2becba1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383678a82127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63a052ce8fcf1fcf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fcb6d1a3ce2dbf3e3a188751\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4d059bae0b00c9953b7aa\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" \"_EM_318_XYZ_\" ")
                .put(baseUrlOfSut + "/api/sessions/_EM_318_XYZ_/comparison_session/DBPointer?EMextraParam123=42")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/_EM_318_XYZ_/comparison_session/DBPointer"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_170_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"22bd0864bfd152ad6bb1ff71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"7abb7f1cc19b3a72f2aebcb1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"49f4b6cb9373777b832360f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6a2ed43a053cf80b021ce3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"eaa7d2a0ce1b9f5e2bf6684e\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"70d4e259caefaf0c9a54c7bb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b6ddd1f588f4ae8af68a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"c911c127d99bac5d9a6bbfb4\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"1f9089ac52d59211b0a467ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f264bcc27f463df09b71acdf\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"0debabd11faeb3ec2e99da1b\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"e1dbead14badbc997ef92e5d\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"{}\" ")
                .put(baseUrlOfSut + "/api/sessions/NumberDecimal/group/HexData")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/NumberDecimal/group/HexData"));
    }
    
    
    /**
    * Calls:
    * (404) GET:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_171_getOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"cf0bcdd94ec750aeee7a7d50\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"f996bd0be0b9ed83cecf37c0\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/V3C0o1a/virtual_study/_EM_24_XYZ_?EMextraParam123=42")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/V3C0o1a/virtual_study/_EM_24_XYZ_"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_172_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"62dd1864bfd1638e6cb21e82\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"ab9a7e1ee3894974f4bfcab3\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383668a82127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63a052ce8ecf1fcf3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fcb6d1a3ce2dbf3e3a178751\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"60f3ef49baefb00b8741a6ba\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"f0ec66b4703954fc36b2baeb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"f88efe8a94d0c81a965ffe51\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"e579ccfdd6cdeb32ce4a8ef2\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"b8a8e8ca6f8d7fcb2b8cede3\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"_EM_5557_XYZ_\" ")
                .put(baseUrlOfSut + "/api/sessions/_EM_5557_XYZ_/genomic_chart/Date")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/_EM_5557_XYZ_/genomic_chart/Date"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_173_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"22bd0874cfe241bd6bc1ff72\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"7abb7f1cc19b3a72f2aebcb1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"49f4b6cba373777b832360f8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6a2ed43a053cf80b021ce3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fa97f291ce1bb04e2bf6893f\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"70d4e259caefaf0c9a54c7bb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b6ddd1f588f4ae8af68a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"c911c127d99bad5d9a6bbfb4\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"1f9089ac53d59211b0a467ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f264bcc27f463df09b71acdf\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"0cec9ce120bda3ec2d8ada1a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"e2cad9e14badac988ef82e5d\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"ccf17ab375adf0137b5db709\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"328d6b541780b0ff1cbc40e3\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"{}\" ")
                .put(baseUrlOfSut + "/api/sessions/Date/comparison_session/comparison_session")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/Date/comparison_session/comparison_session"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_174_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"52ed1854aed0527f7ca22e82\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbaa6e2de3895964e4bedab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"5a04b4ca8282579a82227ff9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"7c0cf63c052ce8edf1ece3f7\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"ec97e2a3ce4dbf3d1a269861\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8eabd063aebbaf0bd3cc4b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e108efe1ba395f0cd581d4fa\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"7f4f450b96b0ed29bdafafb8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"{}\" ")
                .put(baseUrlOfSut + "/api/sessions/settings/genomic_chart/BinData")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/settings/genomic_chart/BinData"));
    }
    
    
    /**
    * Calls:
    * (404) GET:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_175_getOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"3bc7bfe07f24ee88d94e046a\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"ea80d5ffd32a571595b62bf4\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_3065_XYZ_")
                .get(baseUrlOfSut + "/api/sessions/_EM_4327_XYZ_/virtual_study/_EM_3336_XYZ_?field=yejQLRQ_HtI")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/_EM_4327_XYZ_/virtual_study/_EM_3336_XYZ_"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_176_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"32cd0973bfd1539d6ba1fe72\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8acb701bc28a3b73f3aebdb1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"3803a7db9482687b95345fea\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1df62a052ce7fc020be3ea\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"ecb6d0a2ce2ca13d2b078840\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"60c4c03acaf0a00e9955c7ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b7ede0f688f4ae7ae59b7db\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10c106d9abba4ebb6bdfb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"20a089bc42e58011cf8478ca\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f2749ac280664dff8c81adde\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"dbe7aee76afb6f79db65bc7e\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"a67d66ff53b69c343ac03b7c\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"ee3dd2cf9e46ea9fd1a0b00f\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"7619c03f925cccb4e9cd6646\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"c959fcdd7ae2feb69e33d42b\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"f4eecfec58aeaaae8d235ee4\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" \"gUorU\" ")
                .put(baseUrlOfSut + "/api/sessions/ObjectId/custom_data/Infinity")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/ObjectId/custom_data/Infinity"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_177_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"42ed1864adc0547e8c922e80\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bb9a7f3cf3995964c4bef9b4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"3a14b5b98483669a72127f08\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"7c1cf64b052cf8dbf0fb02e7\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1a3be3dbf3d29278760\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b0fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87f8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebadf52bdbbbe0bd2bc5b4e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1b9ddaedbd04353ae9f6ea61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc8e6ff7fe7c6055c9f\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"new\" ")
                .put(baseUrlOfSut + "/api/sessions/UUID/group/%7B%7D")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/UUID/group/%7B%7D"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_178_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"42ed1963acbf647e7b911d8f\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bb8a8e2cf3996a74c4cefab3\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca838366aa81127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"8d1bf65b054bf8dbf00cf3f7\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"0cb6e1a3ce3ebf3d29287760\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"2e9dde325ed4eaf4d88e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cd5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1b9ddafdbd04353ae9e6ea61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc8e6ff7fe7c6055c9f\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"EVOMASTER\" ")
                .put(baseUrlOfSut + "/api/sessions/RegExp/group/MaxKey")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/RegExp/group/MaxKey"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_179_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"42ed1963acbf647e7b911d8f\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bb8a8e2cf3996a74c4cefab3\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca838366aa81127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"8d1bf65b054bf8dbf00cf3f7\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fcb6e1a3ce3ebf3d29287760\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"2e9dde325ed4eaf4d88e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cd5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1b9ddafdbd04353ae9e6ea61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5ccc8e6ff7fe7b6045c9f\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"2c3856d26a30cab2c312dfda\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"b39e9b74dba1febabbd41a1b\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"{}\" ")
                .put(baseUrlOfSut + "/api/sessions/BinData/group/MaxKey")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/BinData/group/MaxKey"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_180_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"32cd0973bfd1539d6ba1fe72\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"9ca96f2dd28b4a7402addba1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"49f4b6cb9473678b832360f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1df62a052ce7fc020be3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fcb6d1b3ce2dbf3e3a188751\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"60d3d059bae0b00c9953b7aa\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"1b6dcb2f389f3af8cf5996bc\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ba20b117d99bba4dac6aefa5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"eb665e3401a454a19806ee3d\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"b3f17203bdc8e2feb274dfdd\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" \"custom_gene_list\" ")
                .put(baseUrlOfSut + "/api/sessions/true/custom_gene_list/custom_gene_list?EMextraParam123=42")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/true/custom_gene_list/custom_gene_list"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_181_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"33ccfa63cfc154ad7cb1ee71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8bcb7f2cc28b3a74f2becca1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"49f4b6cb9473778b832360f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"5b2e061a152cf70d01fbe3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"eca6d0a2ce2c913d1b078740\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"60c4c03acaf0b00e9954c7ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0a6dde10698f3bf7af68b6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10c106d9abba4ebb6bdfb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"2fb099ab42d48020cf9577ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f174abb361475d00ab72bddf\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"cce7add76bec6068db76bc7e\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"976e650f43b78d334ab03a7b\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"c6934c88c7a60c652005ad2f\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"732d032bc8593a36bafe8cd0\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" \"{}\" ")
                .put(baseUrlOfSut + "/api/sessions/NumberLong/genomic_chart/genomic_chart?EMextraParam123=42")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/NumberLong/genomic_chart/genomic_chart"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_182_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"42fd0853aed0436e7ca23e71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbaa6e2de3895964e4bedab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383669a81127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63b052ce8ecf1fce3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d0a3be3dbf3d29278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cc5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"0baceacebe05565af9050a51\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc8e6ff7fe7c6055c9f\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"false\" ")
                .put(baseUrlOfSut + "/api/sessions/null/group/custom_data")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/null/group/custom_data"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_183_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"52ed1854aed0527f7ca22e82\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbaa6e2de3895964e4bedab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383669a82127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63b052ce8ecf1fcf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1a3be3dbf3d29278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"60e4ef69bae0b1fc8853a7ba\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbdf53bdbbbe0cd3cc5b4d\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"false\" ")
                .put(baseUrlOfSut + "/api/sessions/%7B%7D/custom_gene_list/NaN")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/%7B%7D/custom_gene_list/NaN"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_184_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"52fd1963adbf547d7b921d8f\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bb8a8d3cf3996a64c4cefbb3\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca838366a981127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"8d1bf65b054bf8db000cf3f7\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"0cb6d0b3cf3dbf3d39287660\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"2e9dde325ed4eaf4d88e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cd5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1b9ddafdbd04353ae9e6ea61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"d7d5ccd9e7ff70e7c6165c90\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"48d10f6d0ea9289ad6ed634c\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"9fbc62a1a3032bf5f58ea5a9\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"comparison_session\" ")
                .put(baseUrlOfSut + "/api/sessions/DBPointer/group/MaxKey")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/DBPointer/group/MaxKey"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_185_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"33dd0982b0d1439d7ca2ff91\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8bcc722be26a3c72f2bfec90\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"48f3a6caa472678a932260f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"7a0ef62b151df50c130be3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fbc6d1b2be2eb04e19079740\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d5c169cbcfbf1d9952b7ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b6ddd1e588f4ae8af68a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10b1f7c89aaa5faa5bcdb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"2fa089bc42d59111cf9479ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f2669cc47f553dfe9c9fbed0\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"{}\" ")
                .put(baseUrlOfSut + "/api/sessions/settings/genomic_chart/Timestamp")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/settings/genomic_chart/Timestamp"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_186_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"32cd0973bfd1539d6ba1fe72\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"9bba7f2dd29b3a74f2becba2\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"49f4b6cb9473778b832360f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1df62a052ce7fc020be3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fba6d0a2ce2db04d2a177740\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4d149baefb00d9954c7ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b6ddc2f489f3ae8b068a6bb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10c006d9abba4ebb6bdfb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"2fa089bc42c59111cf9477ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f264abb370564dff9c80bdd0\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"virtual_study\" ")
                .put(baseUrlOfSut + "/api/sessions/MaxKey/custom_data/ISODate")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/MaxKey/custom_data/ISODate"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_187_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"21ce0a83a0d1549e7ba10e63\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"9ca96f2dd28b4a7402addba1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4af4b5cca574689b942271f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1df62a052ce7fc020be3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1b3dd2cbf2f29098752\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"51c4c15ac9e0b10d9844c699\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"1b6dcb2f389f3af8cf5996bc\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ba20b117d99bba4dac6aefa5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"db775d44f1b454a2a815ef2e\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"b3e17314bdb8e2ffa373c0dc\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" \"comparison_session\" ")
                .put(baseUrlOfSut + "/api/sessions/undefined/comparison_session/comparison_session?EMextraParam123=42")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/undefined/comparison_session/comparison_session"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_188_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"43cc0a74b0c2539c7c92ee82\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"7acc702dc1aa3a74f3cdcca1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4af4b6cb9464767c74326f0a\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1cf72a151df7ec030be3ea\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fbb6d1a2ce2da04d2a07884f\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4d149baefb00d9954c7ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b6ddc1f588f4ae8af68a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10c105d9abba4ebb6bdfb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"2eb078bb42d4a121b09378ca\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"03539ba270554cf08c7fceef\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"a1c6cbfbefc0695eca611b68\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"70ccfe0b0b165fa738dda54b\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"custom_gene_list\" ")
                .put(baseUrlOfSut + "/api/sessions/Timestamp/custom_gene_list/custom_gene_list?EMextraParam123=42")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/Timestamp/custom_gene_list/custom_gene_list"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_189_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"32dcf863bfd0529e6ba2fd72\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8ccc7f1dc19b2a7302bdddb2\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"49f4b6cb9473778b832360f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6a2ef61a051be6ed021bf3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fbb6d1b2ce2da04d3a07884f\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4d249baefb00d9954c7ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b6ddd1f598f4ae8af68a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"eb22c018b98bb84e9b6bc194\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"2fa089bc42d59111cf9478ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f264abb370564dff9c80bddf\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"fbcffe839db54cf26bae37c4\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"cff73eb9f75af32bfdbb6ffe\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"{}\" ")
                .put(baseUrlOfSut + "/api/sessions/_EM_5165_XYZ_/genomic_chart/NumberInt?EMextraParam123=42")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/_EM_5165_XYZ_/genomic_chart/NumberInt"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_190_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"24cf1a82bed2529e5ab10e82\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8bcb6f1cc28b3a73f2becc91\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4803a5ca9483787c84346ffa\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"7b1ff749151dd70c130ad3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"ecb6d0a2ce2ca13d1b078840\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"70d4c02bcaffb10e8945c6ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"2b5edd1078804ae9b048a6bd\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"c92fb0f6e8aaab4ebb6bd0b5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"10bf78bb42e5a211cf8487ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f374acb270464d0eac8fcce0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"da0790d56afb6079dc64cc7e\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"a67d66ef53b69c343ac03b7b\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"ed4dd0f08f25ea8fc1a0bf0d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"7619c03f925cdcb4e9cd6646\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"7b6697982b3c61a3c5c884ac\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"0518dc0efd6c83861f916ef6\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"custom_gene_list\" ")
                .put(baseUrlOfSut + "/api/sessions/%7B%7D/main_session/%7B%7D?EMextraParam123=42")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/%7B%7D/main_session/%7B%7D"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_191_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"63cef872bdc1628d6ba1ffa1\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"acaa7f1ee27a3a72f2b1ca94\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04a5ca8383668a82127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63af52ce8fcf1fcf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"ecc7d1a3ce2fbe3d2a088650\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4d059bae1b00c9953b7aa\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"a1e92de539aeff1e4e436df9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"2be5c8c9bbaee587edd7dd89\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"5d122a95fcfe12671a417c20\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"6abc71fd3c5f0f9a58853d19\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"b55fb50d6c27aea1b7949cd4\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"5900f50af694cc91608f412b\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"main_session\" ")
                .put(baseUrlOfSut + "/api/sessions/main_session/main_session/ObjectId")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/main_session/main_session/ObjectId"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_192_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"33ce0a72bfd1639d5ba1ff72\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8bba701bc29b4a83f2bdcca1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4803a5ca9483787c84346ffa\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1ef63a052dd71c030bd4ea\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"ecb6d0a2ce2ca13d1b078840\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"70d4c02bcaf0b10e8945c6ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"1b5dee2f68805ae8bf58a6cc\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10c106d9abba4ebb6bdfb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"10bf68ba43e4b300b08497bb\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f374acb270464d0eac8fcce0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"da0790d56afb6079dc64cc7e\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"a67d66ef53b69c343ac03b7b\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"ed4dd0f08f25ea8fc1a0bf0d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"7619c03f925cecb4e9cd6646\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"7b6697982b3c60a3c5c884ac\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"1618cb0ffd5c94a60f815d06\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"\" ")
                .put(baseUrlOfSut + "/api/sessions/false/main_session/new")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/false/main_session/new"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_193_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"51fdf863ade1425d6ca33d71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbaa6e2de3895964e4bedab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383669a81127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63b052ce8ecf1fcf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1a3be3dbf3d29278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cc5c4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1badeacebe05464aeaf5fa61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc8e6ff7fe7c6055c8f\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"comparison_session\" ")
                .put(baseUrlOfSut + "/api/sessions/NumberInt/comparison_session/true")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/NumberInt/comparison_session/true"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_194_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"33dd0982b0d1439d7ca2ff91\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8bcc722be26a3c72f2bfec90\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"48f3a6caa472678a932260f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"7a0ef62b151df50c130be3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fbc5c0b2be1ec04f09089741\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d5c169cbcfbf1d9952b7ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0c6ddd1e588f4ae8af68a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10b1f7c89aaa5faa5bcdb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"2fa089bc42d59111cf9479ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f2779dd47f653dfd8ba0bed0\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"{}\" ")
                .put(baseUrlOfSut + "/api/sessions/NumberInt/group/UUID")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/NumberInt/group/UUID"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_195_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"32cd0973bfd1539d6ba1fe72\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8bcb6f1cc28b3a73f2becca1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"49f3b5bb9273677a842360f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1df62a052ce7fc020be3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fab7d1a1ce1c9f4d1af6784e\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"60d5d149cad0c10da954d6ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b6ddd1f588f4ae8af68a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10c107d99bba4ebb6bcfb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"1fa089bc42d59111c09477ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f264bcc27f463dff9b71acdf\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"d0bec3ae8ccbba0cd9bb5286\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"bfacc0f20a1dd228db509ecb\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"genomic_chart\" ")
                .put(baseUrlOfSut + "/api/sessions/genomic_chart/custom_gene_list/null")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/genomic_chart/custom_gene_list/null"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_196_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"42ed1864adc0547e8c922e80\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bb9a7f3cf3995a64c4bef9b4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4b05b6ca838367aa81126ff9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"7c1cf64b053cf8dbf1fb02e7\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1a3bd3dbf3d29278760\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"2eaecd415ec4dbf3d79e8335\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cc5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1b9ddafdbd04353ae9e6ea61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc8e6ff7fe7c6055c9f\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"group\" ")
                .put(baseUrlOfSut + "/api/sessions/group/group/undefined")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/group/group/undefined"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_197_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"52ed1854aed0527f7ca22e82\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bcaa6e2de3895964e4bedab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"3a03b5cb938357aa92128ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6d0df63af63be8ecf0fdf3d9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"eba8d0a3bd3dbe4d39278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"52c3fe78cbcfb0fc9854a8ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87e8326\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbef52bdbcbe1dd3dd5c4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"9ddcc874cd61265473d8f8bb\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"4bdf0fe0bab32e0e41a3376a\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"main_sessiqn\" ")
                .put(baseUrlOfSut + "/api/sessions/main_sessiqn/main_session/%7B%7D")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/main_sessiqn/main_session/%7B%7D"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_198_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"32cd0973bfd1539d6ba1fe72\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8bdb7f1bc18a3a83f3addcb2\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"58f4b6e99474767b942461f8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1df62af52ce7fc020be3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"e9b8d192de2b9f4c2af5684f\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"62d4f149cae1c00d8a64d6aa\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b6ddd10498f49e89f58a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10c107d9abba4ebb6bcfb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"1fa089bc42d59111c19477ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f264bcc27f463dff9b71acdf\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"genomic_chart\" ")
                .put(baseUrlOfSut + "/api/sessions/genomic_chart/custom_data/RegExp")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/genomic_chart/custom_data/RegExp"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_199_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"42fd0853aed0436e7ca23e71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbaa6e2de3895964e4bedab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a03b5ca8483669a81127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63b052ce8ecf1fcf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1a3be3dbf3d29278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4ee69cac0a1fb886387da\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3fafde324dd4eae3d87d8436\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cc5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1badeacebd05564adaf5fb61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc8e6ff6fe7c6055c9f\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"groupC\" ")
                .put(baseUrlOfSut + "/api/sessions/Infinity/group/%7B%7D")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/Infinity/group/%7B%7D"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_200_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"42fd0853aed0436e7ca23e71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbaa6e2de3895964e4bedab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4b04b5ba8383669a81136008\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63b052ce8ecf1fcf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1a3be3dbf3d29278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"62d40e79dad0a20b986497da\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87d8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cc5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1badeacebe05464aeaf5fa61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc8e6ff7fe6c6055c9f\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"false\" ")
                .put(baseUrlOfSut + "/api/sessions/ISODate/group/grnup")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/ISODate/group/grnup"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_201_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"42ed1963acbf647e7b911d8f\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bb9a8e1cf3985974b4cefab3\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca838366aa81127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"8d0be65bf54b07ebf00c04f7\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"0cb6e1a3ce3ebf3d29287760\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"60c4fe68cbdfb0ec887497ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"2e9dde325ed4eaf4d88e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8facc053bcbbbf0cd3de5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"0b9ddbfdbe05253ae9e5ea62\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc8e6ff7fe7c6055c9f\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"EVOMASTER\" ")
                .put(baseUrlOfSut + "/api/sessions/MinKey/group/MaxKey")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/MinKey/group/MaxKey"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_202_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"42ed1963acbf647e7b911d8f\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bb9a8e1cf3985974b4cefab3\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca838366aa81127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"8d0be65bf54b07ebf00c04f7\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"0cb6e1a3ce3ebf3d29287760\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"6fc4fe68ccdfb0ed886396ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9dde315ed4e9f5c78e7336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8facc053bcbbbf0cd3de5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"0b9ddbfdbe05253ae9e5ea62\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc8e6ff7fe7c6055c9f\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"mail_session\" ")
                .put(baseUrlOfSut + "/api/sessions/NaN/main_session/mail_session")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/NaN/main_session/mail_session"));
    }
    
    
    /**
    * Calls:
    * (404) GET:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_203_getOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"3bc7bfe07f24ee88d94e036a\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"da70d50fc22a463584b53cf5\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_EM_10704_XYZ_/virtual_study/_EM_3336_XYZ_?field=eGibIAR1AD")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/_EM_10704_XYZ_/virtual_study/_EM_3336_XYZ_"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_204_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"42ed1963acbf647e7b911d8f\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bb8a8e2cf3996a74c4cefab3\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca838366aa81127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"8d1bf65b054bf8dbf00cf3f7\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"0cb6e1a3ce3ebf3d29287760\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"2e9dde325ed4eaf4d88e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cd5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1b9ddafdbd04353ae9e6ea61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc8e6ff7fe7c6055c9f\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"main_session\" ")
                .put(baseUrlOfSut + "/api/sessions/%7B%7D/main_session/NumberDecimal")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/%7B%7D/main_session/NumberDecimal"));
    }
    
    
    /**
    * Calls:
    * (404) GET:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_205_getOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"3bc7aee07f25ee87da4e047a\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"da70d50fc22a463584b53cf5\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/lQUiC/virtual_study/_EM_11356_XYZ_?field=lQUiC")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/lQUiC/virtual_study/_EM_11356_XYZ_"));
    }
    
    
    /**
    * Calls:
    * (404) GET:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_206_getOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"b5caec406a26cd8f4bd4fa39\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"aa16dccec3c4efe43c41a646\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"a84d7cfbcb5f3d27bce04ff9\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"afe6e1b3fccdff1bb5df0902\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8da0c922da39013a87fd7cb3\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"74bc6d532b1f5ce6e7a6e930\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/yI3C07aKQ5/comparison_session/_EM_11247_XYZ_?field=UBBw__8nXM")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/yI3C07aKQ5/comparison_session/_EM_11247_XYZ_"));
    }
    
    
    /**
    * Calls:
    * (404) GET:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_207_getOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"3bc8bff07f24ee88e94e0459\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"da70d500c22a363584b53cf5\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/lUUj3/virtual_study/3bc8bff07f24ee88e94e0459?field=eGibIAR1AD")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/lUUj3/virtual_study/3bc8bff07f24ee88e94e0459"));
    }
    
    
    /**
    * Calls:
    * (404) GET:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_208_getOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"3bc7bfe07f24ee88d94e046a\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"da7fd611c22a463574c53bf5\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_EM_11824_XYZ_/settings/da7fd611c22a463574c53bf5?field=hKidIAV1ZQ")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/_EM_11824_XYZ_/settings/da7fd611c22a463574c53bf5"));
    }
    
    
    /**
    * Calls:
    * (404) GET:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_209_getOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"3cc7bfe07f24ee88d94e046a\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"ea70d500c22a463584b53cf5\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_EM_11851_XYZ_/virtual_study/9LGSMYCXYglNjk?field=eGibIAR1AD0")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/_EM_11851_XYZ_/virtual_study/9LGSMYCXYglNjk"));
    }
    
    
    /**
    * Calls:
    * (404) GET:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_210_getOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"3bc7afe07f25ee88d94e046a\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"da70d50fc229463584b53cf5\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_EM_11903_XYZ_/settings/da70d50fc229463584b53cf5?field=_EM_11904_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/_EM_11903_XYZ_/settings/da70d50fc229463584b53cf5"));
    }
    
    
    /**
    * Calls:
    * (404) GET:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_211_getOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"3bc7afe07f25ee88d94e046a\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"da70d41fc329463485b52be5\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_EM_11903_XYZ_/virtual_study/3bc7bfe07f25ee88d94e046a?field=_EM_11905_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/_EM_11903_XYZ_/virtual_study/3bc7bfe07f25ee88d94e046a"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_212_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"52fd1963adbf547d7b921d8f\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bb8a8d3cf3996a64c4cefbb3\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a14b5ca838366a882127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"8d1bf65b054bf8db000cf3f7\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"0cb6d0b3cf3dbf3d39287660\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"2e9dde325ed4eaf3d88e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cd5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1b9ddafdbd04353ae9e6ea61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"d7d5ccd9e7ff70e7c6165c90\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"48d10f6d0ea9289ad6ed634c\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"9fbc62a1a3032bf5f58ea5a9\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"{}\" ")
                .put(baseUrlOfSut + "/api/sessions/DBPointer/group/NumberLong")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/DBPointer/group/NumberLong"));
    }
    
    
    /**
    * Calls:
    * (404) GET:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_213_getOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"741ba94fbda9f4c369aa0128\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"d3f6553cd2325ceecb810ba1\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/mUS9hQqE/comparison_session/_EM_14673_XYZ_?field=DJHES")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/mUS9hQqE/comparison_session/_EM_14673_XYZ_"));
    }
    
    
    /**
    * Calls:
    * (404) GET:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_214_getOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"3db7bee06e34de89d94e0569\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"da70d50fc22a473584b53cf5\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/YnmVU4Wczfu/virtual_study/_EM_11743_XYZ_?field=eF%5BbIAR1Af")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/YnmVU4Wczfu/virtual_study/_EM_11743_XYZ_"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_215_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_364_XYZ_")
                .contentType("application/json")
                .body(" \"hyHgfepisTUvI\" ")
                .put(baseUrlOfSut + "/api/sessions/e9OTFBiZAn5/settings/_EM_964_XYZ_?" + 
                    "EMextraParam123=_EM_965_XYZ_&" + 
                    "value=hyHgfepisTUvI")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/e9OTFBiZAn5/settings/_EM_964_XYZ_"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_216_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_364_XYZ_")
                .contentType("application/json")
                .body(" \"_EM_739_XYZ_\" ")
                .put(baseUrlOfSut + "/api/sessions/VzUi8rMj/custom_gene_list/ZUqZ8QsRCJdBVC5?" + 
                    "EMextraParam123=42&" + 
                    "field=_EM_740_XYZ_&" + 
                    "value=1VEpFuJYVpU")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/VzUi8rMj/custom_gene_list/ZUqZ8QsRCJdBVC5"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_217_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_364_XYZ_")
                .contentType("application/json")
                .body(" \"_EM_906_XYZ_\" ")
                .put(baseUrlOfSut + "/api/sessions/D4r4iRA/genomic_chart/pKQLfCc")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/D4r4iRA/genomic_chart/pKQLfCc"));
    }
    
    
    /**
    * Calls:
    * (404) GET:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_218_getOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"33ccfa63cfc154ad7cb1ee71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"7bcb802cc38c3b7502bfcda1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4af4b5cb9374778b73235ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"5b2e050b051d070c11ebe3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"eca6d0a2ce2c914d1b078740\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4bf3bda00b00ea955b8ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0a6dde10698f3bf7af68b6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10c106d9abba4ebb6bdfb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"3fa0aaab42d49010b0a576b9\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f174abb361475d00ab72bddf\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"cce7add76bdc6068db76bc7e\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"976e650f43b78d324ab03a7b\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"c6934c88c7a60c652005ad2f\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"732d032bc8593a36ba0e8cd0\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"bfd40fbd8e234a6052ceaf62\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"d664781673fb3fb20f18d4e5\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_EM_5609_XYZ_/virtual_study/_EM_5504_XYZ_?EMextraParam123=42")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/_EM_5609_XYZ_/virtual_study/_EM_5504_XYZ_"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_219_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_364_XYZ_")
                .contentType("application/json")
                .body(" \"_EM_856_XYZ_\" ")
                .put(baseUrlOfSut + "/api/sessions/yA/virtual_study/E6qbWg?field=_EM_858_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/yA/virtual_study/E6qbWg"));
    }
    
    
    /**
    * Calls:
    * (404) GET:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_220_getOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"a1b8ad67722feceec4c8f262\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"d1cf8ce95ae7cdd97dee262e\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/5CYEp_6P2hbsvD1/genomic_chart/b1a8ad78822febdfc4c8f262?field=42")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/5CYEp_6P2hbsvD1/genomic_chart/b1a8ad78822febdfc4c8f262"));
    }
    
    
    /**
    * Calls:
    * (404) GET:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_221_getOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"3bc7bfe07f24fe88d94e046a\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"eb80d4f0c12a572595c44bf6\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_EM_4288_XYZ_/settings/_EM_3336_XYZ_?field=_EM_4289_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/_EM_4288_XYZ_/settings/_EM_3336_XYZ_"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_222_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"62cd1874afd0638d7db30e71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"9b9b6e1ff288586404b0caa4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383668a82127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0ce63af42ce9ece1fdf2e7\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fcb6d1a3ce2dbf3e3a178751\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"60e4df69bae0b1fc8853a7ba\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"b95aad7cdaed4e7a09247e02\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"b7a817aaa9f95ee828d3dd1c\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"6e336f43a0d7ab1dadac1ddf\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"df9cb772a9dc746eda2ec413\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"_EM_4986_XYZ_\" ")
                .put(baseUrlOfSut + "/api/sessions/B8su5/settings/41de0973bec1639d6ba20f73")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/B8su5/settings/41de0973bec1639d6ba20f73"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_223_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"62dd0765bfe0548d5cb21f81\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bb8b6f0ee488397503bfbab3\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b4cb9384679a93126fe8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b0de63a051be9ecf1edf2d7\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"ecb5d1b3ce2ebf2e4a078751\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"60e4df69bae0b1fc885397ba\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"b95aad7cdaed4e7a09257e02\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"b7b817ba99f85dfa17d2dd2b\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"fdcab40e9b65179ef9ad8aab\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"5c41bfec1f460f9e6c1b81dd\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_101_XYZ_")
                .contentType("application/json")
                .body(" \"WbeG48NWvTigqLq\" ")
                .put(baseUrlOfSut + "/api/sessions/B8su5/main_session/61d4d059bae0b00c9953b7aa?EMextraParam123=_EM_100_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/B8su5/main_session/61d4d059bae0b00c9953b7aa"));
    }
    
    
    /**
    * Calls:
    * (404) GET:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_224_getOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"3bc6bfe07f24ee89d94e046a\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"da71d60ec22a473584b43cf5\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_EM_11497_XYZ_/settings/_EM_3336_XYZ_?field=eGibIAR1AD")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/_EM_11497_XYZ_/settings/_EM_3336_XYZ_"));
    }
    
    
    /**
    * Calls:
    * (404) GET:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_225_getOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"480f3e64c19f6cb322c863d3\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"deab05ec8c1f6dd35b4af5f4\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/mRS7hQqE/virtual_study/_EM_14384_XYZ_?field=9v8")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/mRS7hQqE/virtual_study/_EM_14384_XYZ_"));
    }
    
    
    /**
    * Calls:
    * (404) GET:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_226_getOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"3bc7b1e07f24ee88e94ef46b\"}}")
            .and().insertInto("session", "settings")
                .d("{\"_id\":{\"$oid\":\"d870c41fa22b563594b52bf3\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/lQTf/settings/3bc7b1e07f24ee88e94ef46b?field=eGibIAR1AD")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/lQTf/settings/3bc7b1e07f24ee88e94ef46b"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_227_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"43cc0a74b0c2539c7c92ee82\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"7acc702dc1aa3a74f3cdcca1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4af4b6cb9464767c74326f0a\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1cf72a151df7ec030be3ea\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fbb6d1a2ce2da04d2a07884f\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4d149baefb00d9954c7ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b6ddc1f588f4ae8af68a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10c105d9abba4ebb6bdfb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"2eb078bb42d4a121b09378ca\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"03539ba270554cf08c7fceef\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"a1c6cbfbefc0695eca611b68\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"70ccfe0b0b165fa738dda54b\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"lrXoLH\" ")
                .put(baseUrlOfSut + "/api/sessions/B(su/comparison_session/2fa089bc42d59111cf9477ba")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/B(su/comparison_session/2fa089bc42d59111cf9477ba"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_228_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"12bd0973bdc1549e5d820e62\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"abb9601ed28b2b65f3aebaa1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"38f4c5bc8473587a921261f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1cf62b051dd6fc011af2e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fcb6d1b3ce2dbf3e3a188751\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"51c5df58baf0a00b8a53b899\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"1b7edc2f489f5be8af68a5ba\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10d106d99bba4ebb6bdfb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"3c005fb8f7adfe7d6a0f0bee\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"bf8abd0b1a9822b8d6ce21c7\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"lrXoL\" ")
                .put(baseUrlOfSut + "/api/sessions/B:su/custom_gene_list/6XKgQKGOMDanA?EMextraParam123=_EM_100_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/B:su/custom_gene_list/6XKgQKGOMDanA"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_229_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"32cd0973bfd1539d6ba1fe72\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"abba6f2cd29b4965e2bfbca1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"39f3c5cba473678c72337f0a\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1df62a052ce7fc020be3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fcb5d1b3be2cae2d3a188640\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"60d4d058bae0b00c9953b7aa\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"1b6dcb2f389f3af8cf5896bc\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ba20b107d99bba4dac6aefa5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"fb564e33119555a08716ff2e\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"b3f17203adc8e2feb274dfdd\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"drXoL\" ")
                .put(baseUrlOfSut + "/api/sessions/B8suK/custom_data/eb665e3401a454a19806ee3d?EMextraParam123=_EM_100_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/B8suK/custom_data/eb665e3401a454a19806ee3d"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_230_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"22bd0a84bec1638d6c910f62\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"abb97e2ce28b496502cdcba2\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"5804b7dc9373678b923260e9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"7c0df629142cf8fc010ae3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fcb6d1b3ce2dbf3e3a188751\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"51c5df58b9f0a00b8a53b899\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0c6edc3f498f4ae8af78a6aa\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10c106d99bba4ebb6bdfb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"3b015fb7e89e0e5d6afffade\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"cf9aad0a0ba941aad5ef13d7\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_101_XYZ_")
                .contentType("application/json")
                .body(" \"lrXoL\" ")
                .put(baseUrlOfSut + "/api/sessions/B9su/custom_data/_EM_1514_XYZ_a")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/B9su/custom_data/_EM_1514_XYZ_a"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_231_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"32bd0a84bec1638d6c910f62\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"9baa603dd28a2b65f2aecbb1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4904b5cba582579b842540d9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b2df62a052ce7fc020be3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fdb5c1a3cf1dbf3d2a199761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"51c5ef58b9f0a00b8a53b899\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0c6ddc3f498e4ae8af78a6aa\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10c106d99bba4ebb6bdfb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"3d105fb8f7acfd7d5a1ffbee\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"cf9aad0a0ba941aad5df13d7\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_101_XYZ_")
                .contentType("application/json")
                .body(" \"lrXoL\" ")
                .put(baseUrlOfSut + "/api/sessions/D:su/settings/kl?EMextraParam123=_EM_100_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/D:su/settings/kl"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_232_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"32cd0973bfd1539d6ba1fe72\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"9ca96f2de28b4a7402addba1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"49f4b6cb9473678b832360f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1df62a052ce7fc020be3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fcb6d1b3ce2dbf3e3a188751\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"60d3d059bae0b00c9953b7aa\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"1b6dcb2f389f3af8cf5996bc\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ba20b117d99bba4dac6aefa5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"eb665e3401a454a19806ee2d\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"b2e27213bcc8e2eec264deee\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_101_XYZ_")
                .contentType("application/json")
                .body(" \"lrX_L\" ")
                .put(baseUrlOfSut + "/api/sessions/B8su/custom_data/_EM_1514_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/B8su/custom_data/_EM_1514_XYZ_"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_233_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"62dd1864bfd1638e6cb21e82\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"ab9a7e1ee3894974f4bfcab3\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"3b04b6da9483769c92127fe7\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6bfce53af62be9ede10de2e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fcb5d2a3ce1cce2f4a167742\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"60e4df69bae0b1fc8853b7ba\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"b95aac7cdaed4e7a09247e02\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"b7a817aaa9f95ee828d3dd1c\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"2f615cff519ea0db3a661dcf\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"d98ed740efb4e84b3351dce1\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_101_XYZ_")
                .contentType("application/json")
                .body(" \"_EM_4986_XYZ\" ")
                .put(baseUrlOfSut + "/api/sessions/B8su5A/main_session/60e4df69bae0b1fc8853a7ba?EMextraParam123=_EM_100_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/B8su5A/main_session/60e4df69bae0b1fc8853a7ba"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_234_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"42fd0853aed0436e7ca23e71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbaa6e2de3895964e4bedab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383669a81127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63b052ce8ecf1fce3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d0a3be3dbf3d29278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cc5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"0baceacebe05565af9050a51\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc8e6ff7fe7c6055c9f\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"jrXoKHK\" ")
                .put(baseUrlOfSut + "/api/sessions/BUUyUU/settings/_EM_316_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/BUUyUU/settings/_EM_316_XYZ_"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_235_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"22cd0973bfd1539d6ba1fe72\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8bcb7f1cc28b3a73f2beccb1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"3903b5bb8384867a82254f1a\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1ef62a052ce7fc020be3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fab7d1a1ce1c9f5d1af6784e\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4d149baefb00d9964c7ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b6dcc1049804ae79f79a7cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10c107d9abba4ebb6bdfb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"1eb18acc32e49110ce7478b8\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f264bcc27f463dff9b71acdf\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"_CMUU0U4_XYU_\" ")
                .put(baseUrlOfSut + "/api/sessions/B8su/group/32cd0973bfd1539d6ba1fe72")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/B8su/group/32cd0973bfd1539d6ba1fe72"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_236_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"32cd0973bfd1539d6ba1fe72\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8bcb7f1cc28b3a73f2becca1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"49f4b6cb9373778b832360f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1df62a052ce7fc020be3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"0aa6e1b1de2da04d19f6874e\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4d149baefb00d9954c7ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b6ddd1f578f4ae8af68a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10c107d9abba4ebb6bdfb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"1fa089bc42d59111cf9477ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f264bcc27f463dff9b71acdf\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"E_S8TelBJs7Q2wj\" ")
                .put(baseUrlOfSut + "/api/sessions/U8su/custom_gene_list/_EM_5003_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/U8su/custom_gene_list/_EM_5003_XYZ_"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_237_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"32cd0973bfd1539d6ba1fe72\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8bcb7f1cc28b3a73f2becca1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"49f4b6cb9373777b832360f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1df62a052ce7fc020be3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fab7d1a1ce1c9f4d1af6784e\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"62d4c259bae0c00e9a54d79b\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b6ddd10588f4ae8af68a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"db10c1f8d9abba5ecb6bcea4\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"1fa089ac42e58022cfa487b9\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f165ccc37f462defab809ccf\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_101_XYZ_")
                .contentType("application/json")
                .body(" \"_EM_5004_XYZ_\" ")
                .put(baseUrlOfSut + "/api/sessions/B8suO/custom_data/JnnDPA%7Bz?EMextraParam123=_EM_100_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/B8suO/custom_data/JnnDPA%7Bz"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_238_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"32dcf863bfd0529e6ba2fd72\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8ccc7f1dc19b2a7302bdddb2\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"49f4b6cb9473778b832360f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6a2ef61a051be6ed021bf3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fbb6d1b2ce2da04d3a07884f\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4d249baefb00d9954c7ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b6ddd1f598f4ae8af68a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"eb22c018b98bb84e9b6bc194\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"2fa089bc42d59111cf9478ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f264abb370564dff9c80bddf\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"fbcffe839db54cf26bae37c4\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"cff73eb9f75af32bfdbb6ffe\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"_EM_5164_XYZ_\" ")
                .put(baseUrlOfSut + "/api/sessions/B4su/custom_gene_list/_EM_1514_XYZ_?EMextraParam123=_EM_100_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/B4su/custom_gene_list/_EM_1514_XYZ_"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_239_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"32cd0973bfd1539d6ba1fe72\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8bcb7f1cc28b3a73f2bdcca1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"49f4b6cb9373778b832360f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1df62a052ce7fc020be3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fab7d1a1ce1c9f5d1af6784e\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"60d4d149baefb00d9954c7ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b6ddd1f588f4ae8af68a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10c107d9abba4ebb6bdfb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"20908aac53e59102cf9477ca\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f264bcc27f464dff9b71acdf\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"_EM_5004_XYZ_\" ")
                .put(baseUrlOfSut + "/api/sessions/B8s/custom_data/_EM_5003_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/B8s/custom_data/_EM_5003_XYZ_"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_240_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"21bc0863cee153ad6bc20d81\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8bcb703dc27b3a73f2cdbdb1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4ae3a7bb8583877b7433500a\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1df62a052ce6fc020be3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fbb6d1a2ce2da04d2a07884f\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"80c3df48c9d2c0fc7a55b7ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b6cdd1f588f49d8af68b5cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"eb01d2f7c9baba4dca4bcda4\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"3ebf89bd43d59121cf9567b9\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f263acc280463d0f9b90beef\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"9abe9bbc1f43e5b0e101c0c9\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e3faddef01fe69c3eac9fca8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"lvXoL8\" ")
                .put(baseUrlOfSut + "/api/sessions/_EM_5647_XYZ_/settings/_EM_1514_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/_EM_5647_XYZ_/settings/_EM_1514_XYZ_"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_241_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"32cd0973bfd1539d6ba1fe72\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8bcb7f1cc28b3a73f2becca1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"49f4b6cb9373778b832360f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1df62a052ce7fc020be3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fab7d1a1ce1c9f4d1af6784e\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4d149bae0b00d9954c7ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b6ddd1f588f4ae8af68a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10c107d9abba4ebb6bcfb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"1fa089bc42d59111c09477ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f264bcc27f463dff9b71acdf\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"_EM_5004_XYZ_\" ")
                .put(baseUrlOfSut + "/api/sessions/B8su/custom_data/_EM_5003_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/B8su/custom_data/_EM_5003_XYZ_"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_242_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"52ed1854aed0528f7ca22e82\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbaa6e2de3895964e4bedab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"3b04a6cb8394578a82128f08\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63b052ce8ecf1fcf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1a3be3dbf3d29278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fd886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbdf63bdbbbe0bd4dc4b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e5b0be93c1f4ccb91afbc347\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"70c1cead7ac1a849ae7f7a4d\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"c71ebfd27b79d4502533be83\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"92c5efb0ce6bf9bc3ebb5e8b\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"jrXoLHK\" ")
                .put(baseUrlOfSut + "/api/sessions/DUUuUU/main_session/_EM_316_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/DUUuUU/main_session/_EM_316_XYZ_"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_243_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"52ed1854aed0527f7ca22e82\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbaa6e2de3895964e4bedab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383669a82127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63bf52ce8ecf1fcf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1a2be3dbf3d29278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"62d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8dbbdf53bdbbbe0cd3cc5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"6d04f5f782b9b22c644e47a6\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1a10eca2bf4c447140a489ac\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"jrXoLHK\" ")
                .put(baseUrlOfSut + "/api/sessions/AUUuUU/main_session/fca7d1a3be3dbf3d29278761")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/AUUuUU/main_session/fca7d1a3be3dbf3d29278761"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_244_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"52ed1854aed0527f7ca22e82\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbaa6e2de3895964e4bedab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383669a82127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63b052ce8ecf1fcf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1a3be3dbf3d29278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbdf53bdbbbe0cd3cc5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e5a709521ffada2afedb7253\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"daff7bbc15ec59eef06ad148\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"jrXoLHK\" ")
                .put(baseUrlOfSut + "/api/sessions/BUUuUU/main_session/_EM_316_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/BUUuUU/main_session/_EM_316_XYZ_"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_245_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"51fdf863ade1425d6ca33d71\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbaa6e2de3895964e4bedab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383669a81127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63b052ce8ecf1fcf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1a3be3dbf3d29278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69dad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d97e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cc5c4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"0b9deaceae045659eaf5f972\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc8e6ff7fe7c6055c8f\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"jr`oKHG\" ")
                .put(baseUrlOfSut + "/api/sessions/_EM_8279_XYZ_/custom_gene_list/e7d5cdc8e6ff7fe7c6f55c9f")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/_EM_8279_XYZ_/custom_gene_list/e7d5cdc8e6ff7fe7c6f55c9f"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_246_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"31cc0a63afc0628d6aa1ff72\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8bcb7f1cc28b3a73f2becca1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"39f4a6dc8272878c832460e8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1df62a053ce7fc020be3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"f9b6d0b2de2c8f6e0a06783e\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"71d4d149baefb00d9954c7ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"fb7dec2e487f3be7af69a6db\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10c107d9abba4ebb6bdfb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"1fa089bc42d59111cf9477ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f264bcc27f463dff9b71acdf\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"cdce3cff41f5c9923cdf20f9\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"00c4b851eecdc7b479b47211\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"a4788546eeb5e936db3d34ef\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"876e0e1a257980cf9e959854\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"THcZAt0yoZz\" ")
                .put(baseUrlOfSut + "/api/sessions/B8su/main_session/_EM_5003_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/B8su/main_session/_EM_5003_XYZ_"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_247_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"52ed1854aed0527f7ca22e82\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bbaa6e2de3895964e4bedab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383669a72127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6c0cf63b052ce8ecf1fcf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fca7d1a3be3dbf3d29278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4fe69cad0b1fc886397ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbcf53bdbbbe0cd3cc5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"1badeacebe05464aeaf4fa61\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"e7d5cdc8e6ff7fe6c6f55c9f\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"a09ec875bbf23ced4a8014a1\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"ccf7b6ada0a2c3c345d8612a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"b810656eb06dc7ac2b494b49\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"_id\":{\"$oid\":\"e9bd5696ce2d26e67ac44b4f\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"jrXoKHKG\" ")
                .put(baseUrlOfSut + "/api/sessions/BUUuUU/custom_data/_EM_316_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/BUUuUU/custom_data/_EM_316_XYZ_"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_248_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"33dd0982b0d1439d7ca2ff91\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8bcc722be26a3c72f2bfec90\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"48f3a6caa472678a932260f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"7a0ef62b151df50c130be3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fbc6d1b2be2eb04e19079740\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d5c169cbcfbf1d9952b7ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b6ddd1e588f4ae8af68a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10b1f7c89aaa5faa5bcdb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"2fa089bc42d59111cf9479ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f2669cc47f553dfe9c9fbed0\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"]EMWB084BXYZ\u003c\" ")
                .put(baseUrlOfSut + "/api/sessions/B4su/custom_gene_list/_EM_6037_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/B4su/custom_gene_list/_EM_6037_XYZ_"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_249_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"32dd1963bec2528d6ca2fe62\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8bcb7f1cc28b3a73f2becba1\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"49e3b6caa274879c731260ea\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6b1df62a052ce7fc020be3e9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fab7d1a1ce1c9f6d1af6784e\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d4d149baefb00d9954c7ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0b5dec1e478e4ae7af6896ba\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10c107d9abba4ebb6bdfb4\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"1fa089bc42d59111cf9477ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"e373bcb27e463d00ab62abdf\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"y4Is9yp9hy6xD\" ")
                .put(baseUrlOfSut + "/api/sessions/B4s/genomic_chart/_EM_5003_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/B4s/genomic_chart/_EM_5003_XYZ_"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_250_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"52ed1854aed0527f7ca22e82\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bcaa6e2de3895964e4bedab4\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"3a03b5cb938357aa92128ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"6d0df63af63be8ecf0fdf3d9\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"eba8d0a3bd3dbe4d39278761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"52c3fe78cbcfb0fc9854a8ca\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87e8326\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbef52bdbcbe1dd3dd5c4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"9ddcc874cd61265473d8f8bb\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"4bdf0fe0bab32e0e41a3376a\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"jrXoLHK\" ")
                .put(baseUrlOfSut + "/api/sessions/BUUuUU/main_session/_EM_316_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/BUUuUU/main_session/_EM_316_XYZ_"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_251_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"62ec1753aee0517f7da12f72\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"bba96f3ee3784964e3bed9b3\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"4a04b5ca8383669a82127ff8\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"7b0df63c063ce8fdf0fdf3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fba6d2a3be4dae3e38289761\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d5ee7abbe0b0fd887387c9\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"3e9ede325ed4eaf4d87e8336\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"8ebbdf53bdbbbe0cd3cc5b4d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"7bea2e63f4a9f8962aea4bca\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"_id\":{\"$oid\":\"dbef6b0ff77aceaaa6ffb49a\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"jrXoLHK\" ")
                .put(baseUrlOfSut + "/api/sessions/BUUuUU/main_session/_EM_316_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/BUUuUU/main_session/_EM_316_XYZ_"));
    }
    
    
    /**
    * Calls:
    * (404) PUT:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_252_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"33dd0982b0d1439d7ca2ff91\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"_id\":{\"$oid\":\"8bcc722be26a3c72f2bfec90\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"48f3a6caa472678a932260f9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"_id\":{\"$oid\":\"7a0ef62b151df50c130be3e8\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"fbc5c0b2be1ec04f09089741\"}}")
            .and().insertInto("session", "group")
                .d("{\"_id\":{\"$oid\":\"61d5c169cbcfbf1d9952b7ab\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"0c6ddd1e588f4ae8af68a6cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"_id\":{\"$oid\":\"ca10b1f7c89aaa5faa5bcdb5\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"2fa089bc42d59111cf9479ba\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"_id\":{\"$oid\":\"f2779dd47f653dfd8ba0bed0\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"]EMWB084BPYZ\u003c\" ")
                .put(baseUrlOfSut + "/api/sessions/B4sy/genomic_chart/_EM_6037_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/B4sy/genomic_chart/_EM_6037_XYZ_"));
    }


}
