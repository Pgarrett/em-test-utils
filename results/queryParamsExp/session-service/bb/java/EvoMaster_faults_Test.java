/**
* LICENSE DISCLAIMER
* This file has been generated by EvoMaster.
* The content of this file is not subject to the license of EvoMaster itself, i.e., LGPL.
* This generated software (i.e., the test suite in this file) can be freely used, modified, 
* and distributed as you see fit without any restrictions.
*/
import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-08-18T20:38:14.799-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 32 tests
 * <br>
*  Covered targets: 87
 * <br>
*  Used time: 0h 26m 49s
 * <br>
*  Needed budget for current results: 100%
 * <br>
*  This file contains test cases that are likely to indicate faults.
*/
public class EvoMaster_faults_Test {

    
    private static String baseUrlOfSut = "http://localhost:8080";
    
    
    @BeforeClass
    public static void initClass() {
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    
    
    
    
    
    
    /**
    * Calls:
    * (500) GET:/api/sessions/{source}/{type}
    * Found 2 potential faults. Type-codes: 100, 101
    */
    @Test(timeout = 60000)
    public void test_0_getOnSessionShowsFaults_100_101() throws Exception {
        
        // Fault100. HTTP Status 500. null.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/KGvSeMXRH/custom_data")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/KGvSeMXRH/custom_data"));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/api/sessions/{source}/{type}
    * 2 - (500) GET:/api/sessions/{source}/{type}
    * Found 3 potential faults. Type-codes: 100, 101
    */
    @Test(timeout = 60000)
    public void test_1_getOnSessionShowsFaults_100_101() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" genomic_chart ")
                .post(baseUrlOfSut + "/api/sessions/l0Egj/settings")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/l0Egj/settings"));
        
        // Fault100. HTTP Status 500. null.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/l0Egj/settings")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/l0Egj/settings"));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/api/sessions/{source}/{type}
    * 2 - (500) GET:/api/sessions/{source}/{type}
    * Found 3 potential faults. Type-codes: 100, 101
    */
    @Test(timeout = 60000)
    public void test_2_getOnSessionShowsFaults_100_101() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" custom_gene_list ")
                .post(baseUrlOfSut + "/api/sessions/jlQBKZ79/custom_gene_list")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/jlQBKZ79/custom_gene_list"));
        
        // Fault100. HTTP Status 500. null.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/jlQBKZ79/custom_gene_list")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/jlQBKZ79/custom_gene_list"));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/sessions/{source}/{type}
    * Found 2 potential faults. Type-codes: 100, 101
    */
    @Test(timeout = 60000)
    public void test_3_postOnSessionShowsFaults_100_101() throws Exception {
        
        // Fault100. HTTP Status 500. null.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"custom_gene_list\" ")
                .post(baseUrlOfSut + "/api/sessions/t/custom_gene_list")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/t/custom_gene_list"));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/sessions/{source}/{type}
    * Found 2 potential faults. Type-codes: 100, 101
    */
    @Test(timeout = 60000)
    public void test_4_postOnSessionShowsFaults_100_101() throws Exception {
        
        // Fault100. HTTP Status 500. null.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"comparison_session\" ")
                .post(baseUrlOfSut + "/api/sessions/wwt/comparison_session")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/wwt/comparison_session"));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/api/sessions/{source}/{type}
    * 2 - (400) GET:/api/sessions/{source}/{type}
    * Found 2 potential faults of type-code 101
    */
    @Test(timeout = 60000)
    public void test_5_getOnSessionReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" group ")
                .post(baseUrlOfSut + "/api/sessions/JYS3I1qbt_f/EVOMASTER")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/JYS3I1qbt_f/EVOMASTER"));
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/JYS3I1qbt_f/EVOMASTER")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/JYS3I1qbt_f/EVOMASTER"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/sessions/{source}/{type}
    * Found 1 potential fault of type-code 101
    */
    @Test(timeout = 60000)
    public void test_6_postOnSessionReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" settings ")
                .post(baseUrlOfSut + "/api/sessions/81/settings")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/81/settings"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/api/sessions/{source}/{type}/{id}
    * Found 2 potential faults. Type-codes: 100, 101
    */
    @Test(timeout = 60000)
    public void test_7_getOnSessionShowsFaults_100_101() throws Exception {
        
        // Fault100. HTTP Status 500. null.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/F82iRgu/main_session/bnfZi")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/F82iRgu/main_session/bnfZi"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/api/sessions/{source}/{type}/query
    * Found 2 potential faults. Type-codes: 100, 101
    */
    @Test(timeout = 60000)
    public void test_8_getOnQueryShowsFaults_100_101() throws Exception {
        
        // Fault100. HTTP Status 500. null.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/wU2XVmtZ/custom_gene_list/query?" + 
                    "field=6_vY8y2ATu&" + 
                    "value=rg")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/wU2XVmtZ/custom_gene_list/query"));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/api/sessions/{source}/{type}
    * 2 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * 3 - (500) GET:/api/sessions/{source}/{type}/{id}
    * Found 5 potential faults. Type-codes: 100, 101
    */
    @Test(timeout = 60000)
    public void test_9_getOnSessionShowsFaults_100_101() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" comparison_session ")
                .post(baseUrlOfSut + "/api/sessions/XPje_oQqDw/virtual_study")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/XPje_oQqDw/virtual_study"));
        
        // Fault100. HTTP Status 500. null.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" RL9LXPl ")
                .put(baseUrlOfSut + "/api/sessions/XPje_oQqDw/virtual_study/Xt")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/XPje_oQqDw/virtual_study/Xt"));
        
        // Fault100. HTTP Status 500. null.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/XPje_oQqDw/virtual_study/Xt")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/XPje_oQqDw/virtual_study/Xt"));
    }
    
    
    /**
    * Calls:
    * 1 - (500) GET:/api/sessions/{source}/{type}/{id}
    * 2 - (200) GET:/info
    * 3 - (400) POST:/api/sessions/{source}/{type}/query/fetch
    * 4 - (200) GET:/info
    * 5 - (400) POST:/api/sessions/{source}/{type}/query/fetch
    * 6 - (500) GET:/api/sessions/{source}/{type}/{id}
    * Found 6 potential faults. Type-codes: 100, 101
    */
    @Test(timeout = 60000)
    public void test_10_getOnSessionShowsFaults_100_101() throws Exception {
        
        // Fault100. HTTP Status 500. null.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/NGbhzvy2syHwth/comparison_session/_MKrQ7p5E5C71dQ")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/NGbhzvy2syHwth/comparison_session/_MKrQ7p5E5C71dQ"));
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/info")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0.5.0-SNAPSHOT"));
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" group ")
                .post(baseUrlOfSut + "/api/sessions/LqQWPwL3rKyXI/group/query/fetch")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/LqQWPwL3rKyXI/group/query/fetch"));
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/info")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0.5.0-SNAPSHOT"));
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"custom_data\" ")
                .post(baseUrlOfSut + "/api/sessions/tbYa4b_A/custom_data/query/fetch")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/tbYa4b_A/custom_data/query/fetch"));
        
        // Fault100. HTTP Status 500. null.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/wJGCPB4FzW/genomic_chart/YsH1QN7N6")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/wJGCPB4FzW/genomic_chart/YsH1QN7N6"));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/api/sessions/{source}/{type}
    * 2 - (500) GET:/api/sessions/{source}/{type}/query
    * Found 3 potential faults. Type-codes: 100, 101
    */
    @Test(timeout = 60000)
    public void test_11_getOnQueryShowsFaults_100_101() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" group ")
                .post(baseUrlOfSut + "/api/sessions/FQy/main_session")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/FQy/main_session"));
        
        // Fault100. HTTP Status 500. null.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/FQy/main_session/query?" + 
                    "field=aq1rYcv_&" + 
                    "value=qYv8NWxBNzC")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/FQy/main_session/query"));
    }
    
    
    /**
    * Calls:
    * 1 - (500) POST:/api/sessions/{source}/{type}
    * 2 - (500) GET:/api/sessions/{source}/{type}/{id}
    * Found 4 potential faults. Type-codes: 100, 101
    */
    @Test(timeout = 60000)
    public void test_12_getOnSessionShowsFaults_100_101() throws Exception {
        
        // Fault100. HTTP Status 500. null.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"genomic_chart\" ")
                .post(baseUrlOfSut + "/api/sessions/hMWHt6Y/custom_data")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/hMWHt6Y/custom_data"));
        
        // Fault100. HTTP Status 500. null.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/hMWHt6Y/custom_data/z5HcsyKr")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/hMWHt6Y/custom_data/z5HcsyKr"));
    }
    
    
    /**
    * Calls:
    * (500) PUT:/api/sessions/{source}/{type}/{id}
    * Found 2 potential faults. Type-codes: 100, 101
    */
    @Test(timeout = 60000)
    public void test_13_putOnSessionShowsFaults_100_101() throws Exception {
        
        // Fault100. HTTP Status 500. null.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" o6rjeCfiC5gp ")
                .put(baseUrlOfSut + "/api/sessions/ivhqrXHCxv3MWg/settings/o6rjeCfiC5gp")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/ivhqrXHCxv3MWg/settings/o6rjeCfiC5gp"));
    }
    
    
    /**
    * Calls:
    * 1 - (500) POST:/api/sessions/{source}/{type}
    * 2 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * Found 4 potential faults. Type-codes: 100, 101
    */
    @Test(timeout = 60000)
    public void test_14_putOnSessionShowsFaults_100_101() throws Exception {
        
        // Fault100. HTTP Status 500. null.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"virtual_study\" ")
                .post(baseUrlOfSut + "/api/sessions/Jeb18/group")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/Jeb18/group"));
        
        // Fault100. HTTP Status 500. null.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" HqD0XiirudZl ")
                .put(baseUrlOfSut + "/api/sessions/Jeb18/group/HqD0XiirudZl")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/Jeb18/group/HqD0XiirudZl"));
    }
    
    
    /**
    * Calls:
    * 1 - (500) POST:/api/sessions/{source}/{type}
    * 2 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * Found 4 potential faults. Type-codes: 100, 101
    */
    @Test(timeout = 60000)
    public void test_15_putOnSessionShowsFaults_100_101() throws Exception {
        
        // Fault100. HTTP Status 500. null.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"settings\" ")
                .post(baseUrlOfSut + "/api/sessions/IQktvZxIH/main_session")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/IQktvZxIH/main_session"));
        
        // Fault100. HTTP Status 500. null.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" lYBkGI6tGb ")
                .put(baseUrlOfSut + "/api/sessions/IQktvZxIH/main_session/lYBkGI6tGb")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/IQktvZxIH/main_session/lYBkGI6tGb"));
    }
    
    
    /**
    * Calls:
    * (500) PUT:/api/sessions/{source}/{type}/{id}
    * Found 2 potential faults. Type-codes: 100, 101
    */
    @Test(timeout = 60000)
    public void test_16_putOnSessionShowsFaults_100_101() throws Exception {
        
        // Fault100. HTTP Status 500. null.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" bVoWfOIh ")
                .put(baseUrlOfSut + "/api/sessions/EdO1ll6f0_k/custom_data/bVoWfOIh")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/EdO1ll6f0_k/custom_data/bVoWfOIh"));
    }
    
    
    /**
    * Calls:
    * 1 - (500) POST:/api/sessions/{source}/{type}
    * 2 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * Found 4 potential faults. Type-codes: 100, 101
    */
    @Test(timeout = 60000)
    public void test_17_putOnSessionShowsFaults_100_101() throws Exception {
        
        // Fault100. HTTP Status 500. null.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"EVOMASTER\" ")
                .post(baseUrlOfSut + "/api/sessions/EO_O6WZISuikwn/comparison_session")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/EO_O6WZISuikwn/comparison_session"));
        
        // Fault100. HTTP Status 500. null.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"BVgT\" ")
                .put(baseUrlOfSut + "/api/sessions/EO_O6WZISuikwn/comparison_session/BVgT")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/EO_O6WZISuikwn/comparison_session/BVgT"));
    }
    
    
    /**
    * Calls:
    * (500) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 2 potential faults. Type-codes: 100, 101
    */
    @Test(timeout = 60000)
    public void test_18_deleteOnSessionShowsFaults_100_101() throws Exception {
        
        // Fault100. HTTP Status 500. null.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/sessions/wJK9ALnp/virtual_study/QA")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/wJK9ALnp/virtual_study/QA"));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/api/sessions/{source}/{type}
    * 2 - (500) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 3 potential faults. Type-codes: 100, 101
    */
    @Test(timeout = 60000)
    public void test_19_deleteOnSessionShowsFaults_100_101() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" comparison_session ")
                .post(baseUrlOfSut + "/api/sessions/Pu3FHk7xERt4Bjce/main_session")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/Pu3FHk7xERt4Bjce/main_session"));
        
        // Fault100. HTTP Status 500. null.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/sessions/Pu3FHk7xERt4Bjce/main_session/y1VZtEWAtgPyhpSR")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/Pu3FHk7xERt4Bjce/main_session/y1VZtEWAtgPyhpSR"));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/api/sessions/{source}/{type}
    * 2 - (500) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 3 potential faults. Type-codes: 100, 101
    */
    @Test(timeout = 60000)
    public void test_20_deleteOnSessionShowsFaults_100_101() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" settings ")
                .post(baseUrlOfSut + "/api/sessions/G719HFQX/virtual_study")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/G719HFQX/virtual_study"));
        
        // Fault100. HTTP Status 500. null.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/sessions/G719HFQX/virtual_study/g_")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/G719HFQX/virtual_study/g_"));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/api/sessions/{source}/{type}
    * 2 - (null) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 1 potential fault of type-code 101
    */
    @Test(timeout = 60000)
    public void test_21_deleteOnSessionReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" EVOMASTER ")
                .post(baseUrlOfSut + "/api/sessions/ZNeCNodLMiuyb/genomic_chart")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/ZNeCNodLMiuyb/genomic_chart"));
        
        try{
            given().accept("*/*")
                    .delete(baseUrlOfSut + "/api/sessions/ZNeCNodLMiuyb/genomic_chart/pjVhsPLMoshLgF");
        } catch(Exception e){
        }
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/api/sessions/{source}/{type}
    * 2 - (400) GET:/api/sessions/{source}/{type}/query
    * Found 2 potential faults of type-code 101
    */
    @Test(timeout = 60000)
    public void test_22_getOnQueryReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" main_session ")
                .post(baseUrlOfSut + "/api/sessions/CkaUkO/EVOMASTER")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/CkaUkO/EVOMASTER"));
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/CkaUkO/EVOMASTER/query?" + 
                    "field=LfT7dZv&" + 
                    "value=z6I5U8")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/CkaUkO/EVOMASTER/query"));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/api/sessions/{source}/{type}
    * 2 - (400) GET:/api/sessions/{source}/{type}/{id}
    * Found 2 potential faults of type-code 101
    */
    @Test(timeout = 60000)
    public void test_23_getOnSessionReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"settings\" ")
                .post(baseUrlOfSut + "/api/sessions/tGQ500vvYMPiX/EVOMASTER")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/tGQ500vvYMPiX/EVOMASTER"));
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/tGQ500vvYMPiX/EVOMASTER/tvK4gAu")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/tGQ500vvYMPiX/EVOMASTER/tvK4gAu"));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/api/sessions/{source}/{type}/query/fetch
    * 2 - (500) DELETE:/api/sessions/{source}/{type}/{id}
    * 3 - (400) GET:/api/sessions/{source}/{type}/query
    * 4 - (400) POST:/api/sessions/{source}/{type}/query/fetch
    * Found 5 potential faults. Type-codes: 100, 101
    */
    @Test(timeout = 60000)
    public void test_24_postOnFetchShowsFaults_100_101() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" group ")
                .post(baseUrlOfSut + "/api/sessions/SGab/group/query/fetch")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/SGab/group/query/fetch"));
        
        // Fault100. HTTP Status 500. null.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/sessions/vGAZ/settings/6t78BwrP0kPkTPub")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/vGAZ/settings/6t78BwrP0kPkTPub"));
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/oSn/EVOMASTER/query?" + 
                    "field=P5sQnCyJA3&" + 
                    "value=V")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/oSn/EVOMASTER/query"));
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"virtual_study\" ")
                .post(baseUrlOfSut + "/api/sessions/PF8SjIY4F8QL0Qiz/virtual_study/query/fetch")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/PF8SjIY4F8QL0Qiz/virtual_study/query/fetch"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/sessions/{source}/{type}/query/fetch
    * Found 1 potential fault of type-code 101
    */
    @Test(timeout = 60000)
    public void test_25_postOnFetchReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" custom_gene_list ")
                .post(baseUrlOfSut + "/api/sessions/_4hifWcTKYme8O3h/custom_gene_list/query/fetch")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/_4hifWcTKYme8O3h/custom_gene_list/query/fetch"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/sessions/{source}/{type}/query/fetch
    * Found 1 potential fault of type-code 101
    */
    @Test(timeout = 60000)
    public void test_26_postOnFetchReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" group ")
                .post(baseUrlOfSut + "/api/sessions/p1IvRBH4qzW6Oboh/group/query/fetch")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/p1IvRBH4qzW6Oboh/group/query/fetch"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/sessions/{source}/{type}/query/fetch
    * Found 1 potential fault of type-code 101
    */
    @Test(timeout = 60000)
    public void test_27_postOnFetchReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"genomic_chart\" ")
                .post(baseUrlOfSut + "/api/sessions/_n13dW2XxVmH0/genomic_chart/query/fetch")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/_n13dW2XxVmH0/genomic_chart/query/fetch"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/sessions/{source}/{type}/query/fetch
    * Found 1 potential fault of type-code 101
    */
    @Test(timeout = 60000)
    public void test_28_postOnFetchReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"settings\" ")
                .post(baseUrlOfSut + "/api/sessions/cCiFn9xwFj9MFIv/settings/query/fetch")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/cCiFn9xwFj9MFIv/settings/query/fetch"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/sessions/{source}/{type}/query/fetch
    * Found 1 potential fault of type-code 101
    */
    @Test(timeout = 60000)
    public void test_29_postOnFetchReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"main_session\" ")
                .post(baseUrlOfSut + "/api/sessions/_6AJX1to/main_session/query/fetch")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/_6AJX1to/main_session/query/fetch"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/sessions/{source}/{type}/query/fetch
    * Found 1 potential fault of type-code 101
    */
    @Test(timeout = 60000)
    public void test_30_postOnFetchReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" custom_data ")
                .post(baseUrlOfSut + "/api/sessions/YlHPflVihCPI/custom_data/query/fetch")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/YlHPflVihCPI/custom_data/query/fetch"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/sessions/{source}/{type}/query/fetch
    * Found 1 potential fault of type-code 101
    */
    @Test(timeout = 60000)
    public void test_31_postOnFetchReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"EVOMASTER\" ")
                .post(baseUrlOfSut + "/api/sessions/_/EVOMASTER/query/fetch")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/_/EVOMASTER/query/fetch"));
    }


}
