import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.sql.dsl.SqlDsl.sql;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-02-12T15:26:56.675-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 98 tests
 * <br>
*  Covered targets: 2039
 * <br>
*  Used time: 0h 15m 13s
 * <br>
*  Needed budget for current results: 98%
 * <br>
*  This file contains test cases that represent successful calls.
*/
public class EvoMaster_successes_Test {

    
    private static final SutHandler controller = new em.embedded.se.devscout.scoutapi.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetDatabase(Arrays.asList("ACTIVITY","ACTIVITY_DERIVED","ACTIVITY_PROPERTIES","ACTIVITY_PROPERTIES_MEDIA_FILE","ACTIVITY_PROPERTIES_TAG","ACTIVITY_RATING","ACTIVITY_RELATION","MEDIA_FILE","MEDIA_FILE_KEYWORDS","SYSTEM_MESSAGE","TAG","TAG_DERIVED","USERS","USER_IDENTITY","tag"));
        controller.resetStateOfSUT();
    }
    
    
    
    
    /**
    * Calls:
    * (200) GET:/api/swagger.json
    */
    @Test(timeout = 60000)
    public void test_0_getOnSwagger_jsonReturnsObject() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/swagger.json")
                .then()
                .statusCode(200);
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/media_files/{id}
    */
    @Test(timeout = 60000)
    public void test_1_getOnV1Media_filWithQueryParamReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/media_files/965?EMextraParam123=_EM_38_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/system_messages/{id}
    */
    @Test(timeout = 60000)
    public void test_2_getOnV1System_messagReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_42_XYZ_")
                .get(baseUrlOfSut + "/api/v1/system_messages/542")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/tags/{id}
    */
    @Test(timeout = 60000)
    public void test_3_getOnTagReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/tags/109?EMextraParam123=_EM_2069_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/media_files/{id}
    */
    @Test(timeout = 60000)
    public void test_4_getOnV1Media_filReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/media_files/-445233750811812287")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/tags/{id}
    */
    @Test(timeout = 60000)
    public void test_5_getOnTagReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/tags/-601148665583854183?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/categories
    */
    @Test(timeout = 60000)
    public void test_6_getOnCategoriesReturnsEmptyList() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/categories?" + 
                    "group=2bLKIi8ErUkDF&" + 
                    "name=_EM_111_XYZ_&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/activities/{id}
    */
    @Test(timeout = 60000)
    public void test_7_getOnActivReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_9_XYZ_")
                .get(baseUrlOfSut + "/api/v2/activities/313?EMextraParam123=_EM_8_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/categories/{id}
    */
    @Test(timeout = 60000)
    public void test_8_getOnV1CategoriReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/categories/375")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/activities/{id}
    */
    @Test(timeout = 60000)
    public void test_9_getOnV1ActivWithQueryParamReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/activities/578?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/tags/{id}
    */
    @Test(timeout = 60000)
    public void test_10_getOnV2TagWithQueryParamsReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/tags/646?" + 
                    "attrs=_EM_46_XYZ_&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/media_files/{id}
    */
    @Test(timeout = 60000)
    public void test_11_getOnV1Media_filWithQueryParamsReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/media_files/641?" + 
                    "attrs=_EM_2061_XYZ_&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/system_messages/{id}
    */
    @Test(timeout = 60000)
    public void test_12_getOnSystem_messagReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/system_messages/602?" + 
                    "attrs=_EM_1118_XYZ_&" + 
                    "EMextraParam123=_EM_1119_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/system_messages/{id}
    */
    @Test(timeout = 60000)
    public void test_13_getOnSystem_messagReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/system_messages/-948210136?" + 
                    "attrs=_EM_18622_XYZ_&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/activities/{id}
    */
    @Test(timeout = 60000)
    public void test_14_getOnActivReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/activities/538779914311767714?" + 
                    "attrs=0Q&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/activities/{id}
    */
    @Test(timeout = 60000)
    public void test_15_getOnActivReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v2/activities/847?attrs=_EM_3061_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/categories/{id}
    */
    @Test(timeout = 60000)
    public void test_16_getOnCategoriReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/categories/567?attrs=_EM_87_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/categories
    */
    @Test(timeout = 60000)
    public void test_17_getOnV1CategoriesWithQueryParamsNegativeMin_activities_count() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_10564_XYZ_")
                .get(baseUrlOfSut + "/api/v1/categories?" + 
                    "name=_EM_10562_XYZ_&" + 
                    "min_activities_count=-610933998")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/activities/{id}
    */
    @Test(timeout = 60000)
    public void test_18_getOnV2ActivWithQueryParamsReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_12774_XYZ_")
                .get(baseUrlOfSut + "/api/v2/activities/-452431500744220279?" + 
                    "attrs=L&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/activities/{id}
    */
    @Test(timeout = 60000)
    public void test_19_getOnActivReturnsContent() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 306L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/activities/-134217150?" + 
                    "attrs=_EM_50_XYZ_&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/categories/{id}
    */
    @Test(timeout = 60000)
    public void test_20_getOnCategoriReturnsContent() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 6338L)
                .d("AUTHORIZATION_LEVEL", "16600")
                .d("NAME", "\"Wg8dGj9L2NHfs\"")
            .and().insertInto("USER_IDENTITY", 6337L)
                .d("DATE_CREATED", "\"1935-05-10 10:18:58\"")
                .d("TYPE", "\"API\"")
                .d("VALUE", "\"gf140Xq1nc\"")
                .d("USER_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/categories/-5276963738212289784?attrs=nN5SFYEq")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/media_files
    */
    @Test(timeout = 60000)
    public void test_21_getOnV1Media_filesWithQueryParamReturnsEmptyList() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/media_files?uri=NRq2WM")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/media_files
    */
    @Test(timeout = 60000)
    public void test_22_getOnMedia_filesReturns1Element() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 411L)
            .and().insertInto("MEDIA_FILE", 5210L)
                .d("URI", "\"6UkA5X1CPaBIjU\"")
            .and().insertInto("TAG", 5209L)
                .d("GRP", "\"CyxpOQfG\"")
                .d("NAME", "\"U\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/media_files?attrs=ihZRvFRe")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("'[0]'.isEmpty()", is(true));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/categories
    */
    @Test(timeout = 60000)
    public void test_23_getOnCategoriesReturnsEmptyList() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/categories?" + 
                    "group=pJ_eAYS71SPglu&" + 
                    "name=Ia458wh94AN&" + 
                    "min_activities_count=120&" + 
                    "attrs=_EM_33408_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/tags
    */
    @Test(timeout = 60000)
    public void test_24_getOnV2TagsWithQueryParamsNegativeMin_activities_countReturnsEmptyList() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "_EM_3132_XYZ_")
                .get(baseUrlOfSut + "/api/v2/tags?" + 
                    "min_activities_count=-766996851&" + 
                    "attrs=_EM_3131_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/categories
    */
    @Test(timeout = 60000)
    public void test_25_getOnCategoriesReturnsEmptyList() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/categories?" + 
                    "group=_EM_10559_XYZ_&" + 
                    "min_activities_count=994&" + 
                    "attrs=_EM_14796_XYZ_&" + 
                    "EMextraParam123=_EM_14797_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/system/roles
    */
    @Test(timeout = 60000)
    public void test_26_getOnRolesReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system/roles?EMextraParam123=_EM_44_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'permission_levels'.'category_edit'", numberMatches(10.0))
                .body("'permission_levels'.'mediaitem_create'", numberMatches(10.0))
                .body("'permission_levels'.'reference_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'system_message_read'", numberMatches(-100.0))
                .body("'permission_levels'.'auth_role_list'", numberMatches(20.0))
                .body("'permission_levels'.'reference_edit'", numberMatches(10.0))
                .body("'permission_levels'.'auth_user_create'", numberMatches(20.0))
                .body("'permission_levels'.'activity_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'comment_create'", numberMatches(0.0))
                .body("'permission_levels'.'category_create'", numberMatches(10.0))
                .body("'permission_levels'.'activity_edit'", numberMatches(10.0))
                .body("'permission_levels'.'reference_create'", numberMatches(10.0))
                .body("'permission_levels'.'mediaitem_edit'", numberMatches(10.0))
                .body("'permission_levels'.'auth_user_edit'", numberMatches(20.0))
                .body("'permission_levels'.'auth_profile_edit'", numberMatches(0.0))
                .body("'permission_levels'.'comment_edit'", numberMatches(10.0))
                .body("'permission_levels'.'system_message_manage'", numberMatches(20.0))
                .body("'permission_levels'.'mediaitem_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'auth_role_assignown'", numberMatches(10.0))
                .body("'permission_levels'.'rating_set_own'", numberMatches(0.0))
                .body("'permission_levels'.'auth_role_assign'", numberMatches(20.0))
                .body("'permission_levels'.'comment_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'activity_create'", numberMatches(0.0))
                .body("'role_levels'.'administrator'", numberMatches(20.0))
                .body("'role_levels'.'moderator'", numberMatches(10.0))
                .body("'role_levels'.'limited_user'", numberMatches(-1.0))
                .body("'role_levels'.'user'", numberMatches(0.0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/system_messages
    */
    @Test(timeout = 60000)
    public void test_27_getOnV1System_messagesWithQueryParamReturns1Element() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 410L)
                .d("KEY", "\"lzEKLrjO2SPcX7wu\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"F5jEJUde\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system_messages?attrs=4b2pPy3p1sp")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("'[0]'.isEmpty()", is(true));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/tags
    */
    @Test(timeout = 60000)
    public void test_28_getOnTagsReturnsEmptyList() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/tags?" + 
                    "group=yTOIH&" + 
                    "name=_EM_51626_XYZ_&" + 
                    "min_activities_count=280&" + 
                    "random=_EM_73984_XYZ_&" + 
                    "featured=PLwR2s340K4wBXk&" + 
                    "ratings_average_min=2hQ2&" + 
                    "participants=_EM_73985_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/tags
    */
    @Test(timeout = 60000)
    public void test_29_getOnTagsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 989L)
            .and().insertInto("USERS", 5768L)
                .d("AUTHORIZATION_LEVEL", "-523236")
                .d("NAME", "\"_EM_77199_XYZ_\"")
            .and().insertInto("ACTIVITY", 5767L)
            .and().insertInto("ACTIVITY_RATING", 5766L)
                .r("ACTIVITY_ID", 5767L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "false")
                .d("RATING", "692")
            .and().insertInto("MEDIA_FILE", 5788L)
                .d("AUTHOR", "\"_EM_79822_XYZ_\"")
                .d("CAPTURE_DATE", "\"2085-05-16 14:28:28\"")
                .d("COPY_RIGHT", "\"_EM_77200_XYZ_\"")
                .d("MIME_TYPE", "\"NyK5RUm82CUxW\"")
                .d("NAME", "\"TB51ven\"")
                .d("URI", "\"_EM_79815_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 6417L)
                .d("URI", "\"1kME1EHn1\"")
            .and().insertInto("TAG", 6416L)
                .d("GRP", "\"_EM_79823_XYZ_\"")
                .d("NAME", "\"JHKpzGmV1PQ\"")
                .r("MEDIA_FILE_ID", 6417L)
            .and().insertInto("MEDIA_FILE", 6420L)
                .d("URI", "\"H\"")
            .and().insertInto("TAG", 6419L)
                .d("GRP", "\"ZJrK\"")
                .d("NAME", "\"_EM_79824_XYZ_\"")
            .and().insertInto("TAG_DERIVED", 6418L)
                .r("TAG_ID", 6419L)
                .d("ACTIVITIES_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/tags?" + 
                    "group=WXO4fTHipGMOHeGU&" + 
                    "min_activities_count=530&" + 
                    "random=59QZ&" + 
                    "favourites=_EM_79820_XYZ_&" + 
                    "ratings_average_min=gEvU&" + 
                    "age_1=3o33m&" + 
                    "text=_EM_79821_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/tags
    */
    @Test(timeout = 60000)
    public void test_30_getOnTagsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 249L)
                .d("KEY", "\"0mOsn0cb`wRSboX\"")
                .d("VALID_FROM", "\"2091-11-14 00:43:16\"")
                .d("VALID_TO", "\"2011-07-18 15:55:02\"")
                .d("VALUE", "\"WsUU\"")
            .and().insertInto("ACTIVITY", 2069L)
            .and().insertInto("USERS", 2072L)
                .d("AUTHORIZATION_LEVEL", "32")
                .d("NAME", "\"Ra\"")
            .and().insertInto("ACTIVITY", 2071L)
            .and().insertInto("ACTIVITY_RATING", 2070L)
                .r("ACTIVITY_ID", 2071L)
                .d("USER_ID", "1")
                .d("FAVOURITE", "false")
                .d("RATING", "NULL")
            .and().insertInto("MEDIA_FILE", 4825L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"1993-12-12 04:04:35\"")
                .d("COPY_RIGHT", "\"_EM_71588_XYZ_\"")
                .d("MIME_TYPE", "\"gdbskZvqOTAP3LU6\"")
                .d("NAME", "\"z2DfTlM\"")
                .d("URI", "\"cEM_69875_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 4831L)
                .d("URI", "\"33l5YWD6iP\"")
            .and().insertInto("USERS", 4830L)
                .d("AUTHORIZATION_LEVEL", "108")
                .d("NAME", "\"_EM_69876_XYZ_\"")
            .and().insertInto("ACTIVITY", 4829L)
            .and().insertInto("ACTIVITY", 4828L)
            .and().insertInto("ACTIVITY_PROPERTIES", 4827L)
                .r("ACTIVITY_ID", 2069L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 4826L)
                .r("ACTIVITY_PROPERTIES_ID", 4827L)
                .r("MEDIA_FILE_ID", 4831L)
                .d("FEATURED", "true")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/tags?" + 
                    "attrs=xJbpVbawASl6p&" + 
                    "random=w0qfatQI&" + 
                    "favourites=SaaAsqh7L&" + 
                    "ratings_average_min=xVs&" + 
                    "text=PPcjup7ImyI")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/system_messages
    */
    @Test(timeout = 60000)
    public void test_31_getOnV1System_messagesWithQueryParamReturnsEmptyList() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/system_messages?valid=now_and_future")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/tags
    */
    @Test(timeout = 60000)
    public void test_32_getOnTagsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 6673L)
                .d("AUTHORIZATION_LEVEL", "135")
                .d("NAME", "\"TUY6BIXpPgWN\"")
            .and().insertInto("ACTIVITY", 6672L)
            .and().insertInto("ACTIVITY", 6671L)
            .and().insertInto("ACTIVITY_PROPERTIES", 6670L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "NULL")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "\"1977-02-03 06:30:06\"")
                .d("DATE_UPDATED", "\"2067-03-24 02:43:53\"")
                .d("DESCRIPTION_INTRODUCTION", "NULL")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "\"Lwao88Ka\"")
                .d("DESCRIPTION_NOTES", "NULL")
                .d("DESCRIPTION_PREPARE", "\"5oVy\"")
                .d("DESCRIPTION_SAFETY", "\"THRq2ETIO\"")
                .d("FEATURED", "false")
                .d("NAME", "\"qMzA\"")
                .d("PARTICIPANTS_MAX", "13")
                .d("PARTICIPANTS_MIN", "486")
                .d("SOURCE", "\"PCZx\"")
                .d("TIME_MAX", "-268633613")
                .d("TIME_MIN", "532")
                .r("ACTIVITY_ID", 6671L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 6671L)
            .and().insertInto("ACTIVITY", 6675L)
            .and().insertInto("ACTIVITY_DERIVED", 6674L)
                .r("ACTIVITY_ID", 6672L)
                .d("FAVOURITES_COUNT", "NULL")
                .d("RATINGS_AVG", "-3117.1723931018687")
                .d("RATINGS_COUNT", "NULL")
                .d("RATINGS_SUM", "NULL")
            .and().insertInto("MEDIA_FILE", 7497L)
                .d("URI", "\"ClCi2JUUWmQ\"")
            .and().insertInto("TAG", 7496L)
                .d("GRP", "\"Ze_2_bha\"")
                .d("NAME", "\"8i3uKZ82hz7\"")
                .r("MEDIA_FILE_ID", 7497L)
            .and().insertInto("MEDIA_FILE", 7509L)
                .d("URI", "\"QpVkGD\"")
            .and().insertInto("TAG", 7508L)
                .d("GRP", "\"z50tsv\"")
                .d("NAME", "\"\"")
            .and().insertInto("TAG_DERIVED", 7507L)
                .r("TAG_ID", 7496L)
                .d("ACTIVITIES_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/tags?" + 
                    "group=gLJ&" + 
                    "name=uOoco0I&" + 
                    "min_activities_count=379&" + 
                    "attrs=BmeZb&" + 
                    "random=btybffMWR0DV5pcAe&" + 
                    "featured=26f1Vmi2&" + 
                    "favourites=3AF&" + 
                    "text=Tno_TzaBCT2qE")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/tags
    */
    @Test(timeout = 60000)
    public void test_33_getOnTagsReturnsEmptyList() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/tags?" + 
                    "group=4hxf0jQ4cEiVbRc&" + 
                    "min_activities_count=872&" + 
                    "attrs=cNkE&" + 
                    "favourites=U&" + 
                    "age_1=_EM_73074_XYZ_&" + 
                    "text=5GhU")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/tags
    */
    @Test(timeout = 60000)
    public void test_34_getOnTagsReturnsEmptyList() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/tags?" + 
                    "min_activities_count=876&" + 
                    "attrs=_EM_78676_XYZ_&" + 
                    "random=0rB11SWYJNbM&" + 
                    "featured=_EM_78678_XYZ_&" + 
                    "age_1=_EM_78679_XYZ_&" + 
                    "text=_EM_78680_XYZ_&" + 
                    "participants=JmDVyRAHozAu9555")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/system_messages
    */
    @Test(timeout = 60000)
    public void test_35_getOnV1System_messagesWithQueryParamsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 415L)
                .d("KEY", "\"_EM_29781_XYZ_\"")
                .d("VALID_FROM", "\"2003-01-17 05:50:41\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"\"")
            .and().insertInto("ACTIVITY", 416L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/system_messages?" + 
                    "key=_EM_4545_XYZ_&" + 
                    "valid=now")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/media_files
    */
    @Test(timeout = 60000)
    public void test_36_getOnV1Media_filesWithQueryParamsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 249L)
                .d("KEY", "\"_EM_72006_XYZ_\"")
                .d("VALID_FROM", "\"2091-11-14 00:43:16\"")
                .d("VALID_TO", "\"1979-11-18 15:55:02\"")
                .d("VALUE", "\"Frokz\"")
            .and().insertInto("ACTIVITY", 2069L)
            .and().insertInto("USERS", 2072L)
                .d("AUTHORIZATION_LEVEL", "-32")
                .d("NAME", "\"Ra\"")
            .and().insertInto("ACTIVITY", 2071L)
            .and().insertInto("ACTIVITY_RATING", 2070L)
                .r("ACTIVITY_ID", 2071L)
                .d("USER_ID", "1")
                .d("FAVOURITE", "false")
                .d("RATING", "NULL")
            .and().insertInto("MEDIA_FILE", 4825L)
                .d("AUTHOR", "\"6YMNP2h\"")
                .d("CAPTURE_DATE", "\"2000-11-04 08:00:34\"")
                .d("COPY_RIGHT", "\"Lo3iKeuFS3A\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "NULL")
                .d("URI", "\"_EM_69875_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 4831L)
                .d("URI", "\"13lUYVDUiQ\"")
            .and().insertInto("USERS", 4830L)
                .d("AUTHORIZATION_LEVEL", "110")
                .d("NAME", "\"_EM_69876_XYZ_\"")
            .and().insertInto("ACTIVITY", 4829L)
            .and().insertInto("ACTIVITY", 4828L)
            .and().insertInto("ACTIVITY_PROPERTIES", 4827L)
                .r("ACTIVITY_ID", 4828L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 4826L)
                .r("ACTIVITY_PROPERTIES_ID", 4827L)
                .r("MEDIA_FILE_ID", 4825L)
                .d("FEATURED", "true")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/media_files?" + 
                    "uri=_EM_72005_XYZ_&" + 
                    "attrs=t")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/system_messages
    */
    @Test(timeout = 60000)
    public void test_37_getOnV1System_messagesWithQueryParamsReturns1Element() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 128L)
                .d("KEY", "\"OLQkokzYJ16\"")
                .d("VALID_FROM", "\"1904-11-14 21:50:46\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"_EM_7904_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system_messages?" + 
                    "key=OLQkokzYJ16&" + 
                    "valid=now&" + 
                    "attrs=_EM_7905_XYZ_&" + 
                    "EMextraParam123=_EM_7906_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("'[0]'.isEmpty()", is(true));
    }
    
    
    /**
    * Calls:
    * (200) POST:/api/v1/categories
    */
    @Test(timeout = 60000)
    public void test_38_postOnV1CategoriesWithQueryParamsEmptyGroupReturns200() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 5323L)
                .d("AUTHOR", "\"_QL5obyz\"")
                .d("CAPTURE_DATE", "\"2081-02-20 15:54:52\"")
                .d("COPY_RIGHT", "\"X2tzt4Lv5\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "NULL")
                .d("URI", "\"s2rBpKZLW8MCH\"")
            .and().insertInto("ACTIVITY", 5326L)
            .and().insertInto("USERS", 8935L)
                .d("AUTHORIZATION_LEVEL", "599")
                .d("NAME", "\"mG8IlbMqi6OqR\"")
            .and().insertInto("ACTIVITY", 8934L)
            .and().insertInto("ACTIVITY", 8933L)
            .and().insertInto("ACTIVITY_PROPERTIES", 8932L)
                .d("AGE_MAX", "-512")
                .d("AGE_MIN", "NULL")
                .d("DATE_CREATED", "\"2000-10-22 16:29:01\"")
                .d("DATE_PUBLISHED", "\"2087-08-22 13:37:10\"")
                .d("DATE_UPDATED", "\"2000-05-30 22:41:14\"")
                .d("DESCRIPTION_INTRODUCTION", "\"3lCwnza06EKbm55\"")
                .d("DESCRIPTION_MAIN", "\"\"")
                .d("DESCRIPTION_MATERIAL", "\"2Jz2z6dcP\"")
                .d("DESCRIPTION_NOTES", "\"pIjmddZgc3gSTV\"")
                .d("DESCRIPTION_PREPARE", "\"X\"")
                .d("DESCRIPTION_SAFETY", "\"q\"")
                .d("FEATURED", "false")
                .d("NAME", "\"Nm2WjXoxm\"")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "109")
                .d("SOURCE", "\"UUx07o\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 8934L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 5326L)
            .and().insertInto("ACTIVITY", 8937L)
            .and().insertInto("ACTIVITY_DERIVED", 8936L)
                .r("ACTIVITY_ID", 5326L)
                .d("FAVOURITES_COUNT", "NULL")
                .d("RATINGS_AVG", "NULL")
                .d("RATINGS_COUNT", "815")
                .d("RATINGS_SUM", "809")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"\", " + 
                    " \"name\": \"M\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/categories?" + 
                    "name=M&" + 
                    "group=")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString(""))
                .body("'name'", containsString("M"))
                .body("'activities_count'", numberMatches(0.0));
    }
    
    
    /**
    * Calls:
    * (200) POST:/api/v1/categories
    */
    @Test(timeout = 60000)
    public void test_39_postOnV1CategoriesWithQueryParamReturns200() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 5323L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2081-02-20 15:54:52\"")
                .d("COPY_RIGHT", "\"X2tzt4Lv5\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "NULL")
                .d("URI", "\"s2rBpKZLW8MCHS\"")
            .and().insertInto("ACTIVITY", 5326L)
            .and().insertInto("USERS", 8935L)
                .d("AUTHORIZATION_LEVEL", "599")
                .d("NAME", "\"mG8IlbMqi6OqR\"")
            .and().insertInto("ACTIVITY", 8934L)
            .and().insertInto("ACTIVITY", 8933L)
            .and().insertInto("ACTIVITY_PROPERTIES", 8932L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "NULL")
                .d("DATE_CREATED", "\"1933-10-22 16:38:01\"")
                .d("DATE_PUBLISHED", "\"2087-08-22 13:37:10\"")
                .d("DATE_UPDATED", "\"2000-05-30 22:41:14\"")
                .d("DESCRIPTION_INTRODUCTION", "\"3lCwnza06EKbm55\"")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "\"2Jz2z6dcP\"")
                .d("DESCRIPTION_NOTES", "\"pIjmddZgc3gSRV\"")
                .d("DESCRIPTION_PREPARE", "\"X\"")
                .d("DESCRIPTION_SAFETY", "\"q\"")
                .d("FEATURED", "false")
                .d("NAME", "\"Nm2WjXoxm\"")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "\"UUx07o\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 8934L)
                .d("AUTHOR_ID", "NULL")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("ACTIVITY", 8937L)
            .and().insertInto("ACTIVITY_DERIVED", 8936L)
                .r("ACTIVITY_ID", 5326L)
                .d("FAVOURITES_COUNT", "NULL")
                .d("RATINGS_AVG", "NULL")
                .d("RATINGS_COUNT", "815")
                .d("RATINGS_SUM", "809")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"\", " + 
                    " \"name\": \"M\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/categories?attrs=jfE9L")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString(""))
                .body("'name'", containsString("M"))
                .body("'activities_count'", numberMatches(0.0));
    }
    
    
    /**
    * Calls:
    * (200) POST:/api/v1/users
    */
    @Test(timeout = 60000)
    public void test_40_postOnUsersReturns200() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"M4F4uRkIi\", " + 
                    " \"email_address\": \"P90t\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/users?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'name'", containsString("M4F4uRkIi"))
                .body("'email_address'", containsString("P90t"))
                .body("'authorization_level'", numberMatches(0.0))
                .body("'identities'.size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/favourites
    */
    @Test(timeout = 60000)
    public void test_41_getOnFavouritesReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/favourites?" + 
                    "age_2=6&" + 
                    "time_2=DDfBsyEAlO6&" + 
                    "participants=5ktUKPVazyz")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/favourites
    */
    @Test(timeout = 60000)
    public void test_42_getOnFavouritesReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/favourites?" + 
                    "favourites=1&" + 
                    "name=_EM_48379_XYZ_&" + 
                    "time_2=_EM_63907_XYZ_&" + 
                    "attrs=tjhvOHYM9xI")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/users
    */
    @Test(timeout = 60000)
    public void test_43_getOnUsersReturns3Elements() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/users?attrs=DQDvE4zhSpXj")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(3))
                .body("'[0]'.isEmpty()", is(true))
                .body("'[1]'.isEmpty()", is(true))
                .body("'[2]'.isEmpty()", is(true));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/users/{id}
    */
    @Test(timeout = 60000)
    public void test_44_getOnV1UserReturnsContent() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 249L)
                .d("KEY", "\"0mOsn0cb_xRSboX\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"1979-11-18 22:55:34\"")
                .d("VALUE", "\"Frqk\"")
            .and().insertInto("ACTIVITY", 806L)
            .and().insertInto("USERS", 809L)
                .d("AUTHORIZATION_LEVEL", "307")
                .d("NAME", "\"ZVVgoXcF1zHWrPP\"")
            .and().insertInto("ACTIVITY", 808L)
            .and().insertInto("ACTIVITY_RATING", 807L)
                .r("ACTIVITY_ID", 806L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "true")
                .d("RATING", "423")
            .and().insertInto("MEDIA_FILE", 2376L)
                .d("URI", "\"L7OHhunk4\"")
            .and().insertInto("TAG", 2375L)
                .d("GRP", "\"4Jg\"")
                .d("NAME", "\"3M2uHHKBF1vvBlK\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/users/-1089929298815271106")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) POST:/api/v1/system_messages
    */
    @Test(timeout = 60000)
    public void test_45_postOnV1System_messagesReturns200() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 249L)
                .d("KEY", "\"0mOsn0cb`wRSboX\"")
                .d("VALID_FROM", "\"2091-11-14 00:43:16\"")
                .d("VALID_TO", "\"2011-07-18 15:55:02\"")
                .d("VALUE", "\"WsUU\"")
            .and().insertInto("ACTIVITY", 2069L)
            .and().insertInto("USERS", 2072L)
                .d("AUTHORIZATION_LEVEL", "32")
                .d("NAME", "\"Ra\"")
            .and().insertInto("ACTIVITY", 2071L)
            .and().insertInto("ACTIVITY_RATING", 2070L)
                .r("ACTIVITY_ID", 2071L)
                .d("USER_ID", "1")
                .d("FAVOURITE", "false")
                .d("RATING", "NULL")
            .and().insertInto("MEDIA_FILE", 4825L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"1993-12-12 04:04:35\"")
                .d("COPY_RIGHT", "\"_EM_71588_XYZ_\"")
                .d("MIME_TYPE", "\"gdbskZvqOTAP3LU6\"")
                .d("NAME", "\"z2DfTlM\"")
                .d("URI", "\"cEM_69875_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 4831L)
                .d("URI", "\"33l5YWD6iP\"")
            .and().insertInto("USERS", 4830L)
                .d("AUTHORIZATION_LEVEL", "108")
                .d("NAME", "\"_EM_69876_XYZ_\"")
            .and().insertInto("ACTIVITY", 4829L)
            .and().insertInto("ACTIVITY", 4828L)
            .and().insertInto("ACTIVITY_PROPERTIES", 4827L)
                .r("ACTIVITY_ID", 2069L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 4826L)
                .r("ACTIVITY_PROPERTIES_ID", 4827L)
                .r("MEDIA_FILE_ID", 4831L)
                .d("FEATURED", "true")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"key\": \"mHkfQrBftYk\", " + 
                    " \"value\": \"BlUttl\", " + 
                    " \"valid_to\": \"2091-00-04T15:45:47.529Z\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/system_messages")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'key'", containsString("mHkfQrBftYk"))
                .body("'value'", containsString("BlUttl"))
                .body("'valid_to'", containsString("2090-12-04T15:45:47.529Z"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/users/{id}
    */
    @Test(timeout = 60000)
    public void test_46_getOnV1UserWithQueryParamsReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "_EM_3092_XYZ_")
                .get(baseUrlOfSut + "/api/v1/users/525?" + 
                    "attrs=7l3QudD_TW1N&" + 
                    "EMextraParam123=_EM_3091_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/users
    */
    @Test(timeout = 60000)
    public void test_47_getOnUsersReturns1Element() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/users?name=INTEGRATION+TEST+MODERATOR")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'name'", containsString("INTEGRATION TEST MODERATOR"))
                .body("[0].'email_address'", nullValue())
                .body("[0].'authorization_level'", numberMatches(10.0))
                .body("[0].'identities'.size()", equalTo(1))
                .body("[0].'identities'[0].'date_created'", numberMatches(9.811692E11))
                .body("[0].'identities'[0].'type'", containsString("API"))
                .body("[0].'identities'[0].'value'", containsString("moderator"));
    }
    
    
    /**
    * Calls:
    * (200) POST:/api/v1/system_messages
    */
    @Test(timeout = 60000)
    public void test_48_postOnV1System_messagesWithQueryParamReturns200() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 249L)
                .d("KEY", "\"0mOsn0cb`wRSboX\"")
                .d("VALID_FROM", "\"2091-11-14 00:43:16\"")
                .d("VALID_TO", "\"2011-07-18 15:55:02\"")
                .d("VALUE", "\"WsUU\"")
            .and().insertInto("ACTIVITY", 2069L)
            .and().insertInto("USERS", 2072L)
                .d("AUTHORIZATION_LEVEL", "32")
                .d("NAME", "\"Ra\"")
            .and().insertInto("ACTIVITY", 2071L)
            .and().insertInto("ACTIVITY_RATING", 2070L)
                .r("ACTIVITY_ID", 2071L)
                .d("USER_ID", "1")
                .d("FAVOURITE", "false")
                .d("RATING", "NULL")
            .and().insertInto("MEDIA_FILE", 4825L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"1993-12-12 04:04:35\"")
                .d("COPY_RIGHT", "\"_EM_71588_XYZ_\"")
                .d("MIME_TYPE", "\"gdbskZvqOTAP3LU6\"")
                .d("NAME", "\"z2DfTlM\"")
                .d("URI", "\"cEM_69875_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 4831L)
                .d("URI", "\"33l5YWD6iP\"")
            .and().insertInto("USERS", 4830L)
                .d("AUTHORIZATION_LEVEL", "108")
                .d("NAME", "\"_EM_69876_XYZ_\"")
            .and().insertInto("ACTIVITY", 4829L)
            .and().insertInto("ACTIVITY", 4828L)
            .and().insertInto("ACTIVITY_PROPERTIES", 4827L)
                .r("ACTIVITY_ID", 2069L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 4826L)
                .r("ACTIVITY_PROPERTIES_ID", 4827L)
                .r("MEDIA_FILE_ID", 4831L)
                .d("FEATURED", "true")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"key\": \"Th\", " + 
                    " \"value\": \"2UAOKcQC_inwgIF\", " + 
                    " \"valid_from\": \"1964-13-09T09:23:02.882Z\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/system_messages?attrs=0i")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'key'", containsString("Th"))
                .body("'value'", containsString("2UAOKcQC_inwgIF"))
                .body("'valid_from'", containsString("1965-01-09T09:23:02.882Z"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/users
    */
    @Test(timeout = 60000)
    public void test_49_getOnUsersReturns3Elements() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_1157_XYZ_")
                .get(baseUrlOfSut + "/api/v1/users?EMextraParam123=_EM_1156_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(3))
                .body("[0].'name'", containsString("INTEGRATION TEST USER"))
                .body("[0].'email_address'", nullValue())
                .body("[0].'authorization_level'", numberMatches(0.0))
                .body("[0].'identities'.size()", equalTo(1))
                .body("[0].'identities'[0].'date_created'", numberMatches(9.811692E11))
                .body("[0].'identities'[0].'type'", containsString("API"))
                .body("[0].'identities'[0].'value'", containsString("user"))
                .body("[1].'name'", containsString("INTEGRATION TEST MODERATOR"))
                .body("[1].'email_address'", nullValue())
                .body("[1].'authorization_level'", numberMatches(10.0))
                .body("[1].'identities'.size()", equalTo(1))
                .body("[1].'identities'[0].'date_created'", numberMatches(9.811692E11))
                .body("[1].'identities'[0].'type'", containsString("API"))
                .body("[1].'identities'[0].'value'", containsString("moderator"))
                .body("[2].'name'", containsString("INTEGRATION TEST ADMINISTRATOR"))
                .body("[2].'email_address'", nullValue())
                .body("[2].'authorization_level'", numberMatches(20.0))
                .body("[2].'identities'.size()", equalTo(1))
                .body("[2].'identities'[0].'date_created'", numberMatches(9.811692E11))
                .body("[2].'identities'[0].'type'", containsString("API"))
                .body("[2].'identities'[0].'value'", containsString("administrator"));
    }
    
    
    /**
    * Calls:
    * (200) POST:/api/v2/tags
    */
    @Test(timeout = 60000)
    public void test_50_postOnV2TagsWithQueryParamReturns200() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"Xot2LxL34Ifr0\", " + 
                    " \"name\": \"YMhjAOy\", " + 
                    " \"activities_count\": 429 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/tags?name=ujaIF_e")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("Xot2LxL34Ifr0"))
                .body("'name'", containsString("YMhjAOy"))
                .body("'activities_count'", numberMatches(429.0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/favourites
    */
    @Test(timeout = 60000)
    public void test_51_getOnFavouritesReturns1Element() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 1168L)
                .d("URI", "\"Gc7WTd80TqPCUk\"")
            .and().insertInto("TAG", 1167L)
                .d("GRP", "\"Imd9duV\"")
                .d("NAME", "\"d42dc37\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("USERS", 1196L)
                .d("AUTHORIZATION_LEVEL", "538")
                .d("NAME", "\"cqkE3Y\"")
            .and().insertInto("ACTIVITY", 1195L)
            .and().insertInto("ACTIVITY_RATING", 1194L)
                .r("ACTIVITY_ID", 1195L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "true")
                .d("RATING", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/favourites")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0]", numberMatches(1.0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/users/{id}
    */
    @Test(timeout = 60000)
    public void test_52_getOnUserReturnsObject() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/users/1")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'name'", containsString("INTEGRATION TEST USER"))
                .body("'email_address'", nullValue())
                .body("'authorization_level'", numberMatches(0.0))
                .body("'identities'.size()", equalTo(1))
                .body("'identities'[0].'date_created'", numberMatches(9.811692E11))
                .body("'identities'[0].'type'", containsString("API"))
                .body("'identities'[0].'value'", containsString("user"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/favourites
    */
    @Test(timeout = 60000)
    public void test_53_getOnFavouritesReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 227L)
            .and().insertInto("ACTIVITY", 6422L)
            .and().insertInto("ACTIVITY_RATING", 6421L)
                .r("ACTIVITY_ID", 6422L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "false")
                .d("RATING", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/favourites?" + 
                    "favourites=FgxYlL1eFGf&" + 
                    "age_2=H&" + 
                    "name=rLfON7N9tIOX&" + 
                    "time_2=2KfrJW5hlk6AMkA&" + 
                    "attrs=3BV_DzvF&" + 
                    "participants=_EM_79832_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/favourites
    */
    @Test(timeout = 60000)
    public void test_54_getOnFavouritesReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 989L)
            .and().insertInto("USERS", 5768L)
                .d("AUTHORIZATION_LEVEL", "-523236")
                .d("NAME", "\"_EM_77199_XYZ_\"")
            .and().insertInto("ACTIVITY", 5767L)
            .and().insertInto("ACTIVITY_RATING", 5766L)
                .r("ACTIVITY_ID", 989L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "false")
                .d("RATING", "692")
            .and().insertInto("MEDIA_FILE", 5788L)
                .d("AUTHOR", "\"\"")
                .d("CAPTURE_DATE", "\"2085-05-16 14:28:28\"")
                .d("COPY_RIGHT", "\"_EM_77200_XYZ_\"")
                .d("MIME_TYPE", "\"NyK5RUm82CUxW\"")
                .d("NAME", "\"TB51ven\"")
                .d("URI", "\"_EM_79815_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 6417L)
                .d("URI", "\"1kME1EHn1\"")
            .and().insertInto("TAG", 6416L)
                .d("GRP", "\"YPwAED^LwEkE\"")
                .d("NAME", "\"JHKpzGmV1PQ\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/favourites?" + 
                    "favourites=r1bkZhF3Tm&" + 
                    "age_2=YfILqmfFZ5yh93&" + 
                    "name=koohUlgD09Kl&" + 
                    "participants=%5BXtGOHzEIxk")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) POST:/api/v1/media_files
    */
    @Test(timeout = 60000)
    public void test_55_postOnV1Media_filesWithQueryParamsReturns200() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 5426L)
            .and().insertInto("ACTIVITY", 5428L)
            .and().insertInto("ACTIVITY_DERIVED", 5427L)
                .r("ACTIVITY_ID", 5428L)
                .d("FAVOURITES_COUNT", "61")
                .d("RATINGS_AVG", "2310.855492127292")
                .d("RATINGS_COUNT", "NULL")
                .d("RATINGS_SUM", "366")
            .and().insertInto("USERS", 5432L)
                .d("AUTHORIZATION_LEVEL", "598")
                .d("NAME", "\"1CYwu\"")
            .and().insertInto("ACTIVITY", 5431L)
            .and().insertInto("ACTIVITY", 5430L)
            .and().insertInto("ACTIVITY_PROPERTIES", 5429L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "-95")
                .d("DATE_CREATED", "\"1911-06-29 03:18:25\"")
                .d("DATE_PUBLISHED", "\"2092-10-09 11:46:22\"")
                .d("DATE_UPDATED", "\"2021-07-02 00:42:30\"")
                .d("DESCRIPTION_INTRODUCTION", "NULL")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "\"bHaaKjg\"")
                .d("DESCRIPTION_NOTES", "\"Pa4UI2\"")
                .d("DESCRIPTION_PREPARE", "\"\"")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "true")
                .d("NAME", "NULL")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "\"_09aKno_YMnKK6aT\"")
                .d("TIME_MAX", "464")
                .d("TIME_MIN", "1662394286")
                .r("ACTIVITY_ID", 5431L)
                .d("AUTHOR_ID", "NULL")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("SYSTEM_MESSAGE", 5573L)
                .d("KEY", "\"UUNo8P_BU\"")
                .d("VALID_FROM", "\"2025-11-10 22:16:20\"")
                .d("VALID_TO", "\"1927-05-22 12:54:47\"")
                .d("VALUE", "\"0sEExI4\"")
            .and().insertInto("ACTIVITY", 5098L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"IYghRmSnU86zg\", " + 
                    " \"uri\": \"a5eqsk\", " + 
                    " \"name\": \"Tt0mJo6NYuLWWR\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files?" + 
                    "uri=a5eqsk&" + 
                    "attrs=TX")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'mime_type'", containsString("IYghRmSnU86zg"))
                .body("'uri'", containsString("a5eqsk"))
                .body("'name'", containsString("Tt0mJo6NYuLWWR"));
    }
    
    
    /**
    * Calls:
    * (200) POST:/api/v1/media_files
    */
    @Test(timeout = 60000)
    public void test_56_postOnMedia_filesReturns200() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 5426L)
            .and().insertInto("ACTIVITY", 5428L)
            .and().insertInto("ACTIVITY_DERIVED", 5427L)
                .r("ACTIVITY_ID", 5426L)
                .d("FAVOURITES_COUNT", "61")
                .d("RATINGS_AVG", "2310.855492127292")
                .d("RATINGS_COUNT", "367")
                .d("RATINGS_SUM", "NULL")
            .and().insertInto("USERS", 5524L)
                .d("AUTHORIZATION_LEVEL", "94")
                .d("NAME", "\"gQu9TAMn7lG\"")
            .and().insertInto("ACTIVITY", 5523L)
            .and().insertInto("ACTIVITY", 5522L)
            .and().insertInto("ACTIVITY_PROPERTIES", 5521L)
                .d("AGE_MAX", "-1073741774")
                .d("AGE_MIN", "-1073741774")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "\"1935-09-11 16:23:16\"")
                .d("DESCRIPTION_INTRODUCTION", "\"XG\"")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "\"_EM_75423_XYZ_\"")
                .d("DESCRIPTION_NOTES", "\"Fb\"")
                .d("DESCRIPTION_PREPARE", "\"Pl\"")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "false")
                .d("NAME", "NULL")
                .d("PARTICIPANTS_MAX", "888")
                .d("PARTICIPANTS_MIN", "-2097111")
                .d("SOURCE", "\"qdUYsX\"")
                .d("TIME_MAX", "0")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 5428L)
                .r("AUTHOR_ID", 5524L)
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("ACTIVITY", 5098L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"IYghRmSnU86zg\", " + 
                    " \"uri\": \"a5eqsk\", " + 
                    " \"name\": \"Tt0mJo6NYuLWWR\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files?attrs=TX")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'mime_type'", containsString("IYghRmSnU86zg"))
                .body("'uri'", containsString("a5eqsk"))
                .body("'name'", containsString("Tt0mJo6NYuLWWR"));
    }
    
    
    /**
    * Calls:
    * (200) POST:/api/v1/categories
    */
    @Test(timeout = 60000)
    public void test_57_postOnV1CategoriesReturns200() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"1qD9ei8wRLPS\", " + 
                    " \"name\": \"JkTvSgAnEUQ\", " + 
                    " \"media_file\": { " + 
                    " \"mime_type\": \"_EM_56562_XYZ_\", " + 
                    " \"uri\": \"UHYjGMxLsm9W437\", " + 
                    " \"name\": \"Yoo3LFmxD9\", " + 
                    " \"capture_date\": \"1971-11-18T11:57:52.847Z\", " + 
                    " \"copy_right\": \"7DtqPSX\", " + 
                    " \"author\": \"Moc\" " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/categories")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("1qD9ei8wRLPS"))
                .body("'name'", containsString("JkTvSgAnEUQ"))
                .body("'media_file'.'mime_type'", containsString("_EM_56562_XYZ_"))
                .body("'media_file'.'uri'", containsString("UHYjGMxLsm9W437"))
                .body("'media_file'.'name'", containsString("Yoo3LFmxD9"))
                .body("'media_file'.'capture_date'", containsString("1971-11-18T11:57:52.847Z"))
                .body("'media_file'.'copy_right'", containsString("7DtqPSX"))
                .body("'media_file'.'author'", containsString("Moc"))
                .body("'activities_count'", numberMatches(0.0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/users/profile
    */
    @Test(timeout = 60000)
    public void test_58_getOnUsersProfileReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/users/profile")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'role_permissions'.size()", equalTo(9))
                .body("'role_permissions'", hasItems("activity_create", "activity_edit_own", "auth_profile_edit", "comment_create", "comment_edit_own", "mediaitem_edit_own", "rating_set_own", "reference_edit_own", "system_message_read"))
                .body("'name'", containsString("INTEGRATION TEST USER"))
                .body("'role'", containsString("user"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/users/profile
    */
    @Test(timeout = 60000)
    public void test_59_getOnProfileReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/users/profile?EMextraParam123=_EM_7913_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'role_permissions'.size()", equalTo(9))
                .body("'role_permissions'", hasItems("activity_create", "activity_edit_own", "auth_profile_edit", "comment_create", "comment_edit_own", "mediaitem_edit_own", "rating_set_own", "reference_edit_own", "system_message_read"))
                .body("'name'", containsString("INTEGRATION TEST USER"))
                .body("'role'", containsString("user"));
    }
    
    
    /**
    * Calls:
    * (200) POST:/api/v1/media_files
    */
    @Test(timeout = 60000)
    public void test_60_postOnMedia_filesReturns200() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 249L)
                .d("KEY", "\"0mOsn0cb_xRSboXh\"")
                .d("VALID_FROM", "\"2091-11-14 00:39:00\"")
                .d("VALID_TO", "\"1979-11-18 23:55:34\"")
                .d("VALUE", "\"Frqk\"")
            .and().insertInto("ACTIVITY", 2069L)
            .and().insertInto("USERS", 2072L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"Ra\"")
            .and().insertInto("ACTIVITY", 2071L)
            .and().insertInto("ACTIVITY_RATING", 2070L)
                .r("ACTIVITY_ID", 2071L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "true")
                .d("RATING", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"\", " + 
                    " \"uri\": \"UCtFH4akM\", " + 
                    " \"name\": \"bA6u711O4xBMDH\", " + 
                    " \"copy_right\": \"O2W\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files?uri=UCtFH4akM")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'mime_type'", containsString(""))
                .body("'uri'", containsString("UCtFH4akM"))
                .body("'name'", containsString("bA6u711O4xBMDH"))
                .body("'copy_right'", containsString("O2W"));
    }
    
    
    /**
    * Calls:
    * (200) POST:/api/v1/media_files
    */
    @Test(timeout = 60000)
    public void test_61_postOnV1Media_filesReturns200() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 209L)
            .and().insertInto("MEDIA_FILE", 3747L)
                .d("AUTHOR", "\"Brq\"")
                .d("CAPTURE_DATE", "\"2093-12-16 06:31:40\"")
                .d("COPY_RIGHT", "\"xg7hBYNk\"")
                .d("MIME_TYPE", "\"tCFkebyXGstiIG\"")
                .d("NAME", "NULL")
                .d("URI", "\"fkGM8K2H4E\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 0, " + 
                    " \"mime_type\": \"EI9TDU2R\", " + 
                    " \"uri\": \"be6Dzku\", " + 
                    " \"name\": \"ebDf\", " + 
                    " \"copy_right\": \"I9Ejxn1Ubj\", " + 
                    " \"author\": \"_EM_58348_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'mime_type'", containsString("EI9TDU2R"))
                .body("'uri'", containsString("be6Dzku"))
                .body("'name'", containsString("ebDf"))
                .body("'copy_right'", containsString("I9Ejxn1Ubj"))
                .body("'author'", containsString("_EM_58348_XYZ_"));
    }
    
    
    /**
    * Calls:
    * (200) POST:/api/v2/tags
    */
    @Test(timeout = 60000)
    public void test_62_postOnTagsReturns200() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 5323L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2049-10-20 23:54:52\"")
                .d("COPY_RIGHT", "\"X2tzt4Lv5\"")
                .d("MIME_TYPE", "\"lvFGDdK\"")
                .d("NAME", "\"QArP7L\"")
                .d("URI", "\"s2rBpKZLW8MCHS\"")
            .and().insertInto("ACTIVITY", 5326L)
            .and().insertInto("USERS", 6947L)
                .d("AUTHORIZATION_LEVEL", "693")
                .d("NAME", "\"7Pni5F7RxN\"")
            .and().insertInto("ACTIVITY", 6946L)
            .and().insertInto("ACTIVITY", 6945L)
            .and().insertInto("ACTIVITY_PROPERTIES", 6944L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "-1061")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "\"1953-10-04 15:12:22\"")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "NULL")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "\"Mk6TIfjTX9Wv2\"")
                .d("DESCRIPTION_NOTES", "NULL")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "\"lsWT4\"")
                .d("FEATURED", "NULL")
                .d("NAME", "\"_EM_89894_XYZ_\"")
                .d("PARTICIPANTS_MAX", "538")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "\"HTkMn4x\"")
                .d("TIME_MAX", "283")
                .d("TIME_MIN", "236")
                .r("ACTIVITY_ID", 5326L)
                .d("AUTHOR_ID", "NULL")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("ACTIVITY", 6949L)
            .and().insertInto("ACTIVITY_DERIVED", 6948L)
                .r("ACTIVITY_ID", 6945L)
                .d("FAVOURITES_COUNT", "550")
                .d("RATINGS_AVG", "NULL")
                .d("RATINGS_COUNT", "196")
                .d("RATINGS_SUM", "NULL")
            .and().insertInto("MEDIA_FILE", 9048L)
                .d("URI", "\"yGCKcsCyj13bJK\"")
            .and().insertInto("TAG", 9047L)
                .d("GRP", "\"XqV8tQUXvHET\"")
                .d("NAME", "\"KDYSv4\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"iS\", " + 
                    " \"name\": \"xfpYWfixEg_QZie\", " + 
                    " \"media_file\": { " + 
                    " \"uri\": \"iGFge1\", " + 
                    " \"copy_right\": \"\" " + 
                    " }, " + 
                    " \"activities_count\": 94 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/tags?" + 
                    "featured=XyfTaTvpP6jA9&" + 
                    "name=xfpYWfixEg_QZie&" + 
                    "text=&" + 
                    "group=iS&" + 
                    "attrs=f9Kooz")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("iS"))
                .body("'name'", containsString("xfpYWfixEg_QZie"))
                .body("'media_file'.'uri'", containsString("iGFge1"))
                .body("'media_file'.'copy_right'", containsString(""))
                .body("'activities_count'", numberMatches(94.0));
    }
    
    
    /**
    * Calls:
    * (200) POST:/api/v2/tags
    */
    @Test(timeout = 60000)
    public void test_63_postOnTagsReturns200() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 5323L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2049-10-20 23:54:52\"")
                .d("COPY_RIGHT", "\"X2tzt4Lv5\"")
                .d("MIME_TYPE", "\"lvFGDdO\"")
                .d("NAME", "\"QArP7L\"")
                .d("URI", "\"_EM_90105_XYZ_\"")
            .and().insertInto("ACTIVITY", 5326L)
            .and().insertInto("USERS", 6947L)
                .d("AUTHORIZATION_LEVEL", "693")
                .d("NAME", "\"7Pni5F7RxN\"")
            .and().insertInto("ACTIVITY", 6946L)
            .and().insertInto("ACTIVITY", 6945L)
            .and().insertInto("ACTIVITY_PROPERTIES", 6944L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "-1061")
                .d("DATE_CREATED", "\"1956-10-20 02:57:05\"")
                .d("DATE_PUBLISHED", "\"1969-10-01 15:12:22\"")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "NULL")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "\"Mk6TIfjTX9Wv2\"")
                .d("DESCRIPTION_NOTES", "NULL")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "\"lsWT4\"")
                .d("FEATURED", "true")
                .d("NAME", "\"_EM_89894_XYZ_\"")
                .d("PARTICIPANTS_MAX", "538")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "\"HTkMn4x\"")
                .d("TIME_MAX", "282")
                .d("TIME_MIN", "238")
                .r("ACTIVITY_ID", 5326L)
                .d("AUTHOR_ID", "NULL")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("ACTIVITY", 6949L)
            .and().insertInto("ACTIVITY_DERIVED", 6948L)
                .r("ACTIVITY_ID", 5326L)
                .d("FAVOURITES_COUNT", "0")
                .d("RATINGS_AVG", "NULL")
                .d("RATINGS_COUNT", "196")
                .d("RATINGS_SUM", "748")
            .and().insertInto("MEDIA_FILE", 9048L)
                .d("URI", "\"yGCKcsCyj13bJK\"")
            .and().insertInto("TAG", 9047L)
                .d("GRP", "\"XqV8tQUXvHET\"")
                .d("NAME", "\"KDYSv4\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"iS\", " + 
                    " \"name\": \"xfpYWfixEg_QZie\", " + 
                    " \"media_file\": { " + 
                    " \"uri\": \"iGFge1\", " + 
                    " \"copy_right\": \"\" " + 
                    " }, " + 
                    " \"activities_count\": 94 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/tags?" + 
                    "min_activities_count=9JK9&" + 
                    "name=xfpYWfixEg_QZie&" + 
                    "text=&" + 
                    "group=iU&" + 
                    "attrs=f9Kooz")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("iS"))
                .body("'name'", containsString("xfpYWfixEg_QZie"))
                .body("'media_file'.'uri'", containsString("iGFge1"))
                .body("'media_file'.'copy_right'", containsString(""))
                .body("'activities_count'", numberMatches(94.0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/activities
    */
    @Test(timeout = 60000)
    public void test_64_getOnActivitiesReturns1Element() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 5323L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2049-10-20 23:54:52\"")
                .d("COPY_RIGHT", "\"X2tzt4Lv5\"")
                .d("MIME_TYPE", "\"lvFGDdK\"")
                .d("NAME", "\"QArP7L\"")
                .d("URI", "\"s2rBpKZLW8MCHS\"")
            .and().insertInto("ACTIVITY", 5326L)
            .and().insertInto("USERS", 6947L)
                .d("AUTHORIZATION_LEVEL", "693")
                .d("NAME", "\"7Pni5F7RxN\"")
            .and().insertInto("ACTIVITY", 6946L)
            .and().insertInto("ACTIVITY", 6945L)
            .and().insertInto("ACTIVITY_PROPERTIES", 6944L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "-1061")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "\"1953-10-04 15:12:22\"")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "NULL")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "\"Mk6TIfjTX9Wv2\"")
                .d("DESCRIPTION_NOTES", "NULL")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "\"lsWT4\"")
                .d("FEATURED", "NULL")
                .d("NAME", "\"_EM_89894_XYZ_\"")
                .d("PARTICIPANTS_MAX", "538")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "\"HTkMn4x\"")
                .d("TIME_MAX", "283")
                .d("TIME_MIN", "0")
                .r("ACTIVITY_ID", 5326L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 6945L)
            .and().insertInto("ACTIVITY", 6949L)
            .and().insertInto("ACTIVITY_DERIVED", 6948L)
                .r("ACTIVITY_ID", 6945L)
                .d("FAVOURITES_COUNT", "550")
                .d("RATINGS_AVG", "NULL")
                .d("RATINGS_COUNT", "196")
                .d("RATINGS_SUM", "NULL")
            .and().insertInto("USERS", 10931L)
                .d("AUTHORIZATION_LEVEL", "26")
                .d("NAME", "\"HZ\"")
            .and().insertInto("ACTIVITY", 10930L)
            .and().insertInto("ACTIVITY_RATING", 10929L)
                .r("ACTIVITY_ID", 6949L)
                .r("USER_ID", 6947L)
                .d("FAVOURITE", "false")
                .d("RATING", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "attrs=mmNIUKMLs4S7O&" + 
                    "random=229&" + 
                    "favourites=279")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("'[0]'.isEmpty()", is(true));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/activities
    */
    @Test(timeout = 60000)
    public void test_65_getOnV2ActivitiesWithQueryParamsFeaturedNegativeRatings_count_min() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "featured=true&" + 
                    "ages=&" + 
                    "ratings_count_min=-2153709086263129546&" + 
                    "ratings_average_min=0.2729180474400237&" + 
                    "favourites=753")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/activities
    */
    @Test(timeout = 60000)
    public void test_66_getOnActivitiesReturnsEmptyList() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_23510_XYZ_")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "attrs=5KfgjNeC&" + 
                    "categories=1&" + 
                    "favourites=790")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/activities
    */
    @Test(timeout = 60000)
    public void test_67_getOnActivitiesReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 5426L)
            .and().insertInto("ACTIVITY", 5428L)
            .and().insertInto("ACTIVITY_DERIVED", 5427L)
                .r("ACTIVITY_ID", 5428L)
                .d("FAVOURITES_COUNT", "61")
                .d("RATINGS_AVG", "2310.855492127292")
                .d("RATINGS_COUNT", "NULL")
                .d("RATINGS_SUM", "366")
            .and().insertInto("USERS", 5432L)
                .d("AUTHORIZATION_LEVEL", "598")
                .d("NAME", "\"1CYwu\"")
            .and().insertInto("ACTIVITY", 5431L)
            .and().insertInto("ACTIVITY", 5430L)
            .and().insertInto("ACTIVITY_PROPERTIES", 5429L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "-95")
                .d("DATE_CREATED", "\"1911-06-29 03:18:25\"")
                .d("DATE_PUBLISHED", "\"2092-10-09 11:46:22\"")
                .d("DATE_UPDATED", "\"2021-07-02 00:42:30\"")
                .d("DESCRIPTION_INTRODUCTION", "NULL")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "\"bHaaKjg\"")
                .d("DESCRIPTION_NOTES", "\"Pa4UI2\"")
                .d("DESCRIPTION_PREPARE", "\"\"")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "true")
                .d("NAME", "NULL")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "\"_09aKno_YMnKK6aT\"")
                .d("TIME_MAX", "464")
                .d("TIME_MIN", "1662394286")
                .r("ACTIVITY_ID", 5431L)
                .d("AUTHOR_ID", "NULL")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("SYSTEM_MESSAGE", 5573L)
                .d("KEY", "\"UUNo8P_BU\"")
                .d("VALID_FROM", "\"2025-11-10 22:16:20\"")
                .d("VALID_TO", "\"1927-05-22 12:54:47\"")
                .d("VALUE", "\"0sEExI4\"")
            .and().insertInto("ACTIVITY", 5098L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "attrs=TX&" + 
                    "featured=false&" + 
                    "id=2310&" + 
                    "ratings_count_min=2310&" + 
                    "random=373")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/activities
    */
    @Test(timeout = 60000)
    public void test_68_getOnV2ActivitiesWithQueryParamsNegativeFavouritesReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 6673L)
                .d("AUTHORIZATION_LEVEL", "135")
                .d("NAME", "\"TUY6BIXpPgWN\"")
            .and().insertInto("ACTIVITY", 6672L)
            .and().insertInto("ACTIVITY", 6671L)
            .and().insertInto("ACTIVITY_PROPERTIES", 6670L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "NULL")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "\"1977-02-03 06:30:06\"")
                .d("DATE_UPDATED", "\"2067-03-24 02:43:53\"")
                .d("DESCRIPTION_INTRODUCTION", "NULL")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "\"Lwao88Ka\"")
                .d("DESCRIPTION_NOTES", "NULL")
                .d("DESCRIPTION_PREPARE", "\"5oVy\"")
                .d("DESCRIPTION_SAFETY", "\"THRq2ETIO\"")
                .d("FEATURED", "false")
                .d("NAME", "\"qMzA\"")
                .d("PARTICIPANTS_MAX", "13")
                .d("PARTICIPANTS_MIN", "486")
                .d("SOURCE", "\"PCZx\"")
                .d("TIME_MAX", "-268633613")
                .d("TIME_MIN", "532")
                .r("ACTIVITY_ID", 6671L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 6671L)
            .and().insertInto("ACTIVITY", 6675L)
            .and().insertInto("ACTIVITY_DERIVED", 6674L)
                .r("ACTIVITY_ID", 6672L)
                .d("FAVOURITES_COUNT", "NULL")
                .d("RATINGS_AVG", "-3117.1723931018687")
                .d("RATINGS_COUNT", "NULL")
                .d("RATINGS_SUM", "NULL")
            .and().insertInto("MEDIA_FILE", 7497L)
                .d("URI", "\"ClCi2JUUWmQ\"")
            .and().insertInto("TAG", 7496L)
                .d("GRP", "\"Ze_2_bha\"")
                .d("NAME", "\"8i3uKZ82hz7\"")
                .r("MEDIA_FILE_ID", 7497L)
            .and().insertInto("MEDIA_FILE", 7509L)
                .d("URI", "\"QpVkGD\"")
            .and().insertInto("TAG", 7508L)
                .d("GRP", "\"z50tsv\"")
                .d("NAME", "\"\"")
            .and().insertInto("TAG_DERIVED", 7507L)
                .r("TAG_ID", 7496L)
                .d("ACTIVITIES_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "name=ooPXB086H&" + 
                    "ratings_average_min=1.7457088282204885&" + 
                    "random=559&" + 
                    "favourites=-30")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/activities
    */
    @Test(timeout = 60000)
    public void test_69_getOnV2ActivitiesWithQueryParamsNegativeRatings_average_minEmptyId() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 8864L)
                .d("AUTHORIZATION_LEVEL", "131")
                .d("NAME", "\"TOQeQllhfx9\"")
            .and().insertInto("ACTIVITY", 8863L)
            .and().insertInto("ACTIVITY", 8862L)
            .and().insertInto("ACTIVITY_PROPERTIES", 8861L)
                .d("AGE_MAX", "-2147483163")
                .d("AGE_MIN", "NULL")
                .d("DATE_CREATED", "\"1959-07-10 03:06:28\"")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "\"2003-03-28 10:06:48\"")
                .d("DESCRIPTION_INTRODUCTION", "NULL")
                .d("DESCRIPTION_MAIN", "\"8j\"")
                .d("DESCRIPTION_MATERIAL", "\"NTm6o\"")
                .d("DESCRIPTION_NOTES", "NULL")
                .d("DESCRIPTION_PREPARE", "\"enzu5SNFmjF49\"")
                .d("DESCRIPTION_SAFETY", "\"gXL\"")
                .d("FEATURED", "true")
                .d("NAME", "NULL")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "27")
                .d("SOURCE", "NULL")
                .d("TIME_MAX", "462")
                .d("TIME_MIN", "669")
                .r("ACTIVITY_ID", 8862L)
                .d("AUTHOR_ID", "NULL")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("ACTIVITY", 8866L)
            .and().insertInto("ACTIVITY_DERIVED", 8865L)
                .r("ACTIVITY_ID", 8863L)
                .d("FAVOURITES_COUNT", "73")
                .d("RATINGS_AVG", "0.7485224330910396")
                .d("RATINGS_COUNT", "-8375274316442148864")
                .d("RATINGS_SUM", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "name=6K9fJZ2&" + 
                    "text=_EM_80923_XYZ_&" + 
                    "id=&" + 
                    "ratings_count_min=2004224914&" + 
                    "ratings_average_min=-494.0&" + 
                    "random=807")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/activities
    */
    @Test(timeout = 60000)
    public void test_70_getOnActivitiesReturnsEmptyList() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "attrs=_EM_18721_XYZ_&" + 
                    "name=T91a81ac6tvHTgdd&" + 
                    "ratings_count_min=-338596252405741912&" + 
                    "random=316")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * 1 - (200) POST:/api/v1/media_files
    * 2 - (200) PUT:/api/v1/media_files/{id}
    * 3 - (204) DELETE:/api/v1/media_files/{id}
    */
    @Test(timeout = 60000)
    public void test_71_deleteOnMedia_filReturns204() throws Exception {
        
        String location_media_files = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"uri\": \"obAQ\", " + 
                    " \"name\": \"z5seS7z8bSoxnri\", " + 
                    " \"copy_right\": \"gNCRii6IkdCDJ\", " + 
                    " \"author\": \"yw75_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'uri'", containsString("obAQ"))
                .body("'name'", containsString("z5seS7z8bSoxnri"))
                .body("'copy_right'", containsString("gNCRii6IkdCDJ"))
                .body("'author'", containsString("yw75_"));
        location_media_files = "/api/v1/media_files" + "/" + res_0.extract().body().path("id").toString();
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"uri\": \"HlaixwkstS3\", " + 
                    " \"name\": \"ob66FOXD4Wj6\" " + 
                    " } ")
                .put(resolveLocation(location_media_files, baseUrlOfSut + "/api/v1/media_files/1662839127309131101"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'uri'", containsString("HlaixwkstS3"))
                .body("'name'", containsString("ob66FOXD4Wj6"))
                .body("'copy_right'", containsString("gNCRii6IkdCDJ"))
                .body("'author'", containsString("yw75_"));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_media_files, baseUrlOfSut + "/api/v1/media_files/1662839127309131101?verify_unused=false"))
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/activities
    */
    @Test(timeout = 60000)
    public void test_72_getOnActivitiesReturnsEmptyList() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "text=wW1&" + 
                    "ratings_average_min=0.5168041132369057&" + 
                    "random=563&" + 
                    "favourites=26")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/activities
    */
    @Test(timeout = 60000)
    public void test_73_getOnV1ActivitiesWithQueryParamsReturnsEmptyList() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/activities?" + 
                    "name=_EM_20709_XYZ_&" + 
                    "ratings_count_min=571&" + 
                    "ratings_average_min=0.1579095461457155&" + 
                    "random=135094252")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/activities
    */
    @Test(timeout = 60000)
    public void test_74_getOnActivitiesReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 5556L)
            .and().insertInto("ACTIVITY", 5555L)
            .and().insertInto("ACTIVITY_PROPERTIES", 5554L)
                .d("AGE_MAX", "-465")
                .d("AGE_MIN", "-715")
                .d("DATE_CREATED", "\"1941-01-23 07:42:50\"")
                .d("DATE_PUBLISHED", "\"1937-09-12 11:29:38\"")
                .d("DATE_UPDATED", "\"1932-10-25 15:47:55\"")
                .d("DESCRIPTION_INTRODUCTION", "NULL")
                .d("DESCRIPTION_MAIN", "\"1TRD8\"")
                .d("DESCRIPTION_MATERIAL", "\"GTlz8sguo\"")
                .d("DESCRIPTION_NOTES", "NULL")
                .d("DESCRIPTION_PREPARE", "\"XQR\"")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "NULL")
                .d("NAME", "\"AmuXCwLQN\"")
                .d("PARTICIPANTS_MAX", "242")
                .d("PARTICIPANTS_MIN", "984")
                .d("SOURCE", "\"zNqVPxMxfFTP_uV\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "73")
                .r("ACTIVITY_ID", 5555L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 5556L)
            .and().insertInto("ACTIVITY", 5559L)
            .and().insertInto("ACTIVITY_DERIVED", 5558L)
                .r("ACTIVITY_ID", 5556L)
                .d("FAVOURITES_COUNT", "152")
                .d("RATINGS_AVG", "NULL")
                .d("RATINGS_COUNT", "NULL")
                .d("RATINGS_SUM", "948")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "attrs=EbVC3IFs&" + 
                    "name=T91a81ac6tvHTgdd&" + 
                    "text=9fLuNAuio&" + 
                    "ratings_count_min=-338596252407839064&" + 
                    "ratings_average_min=0.4005235270045364&" + 
                    "random=316&" + 
                    "favourites=348")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/activities
    */
    @Test(timeout = 60000)
    public void test_75_getOnActivitiesReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 9608L)
            .and().insertInto("ACTIVITY", 9610L)
            .and().insertInto("ACTIVITY_DERIVED", 9609L)
                .r("ACTIVITY_ID", 9610L)
                .d("FAVOURITES_COUNT", "NULL")
                .d("RATINGS_AVG", "NULL")
                .d("RATINGS_COUNT", "NULL")
                .d("RATINGS_SUM", "473")
            .and().insertInto("USERS", 10380L)
                .d("AUTHORIZATION_LEVEL", "57")
                .d("NAME", "\"XgHhuwJI5Rp\"")
            .and().insertInto("ACTIVITY", 10379L)
            .and().insertInto("ACTIVITY", 10378L)
            .and().insertInto("ACTIVITY_PROPERTIES", 10377L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "NULL")
                .d("DATE_CREATED", "\"2007-05-10 05:47:54\"")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "\"Dnj3jw52pHFqiB\"")
                .d("DESCRIPTION_MAIN", "\"jS3\"")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "NULL")
                .d("DESCRIPTION_PREPARE", "\"HeEVod\"")
                .d("DESCRIPTION_SAFETY", "\"BShpZ26G\"")
                .d("FEATURED", "NULL")
                .d("NAME", "NULL")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "\"DJrZGROxKje\"")
                .d("TIME_MAX", "227")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 9610L)
                .d("AUTHOR_ID", "NULL")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "attrs=5KfgjNeC&" + 
                    "text=1VDx&" + 
                    "categories=1&" + 
                    "random=706&" + 
                    "favourites=724")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/activities
    */
    @Test(timeout = 60000)
    public void test_76_getOnActivitiesReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 6673L)
                .d("AUTHORIZATION_LEVEL", "135")
                .d("NAME", "\"TUY6BIXpPgWN\"")
            .and().insertInto("ACTIVITY", 6672L)
            .and().insertInto("ACTIVITY", 6671L)
            .and().insertInto("ACTIVITY_PROPERTIES", 6670L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "-2147483648")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "\"1977-02-03 02:30:06\"")
                .d("DATE_UPDATED", "\"2000-03-26 04:11:53\"")
                .d("DESCRIPTION_INTRODUCTION", "NULL")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "\"Lwap88Ka\"")
                .d("DESCRIPTION_NOTES", "\"URARz\"")
                .d("DESCRIPTION_PREPARE", "\"5oVy\"")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "true")
                .d("NAME", "\"oMzA\"")
                .d("PARTICIPANTS_MAX", "5")
                .d("PARTICIPANTS_MIN", "-32278")
                .d("SOURCE", "\"PCZx\"")
                .d("TIME_MAX", "-268633613")
                .d("TIME_MIN", "532")
                .r("ACTIVITY_ID", 6671L)
                .d("AUTHOR_ID", "1")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("ACTIVITY", 6675L)
            .and().insertInto("ACTIVITY_DERIVED", 6674L)
                .r("ACTIVITY_ID", 6671L)
                .d("FAVOURITES_COUNT", "NULL")
                .d("RATINGS_AVG", "0.2017896683459237")
                .d("RATINGS_COUNT", "NULL")
                .d("RATINGS_SUM", "191")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "attrs=_EM_15368_XYZ_&" + 
                    "text=Lbi6vojaP&" + 
                    "featured=false&" + 
                    "ratings_count_min=434&" + 
                    "ratings_average_min=0.5168041132369057&" + 
                    "random=563&" + 
                    "favourites=26")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * 1 - (200) POST:/api/v2/tags
    * 2 - (200) PUT:/api/v2/tags/{id}
    * 3 - (200) GET:/api/v2/tags/{id}
    */
    @Test(timeout = 60000)
    public void test_77_getOnTagReturnsEmptyObject() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 4766L)
                .d("URI", "\"l69WYCeOPvGhj9\"")
            .and().insertInto("TAG", 4765L)
                .d("GRP", "\"\"")
                .d("NAME", "\"pEuwm8_LrlPsOR2\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        String location_tags = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"UUGDuohh\", " + 
                    " \"name\": \"xtgaF\", " + 
                    " \"media_file\": { " + 
                    " \"mime_type\": \"_kMQG9ZOP4UB\", " + 
                    " \"uri\": \"RvRBVDa2xVml\", " + 
                    " \"name\": \"rTAouTpKnQPb\", " + 
                    " \"copy_right\": \"Pyl1\" " + 
                    " }, " + 
                    " \"activities_count\": 688 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/tags")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("UUGDuohh"))
                .body("'name'", containsString("xtgaF"))
                .body("'media_file'.'mime_type'", containsString("_kMQG9ZOP4UB"))
                .body("'media_file'.'uri'", containsString("RvRBVDa2xVml"))
                .body("'media_file'.'name'", containsString("rTAouTpKnQPb"))
                .body("'media_file'.'copy_right'", containsString("Pyl1"))
                .body("'activities_count'", numberMatches(688.0));
        location_tags = "/api/v2/tags" + "/" + res_0.extract().body().path("id").toString();
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 446, " + 
                    " \"group\": \"mOMx4gbXG7dT\", " + 
                    " \"name\": \"gONZ4bmFNRPA\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 662, " + 
                    " \"mime_type\": \"soRpp2683repq3o\", " + 
                    " \"name\": \"ugzTrmybc\", " + 
                    " \"capture_date\": \"2086-10-02T08:04:28.260Z\", " + 
                    " \"copy_right\": \"IHU\" " + 
                    " } " + 
                    " } ")
                .put(resolveLocation(location_tags, baseUrlOfSut + "/api/v2/tags/446"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("mOMx4gbXG7dT"))
                .body("'name'", containsString("gONZ4bmFNRPA"))
                .body("'media_file'.'mime_type'", containsString("_kMQG9ZOP4UB"))
                .body("'media_file'.'uri'", containsString("RvRBVDa2xVml"))
                .body("'media_file'.'name'", containsString("rTAouTpKnQPb"))
                .body("'media_file'.'copy_right'", containsString("Pyl1"))
                .body("'activities_count'", numberMatches(0.0));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_tags, baseUrlOfSut + "/api/v2/tags/446?attrs=RgxA&EMextraParam123=42"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("isEmpty()", is(true));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/activities
    */
    @Test(timeout = 60000)
    public void test_78_getOnV2ActivitiesWithQueryParamsFeaturedNegativeRatings_average_min() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 6705L)
            .and().insertInto("ACTIVITY", 6707L)
            .and().insertInto("ACTIVITY_DERIVED", 6706L)
                .r("ACTIVITY_ID", 6707L)
                .d("FAVOURITES_COUNT", "427")
                .d("RATINGS_AVG", "NULL")
                .d("RATINGS_COUNT", "8729")
                .d("RATINGS_SUM", "417")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "attrs=5KfgnNeC&" + 
                    "text=_EM_23508_XYZ_&" + 
                    "featured=true&" + 
                    "categories=5&" + 
                    "ratings_average_min=-11455.318768050422&" + 
                    "random=706&" + 
                    "favourites=246550")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * 1 - (200) POST:/api/v1/categories
    * 2 - (200) PUT:/api/v1/categories/{id}
    * 3 - (200) GET:/api/v1/categories/{id}
    * 4 - (200) GET:/api/v1/users/profile
    */
    @Test(timeout = 60000)
    public void test_79_getOnProfileReturnsObject() throws Exception {
        
        String location_categories = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"9jOLpF6o8BRx8y6\", " + 
                    " \"name\": \"_EM_65157_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/categories")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("9jOLpF6o8BRx8y6"))
                .body("'name'", containsString("_EM_65157_XYZ_"))
                .body("'activities_count'", numberMatches(0.0));
        location_categories = "/api/v1/categories" + "/" + res_0.extract().body().path("id").toString();
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"FToY34WXawvlmxl\", " + 
                    " \"name\": \"1BMfqiPJ\", " + 
                    " \"media_file\": { " + 
                    " \"uri\": \"EDSYdJV_9m1A\", " + 
                    " \"capture_date\": \"2059-06-06T05:43:08.561Z\" " + 
                    " } " + 
                    " } ")
                .put(resolveLocation(location_categories, baseUrlOfSut + "/api/v1/categories/-5276963738212289784"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("FToY34WXawvlmxl"))
                .body("'name'", containsString("1BMfqiPJ"))
                .body("'activities_count'", numberMatches(0.0));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_categories, baseUrlOfSut + "/api/v1/categories/-5276963738212289784?attrs=nN5SFYEq"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("isEmpty()", is(true));
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/users/profile?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'role_permissions'.size()", equalTo(23))
                .body("'role_permissions'", hasItems("activity_create", "activity_edit", "activity_edit_own", "auth_profile_edit", "auth_role_assign", "auth_role_assignown", "auth_role_list", "auth_user_create", "auth_user_edit", "category_create", "category_edit", "comment_create", "comment_edit", "comment_edit_own", "mediaitem_create", "mediaitem_edit", "mediaitem_edit_own", "rating_set_own", "reference_create", "reference_edit", "reference_edit_own", "system_message_manage", "system_message_read"))
                .body("'name'", containsString("INTEGRATION TEST ADMINISTRATOR"))
                .body("'role'", containsString("administrator"));
    }
    
    
    /**
    * Calls:
    * (200) POST:/api/v1/activities
    */
    @Test(timeout = 60000)
    public void test_80_postOnActivitiesReturns200() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 249L)
                .d("KEY", "\"0mOsn0cb_xRSboXh\"")
                .d("VALID_FROM", "\"2091-09-14 11:39:00\"")
                .d("VALID_TO", "\"1979-11-16 21:55:29\"")
                .d("VALUE", "\"_EM_68528_XYZ_\"")
            .and().insertInto("ACTIVITY", 2069L)
            .and().insertInto("USERS", 2072L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"jl6hmtOCBc6\"")
            .and().insertInto("ACTIVITY", 2071L)
            .and().insertInto("ACTIVITY_RATING", 2070L)
                .r("ACTIVITY_ID", 2071L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "true")
                .d("RATING", "402")
            .and().insertInto("MEDIA_FILE", 4690L)
                .d("URI", "\"3n2Em7\"")
            .and().insertInto("TAG", 4689L)
                .d("GRP", "\"_EM_68529_XYZ_\"")
                .d("NAME", "\"UzCvX2\"")
                .r("MEDIA_FILE_ID", 4690L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_material\": \"9x3\", " + 
                    " \"description_introduction\": \"6f8RJW08cGCdOkA\", " + 
                    " \"description_prepare\": \"\", " + 
                    " \"description_safety\": \"Zr2i8\", " + 
                    " \"description_notes\": \"4RP7pm\", " + 
                    " \"age_max\": -2147482941, " + 
                    " \"participants_min\": 327, " + 
                    " \"participants_max\": 786, " + 
                    " \"time_min\": 152, " + 
                    " \"time_max\": 1580442393, " + 
                    " \"source\": \"F63QK7\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities?" + 
                    "ratings_count_min=DRWBD8zLCGwOh7p&" + 
                    "favourites=S_L0&" + 
                    "group=LvPxQB")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'date_created'", containsString("2025-02-12T15:26:56.90Z"))
                .body("'properties_revisions'[0].'description_material'", containsString("9x3"))
                .body("'properties_revisions'[0].'description_introduction'", containsString("6f8RJW08cGCdOkA"))
                .body("'properties_revisions'[0].'description_prepare'", containsString(""))
                .body("'properties_revisions'[0].'description_safety'", containsString("Zr2i8"))
                .body("'properties_revisions'[0].'description_notes'", containsString("4RP7pm"))
                .body("'properties_revisions'[0].'age_max'", numberMatches(-2.147482941E9))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(327.0))
                .body("'properties_revisions'[0].'participants_max'", numberMatches(786.0))
                .body("'properties_revisions'[0].'time_min'", numberMatches(152.0))
                .body("'properties_revisions'[0].'time_max'", numberMatches(1.580442393E9))
                .body("'properties_revisions'[0].'source'", containsString("F63QK7"))
                .body("'properties'.'date_created'", containsString("2025-02-12T15:26:56.90Z"))
                .body("'properties'.'description_material'", containsString("9x3"))
                .body("'properties'.'description_introduction'", containsString("6f8RJW08cGCdOkA"))
                .body("'properties'.'description_prepare'", containsString(""))
                .body("'properties'.'description_safety'", containsString("Zr2i8"))
                .body("'properties'.'description_notes'", containsString("4RP7pm"))
                .body("'properties'.'age_max'", numberMatches(-2.147482941E9))
                .body("'properties'.'participants_min'", numberMatches(327.0))
                .body("'properties'.'participants_max'", numberMatches(786.0))
                .body("'properties'.'time_min'", numberMatches(152.0))
                .body("'properties'.'time_max'", numberMatches(1.580442393E9))
                .body("'properties'.'source'", containsString("F63QK7"))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0));
    }
    
    
    /**
    * Calls:
    * (200) POST:/api/v1/activities
    */
    @Test(timeout = 60000)
    public void test_81_postOnActivitiesReturns200() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 249L)
                .d("KEY", "\"0mOsn0cb_xRSboXh\"")
                .d("VALID_FROM", "\"2091-09-14 11:39:00\"")
                .d("VALID_TO", "\"1979-11-16 21:55:29\"")
                .d("VALUE", "\"_EM_68528_XYZ_\"")
            .and().insertInto("ACTIVITY", 2069L)
            .and().insertInto("USERS", 2072L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"jl6hmtOCBc6\"")
            .and().insertInto("ACTIVITY", 2071L)
            .and().insertInto("ACTIVITY_RATING", 2070L)
                .r("ACTIVITY_ID", 2069L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "true")
                .d("RATING", "402")
            .and().insertInto("MEDIA_FILE", 4690L)
                .d("URI", "\"3n2Em7\"")
            .and().insertInto("TAG", 4689L)
                .d("GRP", "\"_EM_68529_XYZ_\"")
                .d("NAME", "\"UzCvX2\"")
                .r("MEDIA_FILE_ID", 4690L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_material\": \"9x3\", " + 
                    " \"description_introduction\": \"6f8RJW08cGCdOkA\", " + 
                    " \"description_prepare\": \"\", " + 
                    " \"description_safety\": \"Zr2i8\", " + 
                    " \"description_notes\": \"4RP7pm\", " + 
                    " \"age_max\": -2147482941, " + 
                    " \"participants_min\": 327, " + 
                    " \"participants_max\": 786, " + 
                    " \"time_min\": 152, " + 
                    " \"time_max\": 1580442393, " + 
                    " \"source\": \"F63QK7\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities?" + 
                    "ratings_count_min=DRWBD8zLCGwOh7p&" + 
                    "favourites=S_L0&" + 
                    "ratings_average_min=Ir9pZHXFgXns9S&" + 
                    "text=nuqe5hhPYrN22S&" + 
                    "time_2=Ya4cxDkoxp&" + 
                    "group=LvPxQB")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'date_created'", containsString("2025-02-12T15:26:56.127Z"))
                .body("'properties_revisions'[0].'description_material'", containsString("9x3"))
                .body("'properties_revisions'[0].'description_introduction'", containsString("6f8RJW08cGCdOkA"))
                .body("'properties_revisions'[0].'description_prepare'", containsString(""))
                .body("'properties_revisions'[0].'description_safety'", containsString("Zr2i8"))
                .body("'properties_revisions'[0].'description_notes'", containsString("4RP7pm"))
                .body("'properties_revisions'[0].'age_max'", numberMatches(-2.147482941E9))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(327.0))
                .body("'properties_revisions'[0].'participants_max'", numberMatches(786.0))
                .body("'properties_revisions'[0].'time_min'", numberMatches(152.0))
                .body("'properties_revisions'[0].'time_max'", numberMatches(1.580442393E9))
                .body("'properties_revisions'[0].'source'", containsString("F63QK7"))
                .body("'properties'.'date_created'", containsString("2025-02-12T15:26:56.127Z"))
                .body("'properties'.'description_material'", containsString("9x3"))
                .body("'properties'.'description_introduction'", containsString("6f8RJW08cGCdOkA"))
                .body("'properties'.'description_prepare'", containsString(""))
                .body("'properties'.'description_safety'", containsString("Zr2i8"))
                .body("'properties'.'description_notes'", containsString("4RP7pm"))
                .body("'properties'.'age_max'", numberMatches(-2.147482941E9))
                .body("'properties'.'participants_min'", numberMatches(327.0))
                .body("'properties'.'participants_max'", numberMatches(786.0))
                .body("'properties'.'time_min'", numberMatches(152.0))
                .body("'properties'.'time_max'", numberMatches(1.580442393E9))
                .body("'properties'.'source'", containsString("F63QK7"))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0));
    }
    
    
    /**
    * Calls:
    * (200) POST:/api/v2/activities
    */
    @Test(timeout = 60000)
    public void test_82_postOnV2ActivitiesWithQueryParamsReturns200() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 5307L)
                .d("AUTHOR", "\"oZLPw8f3\"")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"9apC\"")
                .d("URI", "\"rVE\"")
            .and().insertInto("ACTIVITY", 5308L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"_EM_73286_XYZ_\", " + 
                    " \"description_material\": \"OBGD4oZQxyYY75\", " + 
                    " \"description_introduction\": \"5\", " + 
                    " \"description_prepare\": \"lsNBinBH0TzFDWk\", " + 
                    " \"age_max\": -2147483224, " + 
                    " \"participants_min\": 925, " + 
                    " \"participants_max\": 4, " + 
                    " \"time_min\": 734, " + 
                    " \"source\": \"HLICuDM_2z30Wu\", " + 
                    " \"activity\": { " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_count\": -5982866904082381680, " + 
                    " \"ratings_average\": 0.6330892264492256 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities?" + 
                    "featured=Kt95&" + 
                    "favourites=1LSh4So&" + 
                    "name=eIO&" + 
                    "categories=bYKeV22ahz&" + 
                    "id=235")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'name'", containsString("_EM_73286_XYZ_"))
                .body("'properties_revisions'[0].'date_created'", containsString("2025-02-12T15:26:55.107Z"))
                .body("'properties_revisions'[0].'description_material'", containsString("OBGD4oZQxyYY75"))
                .body("'properties_revisions'[0].'description_introduction'", containsString("5"))
                .body("'properties_revisions'[0].'description_prepare'", containsString("lsNBinBH0TzFDWk"))
                .body("'properties_revisions'[0].'age_max'", numberMatches(-2.147483224E9))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(925.0))
                .body("'properties_revisions'[0].'participants_max'", numberMatches(4.0))
                .body("'properties_revisions'[0].'time_min'", numberMatches(734.0))
                .body("'properties_revisions'[0].'source'", containsString("HLICuDM_2z30Wu"))
                .body("'properties'.'name'", containsString("_EM_73286_XYZ_"))
                .body("'properties'.'date_created'", containsString("2025-02-12T15:26:55.107Z"))
                .body("'properties'.'description_material'", containsString("OBGD4oZQxyYY75"))
                .body("'properties'.'description_introduction'", containsString("5"))
                .body("'properties'.'description_prepare'", containsString("lsNBinBH0TzFDWk"))
                .body("'properties'.'age_max'", numberMatches(-2.147483224E9))
                .body("'properties'.'participants_min'", numberMatches(925.0))
                .body("'properties'.'participants_max'", numberMatches(4.0))
                .body("'properties'.'time_min'", numberMatches(734.0))
                .body("'properties'.'source'", containsString("HLICuDM_2z30Wu"))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0));
    }
    
    
    /**
    * Calls:
    * (200) POST:/api/v2/activities
    */
    @Test(timeout = 60000)
    public void test_83_postOnV2ActivitiesWithQueryParamsEmptyDurationsReturns200() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 5323L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2049-10-20 23:54:52\"")
                .d("COPY_RIGHT", "\"X2tzt4Lv5\"")
                .d("MIME_TYPE", "\"lvFGDdK\"")
                .d("NAME", "\"QArP7L\"")
                .d("URI", "\"s2rBpKZLW8MCHS\"")
            .and().insertInto("ACTIVITY", 5326L)
            .and().insertInto("USERS", 6947L)
                .d("AUTHORIZATION_LEVEL", "693")
                .d("NAME", "\"7Pni5F7RxN\"")
            .and().insertInto("ACTIVITY", 6946L)
            .and().insertInto("ACTIVITY", 6945L)
            .and().insertInto("ACTIVITY_PROPERTIES", 6944L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "-1061")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "\"1953-10-04 15:12:22\"")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "NULL")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "\"Mk6TIfjTX9Wv2\"")
                .d("DESCRIPTION_NOTES", "NULL")
                .d("DESCRIPTION_PREPARE", "\"fIiM\"")
                .d("DESCRIPTION_SAFETY", "\"lsWT4\"")
                .d("FEATURED", "NULL")
                .d("NAME", "\"_EM_89894_XYZ_\"")
                .d("PARTICIPANTS_MAX", "538")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "\"HTkMn4x\"")
                .d("TIME_MAX", "219")
                .d("TIME_MIN", "0")
                .r("ACTIVITY_ID", 5326L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 6945L)
            .and().insertInto("ACTIVITY", 6949L)
            .and().insertInto("ACTIVITY_DERIVED", 6948L)
                .r("ACTIVITY_ID", 6945L)
                .d("FAVOURITES_COUNT", "550")
                .d("RATINGS_AVG", "NULL")
                .d("RATINGS_COUNT", "196")
                .d("RATINGS_SUM", "NULL")
            .and().insertInto("USERS", 10931L)
                .d("AUTHORIZATION_LEVEL", "26")
                .d("NAME", "\"HZ\"")
            .and().insertInto("ACTIVITY", 10930L)
            .and().insertInto("ACTIVITY_RATING", 10929L)
                .r("ACTIVITY_ID", 5326L)
                .r("USER_ID", 6947L)
                .d("FAVOURITE", "false")
                .d("RATING", "NULL")
            .and().insertInto("USERS", 10970L)
                .d("AUTHORIZATION_LEVEL", "263")
                .d("NAME", "\"WDcMre\"")
            .and().insertInto("ACTIVITY", 10969L)
            .and().insertInto("ACTIVITY", 10968L)
            .and().insertInto("ACTIVITY_RELATION", 10967L)
                .r("ACTIVITY_1_ID", 10968L)
                .r("ACTIVITY_2_ID", 10930L)
                .d("OWNER_ID", "3")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"K\", " + 
                    " \"date_created\": \"2089-07-25T09:30:02.906Z\", " + 
                    " \"date_updated\": \"1977-05-31T19:20:34.152Z\", " + 
                    " \"description_material\": \"LnDIXT_0qZU4\", " + 
                    " \"description_safety\": \"867qz91UlAhUeM\", " + 
                    " \"participants_min\": 980, " + 
                    " \"participants_max\": 851, " + 
                    " \"featured\": false, " + 
                    " \"source\": \"eK\", " + 
                    " \"media_files\": [] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities?" + 
                    "ratings_count_min=gYyLbrFOl_06i&" + 
                    "random=OiPEf&" + 
                    "durations=&" + 
                    "text=4sE64A&" + 
                    "categories=DzCdj")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'name'", containsString("K"))
                .body("'properties_revisions'[0].'date_created'", containsString("2089-07-25T09:30:02.906Z"))
                .body("'properties_revisions'[0].'date_updated'", containsString("1977-05-31T19:20:34.152Z"))
                .body("'properties_revisions'[0].'description_material'", containsString("LnDIXT_0qZU4"))
                .body("'properties_revisions'[0].'description_safety'", containsString("867qz91UlAhUeM"))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(980.0))
                .body("'properties_revisions'[0].'participants_max'", numberMatches(851.0))
                .body("'properties_revisions'[0].'featured'", equalTo(false))
                .body("'properties_revisions'[0].'source'", containsString("eK"))
                .body("'properties_revisions'[0].'media_files'.size()", equalTo(0))
                .body("'properties'.'name'", containsString("K"))
                .body("'properties'.'date_created'", containsString("2089-07-25T09:30:02.906Z"))
                .body("'properties'.'date_updated'", containsString("1977-05-31T19:20:34.152Z"))
                .body("'properties'.'description_material'", containsString("LnDIXT_0qZU4"))
                .body("'properties'.'description_safety'", containsString("867qz91UlAhUeM"))
                .body("'properties'.'participants_min'", numberMatches(980.0))
                .body("'properties'.'participants_max'", numberMatches(851.0))
                .body("'properties'.'featured'", equalTo(false))
                .body("'properties'.'source'", containsString("eK"))
                .body("'properties'.'media_files'.size()", equalTo(0))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0));
    }
    
    
    /**
    * Calls:
    * (200) POST:/api/v1/activities
    */
    @Test(timeout = 60000)
    public void test_84_postOnActivitiesReturns200() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"aqNj5FEH\", " + 
                    " \"description_material\": \"Gx2Y2F0bD4qu1Ly\", " + 
                    " \"description_prepare\": \"_EM_44510_XYZ_\", " + 
                    " \"description_main\": \"_EM_44511_XYZ_\", " + 
                    " \"description_notes\": \"u2\", " + 
                    " \"age_min\": -93, " + 
                    " \"age_max\": -2147483026, " + 
                    " \"time_max\": 242, " + 
                    " \"featured\": true, " + 
                    " \"media_files\": [], " + 
                    " \"activity\": { " + 
                    " \"id\": 465, " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_count\": -5504218253286511555 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'name'", containsString("aqNj5FEH"))
                .body("'properties_revisions'[0].'date_created'", containsString("2025-02-12T15:26:51.208Z"))
                .body("'properties_revisions'[0].'description_material'", containsString("Gx2Y2F0bD4qu1Ly"))
                .body("'properties_revisions'[0].'description_prepare'", containsString("_EM_44510_XYZ_"))
                .body("'properties_revisions'[0].'description_main'", containsString("_EM_44511_XYZ_"))
                .body("'properties_revisions'[0].'description_notes'", containsString("u2"))
                .body("'properties_revisions'[0].'age_min'", numberMatches(-93.0))
                .body("'properties_revisions'[0].'age_max'", numberMatches(-2.147483026E9))
                .body("'properties_revisions'[0].'time_max'", numberMatches(242.0))
                .body("'properties_revisions'[0].'featured'", equalTo(true))
                .body("'properties_revisions'[0].'media_files'.size()", equalTo(0))
                .body("'properties'.'name'", containsString("aqNj5FEH"))
                .body("'properties'.'date_created'", containsString("2025-02-12T15:26:51.208Z"))
                .body("'properties'.'description_material'", containsString("Gx2Y2F0bD4qu1Ly"))
                .body("'properties'.'description_prepare'", containsString("_EM_44510_XYZ_"))
                .body("'properties'.'description_main'", containsString("_EM_44511_XYZ_"))
                .body("'properties'.'description_notes'", containsString("u2"))
                .body("'properties'.'age_min'", numberMatches(-93.0))
                .body("'properties'.'age_max'", numberMatches(-2.147483026E9))
                .body("'properties'.'time_max'", numberMatches(242.0))
                .body("'properties'.'featured'", equalTo(true))
                .body("'properties'.'media_files'.size()", equalTo(0))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0));
    }
    
    
    /**
    * Calls:
    * (200) POST:/api/v2/activities
    */
    @Test(timeout = 60000)
    public void test_85_postOnV2ActivitiesReturns200() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 5557L)
                .d("AUTHORIZATION_LEVEL", "1796790952")
                .d("NAME", "\"eZpTS7sZGZGe\"")
            .and().insertInto("ACTIVITY", 5556L)
            .and().insertInto("ACTIVITY", 5555L)
            .and().insertInto("ACTIVITY_PROPERTIES", 5554L)
                .d("AGE_MAX", "-465")
                .d("AGE_MIN", "-715")
                .d("DATE_CREATED", "\"1941-01-23 07:42:50\"")
                .d("DATE_PUBLISHED", "\"1937-09-12 11:29:38\"")
                .d("DATE_UPDATED", "\"1932-10-25 15:47:55\"")
                .d("DESCRIPTION_INTRODUCTION", "\"KMXShHulUb6Mt\"")
                .d("DESCRIPTION_MAIN", "\"1TRD8\"")
                .d("DESCRIPTION_MATERIAL", "\"GTlz8sguo\"")
                .d("DESCRIPTION_NOTES", "NULL")
                .d("DESCRIPTION_PREPARE", "\"XQR\"")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "NULL")
                .d("NAME", "\"AmuXCwLQN\"")
                .d("PARTICIPANTS_MAX", "242")
                .d("PARTICIPANTS_MIN", "472")
                .d("SOURCE", "\"zNqXPxMxfFTP_uV\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "73")
                .r("ACTIVITY_ID", 5555L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 5556L)
            .and().insertInto("ACTIVITY", 5559L)
            .and().insertInto("ACTIVITY_DERIVED", 5558L)
                .r("ACTIVITY_ID", 5556L)
                .d("FAVOURITES_COUNT", "152")
                .d("RATINGS_AVG", "NULL")
                .d("RATINGS_COUNT", "NULL")
                .d("RATINGS_SUM", "948")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"FatOr5M2tbCmV2b6\", " + 
                    " \"date_updated\": \"2024-06-21T09:37:57.268Z\", " + 
                    " \"description_material\": \"emuMVfy8gCJlG1\", " + 
                    " \"description_introduction\": \"jIebNVWbpbXIq\", " + 
                    " \"description_main\": \"ngqWsH\", " + 
                    " \"description_safety\": \"kGiSWWlE8gT4\", " + 
                    " \"description_notes\": \"\", " + 
                    " \"participants_min\": 785, " + 
                    " \"participants_max\": 429, " + 
                    " \"time_min\": 424, " + 
                    " \"time_max\": 183, " + 
                    " \"featured\": false, " + 
                    " \"source\": \"n2fBRUUQ4erUuuuH\", " + 
                    " \"tags\": [], " + 
                    " \"media_files\": [] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'name'", containsString("FatOr5M2tbCmV2b6"))
                .body("'properties_revisions'[0].'date_created'", containsString("2025-02-12T15:26:51.689Z"))
                .body("'properties_revisions'[0].'date_updated'", containsString("2024-06-21T09:37:57.268Z"))
                .body("'properties_revisions'[0].'description_material'", containsString("emuMVfy8gCJlG1"))
                .body("'properties_revisions'[0].'description_introduction'", containsString("jIebNVWbpbXIq"))
                .body("'properties_revisions'[0].'description_main'", containsString("ngqWsH"))
                .body("'properties_revisions'[0].'description_safety'", containsString("kGiSWWlE8gT4"))
                .body("'properties_revisions'[0].'description_notes'", containsString(""))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(785.0))
                .body("'properties_revisions'[0].'participants_max'", numberMatches(429.0))
                .body("'properties_revisions'[0].'time_min'", numberMatches(424.0))
                .body("'properties_revisions'[0].'time_max'", numberMatches(183.0))
                .body("'properties_revisions'[0].'featured'", equalTo(false))
                .body("'properties_revisions'[0].'source'", containsString("n2fBRUUQ4erUuuuH"))
                .body("'properties_revisions'[0].'tags'.size()", equalTo(0))
                .body("'properties_revisions'[0].'media_files'.size()", equalTo(0))
                .body("'properties'.'name'", containsString("FatOr5M2tbCmV2b6"))
                .body("'properties'.'date_created'", containsString("2025-02-12T15:26:51.689Z"))
                .body("'properties'.'date_updated'", containsString("2024-06-21T09:37:57.268Z"))
                .body("'properties'.'description_material'", containsString("emuMVfy8gCJlG1"))
                .body("'properties'.'description_introduction'", containsString("jIebNVWbpbXIq"))
                .body("'properties'.'description_main'", containsString("ngqWsH"))
                .body("'properties'.'description_safety'", containsString("kGiSWWlE8gT4"))
                .body("'properties'.'description_notes'", containsString(""))
                .body("'properties'.'participants_min'", numberMatches(785.0))
                .body("'properties'.'participants_max'", numberMatches(429.0))
                .body("'properties'.'time_min'", numberMatches(424.0))
                .body("'properties'.'time_max'", numberMatches(183.0))
                .body("'properties'.'featured'", equalTo(false))
                .body("'properties'.'source'", containsString("n2fBRUUQ4erUuuuH"))
                .body("'properties'.'tags'.size()", equalTo(0))
                .body("'properties'.'media_files'.size()", equalTo(0))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0));
    }
    
    
    /**
    * Calls:
    * (200) POST:/api/v1/activities
    */
    @Test(timeout = 60000)
    public void test_86_postOnActivitiesReturns200() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 249L)
                .d("KEY", "\"0mOsj0cb`wRSboX\"")
                .d("VALID_FROM", "\"2091-11-14 00:43:16\"")
                .d("VALID_TO", "\"2009-07-18 00:23:02\"")
                .d("VALUE", "\"WsUU\"")
            .and().insertInto("ACTIVITY", 2069L)
            .and().insertInto("USERS", 2072L)
                .d("AUTHORIZATION_LEVEL", "2080")
                .d("NAME", "\"R_q\"")
            .and().insertInto("ACTIVITY", 2071L)
            .and().insertInto("ACTIVITY_RATING", 2070L)
                .r("ACTIVITY_ID", 2071L)
                .d("USER_ID", "1")
                .d("FAVOURITE", "true")
                .d("RATING", "402")
            .and().insertInto("MEDIA_FILE", 4825L)
                .d("AUTHOR", "\"6YMNP2h\"")
                .d("CAPTURE_DATE", "\"1900-12-12 11:29:35\"")
                .d("COPY_RIGHT", "\"H9F_ZsYkUUY\"")
                .d("MIME_TYPE", "\"gdbskZvqOTAP3LU6\"")
                .d("NAME", "\"z2DfTlM2\"")
                .d("URI", "\"cEM_69875_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 4831L)
                .d("URI", "\"ZurgVZF\"")
            .and().insertInto("USERS", 4830L)
                .d("AUTHORIZATION_LEVEL", "108")
                .d("NAME", "\"UEM_69876]UYY_\"")
            .and().insertInto("ACTIVITY", 4829L)
            .and().insertInto("ACTIVITY", 4828L)
            .and().insertInto("ACTIVITY_PROPERTIES", 4827L)
                .r("ACTIVITY_ID", 2069L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 4826L)
                .r("ACTIVITY_PROPERTIES_ID", 4827L)
                .r("MEDIA_FILE_ID", 4831L)
                .d("FEATURED", "true")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"GO86H8\", " + 
                    " \"date_published\": \"2043-10-05T01:08:54.735Z\", " + 
                    " \"date_created\": \"1969-08-21T19:50:27.423Z\", " + 
                    " \"description_material\": \"5\", " + 
                    " \"description_introduction\": \"cioQl_rjJdU\", " + 
                    " \"description_prepare\": \"_EM_92033_XYZ_\", " + 
                    " \"description_main\": \"\", " + 
                    " \"description_safety\": \"p5\", " + 
                    " \"description_notes\": \"Qjghh\", " + 
                    " \"age_min\": -401, " + 
                    " \"participants_min\": 4894, " + 
                    " \"time_min\": 656, " + 
                    " \"time_max\": -1386326603, " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"uri\": \"wPJ2uIDVj0\", " + 
                    " \"copy_right\": \"JC6yQdGf0\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'name'", containsString("GO86H8"))
                .body("'properties_revisions'[0].'date_published'", containsString("2043-10-05T01:08:54.735Z"))
                .body("'properties_revisions'[0].'date_created'", containsString("1969-08-21T19:50:27.423Z"))
                .body("'properties_revisions'[0].'description_material'", containsString("5"))
                .body("'properties_revisions'[0].'description_introduction'", containsString("cioQl_rjJdU"))
                .body("'properties_revisions'[0].'description_prepare'", containsString("_EM_92033_XYZ_"))
                .body("'properties_revisions'[0].'description_main'", containsString(""))
                .body("'properties_revisions'[0].'description_safety'", containsString("p5"))
                .body("'properties_revisions'[0].'description_notes'", containsString("Qjghh"))
                .body("'properties_revisions'[0].'age_min'", numberMatches(-401.0))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(4894.0))
                .body("'properties_revisions'[0].'time_min'", numberMatches(656.0))
                .body("'properties_revisions'[0].'time_max'", numberMatches(-1.386326603E9))
                .body("'properties_revisions'[0].'media_files'.size()", equalTo(1))
                .body("'properties_revisions'[0].'media_files'[0].'uri'", containsString("wPJ2uIDVj0"))
                .body("'properties_revisions'[0].'media_files'[0].'copy_right'", containsString("JC6yQdGf0"))
                .body("'properties'.'name'", containsString("GO86H8"))
                .body("'properties'.'date_published'", containsString("2043-10-05T01:08:54.735Z"))
                .body("'properties'.'date_created'", containsString("1969-08-21T19:50:27.423Z"))
                .body("'properties'.'description_material'", containsString("5"))
                .body("'properties'.'description_introduction'", containsString("cioQl_rjJdU"))
                .body("'properties'.'description_prepare'", containsString("_EM_92033_XYZ_"))
                .body("'properties'.'description_main'", containsString(""))
                .body("'properties'.'description_safety'", containsString("p5"))
                .body("'properties'.'description_notes'", containsString("Qjghh"))
                .body("'properties'.'age_min'", numberMatches(-401.0))
                .body("'properties'.'participants_min'", numberMatches(4894.0))
                .body("'properties'.'time_min'", numberMatches(656.0))
                .body("'properties'.'time_max'", numberMatches(-1.386326603E9))
                .body("'properties'.'media_files'.size()", equalTo(1))
                .body("'properties'.'media_files'[0].'uri'", containsString("wPJ2uIDVj0"))
                .body("'properties'.'media_files'[0].'copy_right'", containsString("JC6yQdGf0"))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0));
    }
    
    
    /**
    * Calls:
    * (204) GET:/api/v1/system/ping
    */
    @Test(timeout = 60000)
    public void test_87_getOnPingReturns204() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_45_XYZ_")
                .get(baseUrlOfSut + "/api/v1/system/ping?EMextraParam123=42")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (204) POST:/api/v1/favourites
    */
    @Test(timeout = 60000)
    public void test_88_postOnFavouritesReturns204() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 5142L)
                .d("AUTHORIZATION_LEVEL", "640")
                .d("DATE_CREATED", "NULL")
                .d("EMAIL_ADDRESS", "NULL")
                .d("NAME", "\"1\"")
            .and().insertInto("ACTIVITY", 5143L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": [ " + 
                    " -8550483429616480871, " + 
                    " 704, " + 
                    " 1235904926, " + 
                    " 343 " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/favourites?favourites=1")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (204) POST:/api/v1/favourites
    */
    @Test(timeout = 60000)
    public void test_89_postOnV1FavouritesWithQueryParamsReturns204() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 6465L)
                .d("KEY", "\"y2ZrbR\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"2062-09-13 10:13:49\"")
                .d("VALUE", "\"_EM_80649_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": [ " + 
                    " 284, " + 
                    " 825, " + 
                    " 527, " + 
                    " 678 " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/favourites?" + 
                    "favourites=1&" + 
                    "time_2=e7G6I4p")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (204) POST:/api/v1/favourites
    */
    @Test(timeout = 60000)
    public void test_90_postOnV1FavouritesWithQueryParamsEmptyTime_2Returns204() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": [ " + 
                    " 3690624088332644502, " + 
                    " 420, " + 
                    " 293628909552948478 " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/favourites?" + 
                    "age_2=woEH45uAYxj&" + 
                    "time_2=")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (204) DELETE:/api/v2/activities/{id}/rating
    */
    @Test(timeout = 60000)
    public void test_91_deleteOnRatingReturns204() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 989L)
            .and().insertInto("USERS", 5768L)
                .d("AUTHORIZATION_LEVEL", "-523236")
                .d("NAME", "\"_EM_77199_XYZ_\"")
            .and().insertInto("ACTIVITY", 5767L)
            .and().insertInto("ACTIVITY_RATING", 5766L)
                .r("ACTIVITY_ID", 989L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "false")
                .d("RATING", "692")
            .and().insertInto("MEDIA_FILE", 5788L)
                .d("AUTHOR", "\"\"")
                .d("CAPTURE_DATE", "\"2085-05-16 14:28:28\"")
                .d("COPY_RIGHT", "\"_EM_77200_XYZ_\"")
                .d("MIME_TYPE", "\"NyK5RUm82CUxW\"")
                .d("NAME", "\"TB51ven\"")
                .d("URI", "\"_EM_79815_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 6417L)
                .d("URI", "\"1kME1EHn1\"")
            .and().insertInto("TAG", 6416L)
                .d("GRP", "\"YPwAED^LwEkE\"")
                .d("NAME", "\"JHKpzGmV1PQ\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v2/activities/1/rating")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (204) POST:/api/v2/activities/{id}/rating
    */
    @Test(timeout = 60000)
    public void test_92_postOnRatingReturns204() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 2162L)
            .and().insertInto("USERS", 2165L)
                .d("AUTHORIZATION_LEVEL", "2026")
                .d("NAME", "\"7iyVrB\"")
            .and().insertInto("ACTIVITY", 2164L)
            .and().insertInto("ACTIVITY_RATING", 2163L)
                .r("ACTIVITY_ID", 2164L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "true")
                .d("RATING", "613")
            .and().insertInto("SYSTEM_MESSAGE", 2166L)
                .d("KEY", "\"sMlFi5aUcjJ2NaCg\"")
                .d("VALID_FROM", "\"2045-01-11 04:17:57\"")
                .d("VALID_TO", "\"2045-06-22 23:29:45\"")
                .d("VALUE", "\"148679\"")
            .and().insertInto("MEDIA_FILE", 2167L)
                .d("AUTHOR", "\"VJk\"")
                .d("CAPTURE_DATE", "\"1986-04-23 10:08:05\"")
                .d("COPY_RIGHT", "\"URyE\"")
                .d("MIME_TYPE", "\"_EM_44177_XYZ_\"")
                .d("NAME", "\"JAbH5k\"")
                .d("URI", "\"_EM_43869_XYZ_\"")
            .and().insertInto("USERS", 9962L)
                .d("AUTHORIZATION_LEVEL", "696")
                .d("NAME", "\"5gGrntaxLTVtOww\"")
            .and().insertInto("ACTIVITY", 9961L)
            .and().insertInto("ACTIVITY", 9960L)
            .and().insertInto("ACTIVITY_RELATION", 9959L)
                .r("ACTIVITY_1_ID", 2164L)
                .r("ACTIVITY_2_ID", 2164L)
                .d("OWNER_ID", "2")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"favourite\": false " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities/4/rating")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (204) POST:/api/v1/favourites
    */
    @Test(timeout = 60000)
    public void test_93_postOnFavouritesReturns204() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 766L)
            .and().insertInto("ACTIVITY", 768L)
            .and().insertInto("ACTIVITY_RATING", 767L)
                .r("ACTIVITY_ID", 766L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "false")
                .d("RATING", "0")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": [ " + 
                    " 3386135073422290129, " + 
                    " -1463798372, " + 
                    " 0, " + 
                    " 878 " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/favourites?EMextraParam123=_EM_16601_XYZ_")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (204) POST:/api/v1/favourites
    */
    @Test(timeout = 60000)
    public void test_94_postOnFavouritesReturns204() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 249L)
                .d("KEY", "\"0mQsn0cb_xRSboXh\"")
                .d("VALID_FROM", "\"2091-09-14 11:39:00\"")
                .d("VALID_TO", "\"1979-11-16 21:55:29\"")
                .d("VALUE", "\"\"")
            .and().insertInto("ACTIVITY", 2069L)
            .and().insertInto("USERS", 2072L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"jl6hmtOCBc6\"")
            .and().insertInto("ACTIVITY", 2071L)
            .and().insertInto("ACTIVITY_RATING", 2070L)
                .r("ACTIVITY_ID", 2069L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "false")
                .d("RATING", "406")
            .and().insertInto("MEDIA_FILE", 4690L)
                .d("URI", "\"3n2Em7\"")
            .and().insertInto("TAG", 4689L)
                .d("GRP", "\"_EM_68529_XYZ_\"")
                .d("NAME", "\"UzCvX2\"")
                .r("MEDIA_FILE_ID", 4690L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": [ " + 
                    " 114, " + 
                    " -523872, " + 
                    " 1, " + 
                    " 0, " + 
                    " -512 " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/favourites")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (204) POST:/api/v1/favourites
    */
    @Test(timeout = 60000)
    public void test_95_postOnFavouritesReturns204() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 270L)
                .d("URI", "\"VEVX3RB\"")
            .and().insertInto("TAG", 269L)
                .d("GRP", "\"_EM_29343_XYZ_\"")
                .d("NAME", "\"wUKVS\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("USERS", 5097L)
                .d("AUTHORIZATION_LEVEL", "538")
                .d("NAME", "\"AKmwMOwRkpST\"")
            .and().insertInto("ACTIVITY", 5096L)
            .and().insertInto("ACTIVITY_RATING", 5095L)
                .r("ACTIVITY_ID", 5096L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "true")
                .d("RATING", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": [ " + 
                    " 988, " + 
                    " 378, " + 
                    " 841 " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/favourites?time_2=L")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (204) POST:/api/v1/favourites
    */
    @Test(timeout = 60000)
    public void test_96_postOnFavouritesReturns204() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 2162L)
            .and().insertInto("USERS", 2165L)
                .d("AUTHORIZATION_LEVEL", "2026")
                .d("NAME", "\"7iyVrB\"")
            .and().insertInto("ACTIVITY", 2164L)
            .and().insertInto("ACTIVITY_RATING", 2163L)
                .r("ACTIVITY_ID", 2164L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "true")
                .d("RATING", "613")
            .and().insertInto("SYSTEM_MESSAGE", 2166L)
                .d("KEY", "\"sMlFi5aUcjJ2NaCg\"")
                .d("VALID_FROM", "\"2045-01-11 04:17:57\"")
                .d("VALID_TO", "\"2045-06-22 23:29:45\"")
                .d("VALUE", "\"148679\"")
            .and().insertInto("MEDIA_FILE", 2167L)
                .d("AUTHOR", "\"VJk\"")
                .d("CAPTURE_DATE", "\"1986-04-23 10:08:05\"")
                .d("COPY_RIGHT", "\"URyE\"")
                .d("MIME_TYPE", "\"_EM_44177_XYZ_\"")
                .d("NAME", "\"JAbH5k\"")
                .d("URI", "\"_EM_43869_XYZ_\"")
            .and().insertInto("USERS", 9962L)
                .d("AUTHORIZATION_LEVEL", "696")
                .d("NAME", "\"5gGrntaxLTVtOww\"")
            .and().insertInto("ACTIVITY", 9961L)
            .and().insertInto("ACTIVITY", 9960L)
            .and().insertInto("ACTIVITY_RELATION", 9959L)
                .r("ACTIVITY_1_ID", 2164L)
                .r("ACTIVITY_2_ID", 2164L)
                .d("OWNER_ID", "2")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": [ " + 
                    " 822 " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/favourites")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (204) POST:/api/v1/favourites
    */
    @Test(timeout = 60000)
    public void test_97_postOnFavouritesReturns204() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 249L)
                .d("KEY", "\"0mOsn0cb_xRSboXh\"")
                .d("VALID_FROM", "\"2091-09-14 11:39:00\"")
                .d("VALID_TO", "\"1979-11-16 21:55:29\"")
                .d("VALUE", "\"_EM_68528_XYZ_\"")
            .and().insertInto("ACTIVITY", 2069L)
            .and().insertInto("USERS", 2072L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"jl6hmtOCBc6\"")
            .and().insertInto("ACTIVITY", 2071L)
            .and().insertInto("ACTIVITY_RATING", 2070L)
                .r("ACTIVITY_ID", 2071L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "true")
                .d("RATING", "402")
            .and().insertInto("MEDIA_FILE", 4690L)
                .d("URI", "\"3n2Em7\"")
            .and().insertInto("TAG", 4689L)
                .d("GRP", "\"_EM_68529_XYZ_\"")
                .d("NAME", "\"UzCvX2\"")
                .r("MEDIA_FILE_ID", 4690L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": [ " + 
                    " 114, " + 
                    " -523872, " + 
                    " 1, " + 
                    " 0, " + 
                    " -512 " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/favourites")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
    }


}
