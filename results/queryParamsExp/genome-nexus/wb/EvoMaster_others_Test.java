import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.controller.mongo.dsl.MongoDsl.mongo;
import  org.evomaster.client.java.controller.api.dto.database.operations.MongoInsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.MongoInsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-02-12T08:58:08.279-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 18 tests
 * <br>
*  Covered targets: 1588
 * <br>
*  Used time: 0h 18m 38s
 * <br>
*  Needed budget for current results: 99%
 * <br>
*  This file contains test cases that represent failed calls, but not indicative of faults.
*/
public class EvoMaster_others_Test {

    
    private static final SutHandler controller = new em.embedded.org.cbioportal.genome_nexus.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetStateOfSUT();
    }
    
    
    
    
    /**
    * Calls:
    * (400) GET:/ensembl/xrefs
    */
    @Test(timeout = 60000)
    public void test_0_getOnXrefsReturns400() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/ensembl/xrefs?accession=7WD47cO6x")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'message'", containsString("{\"error\":\"ID '7WD47cO6x' not found\"}"));
    }
    
    
    /**
    * Calls:
    * (404) POST:/ptm/experimental
    */
    @Test(timeout = 60000)
    public void test_1_postOnExperimentalReturns404() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/ptm/experimental")
                .then()
                .statusCode(404)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (404) GET:/ensembl/canonical-transcript/hgnc/{hugoSymbol}
    */
    @Test(timeout = 60000)
    public void test_2_getOnHgncReturns404UsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("annotator", "ensembl.canonical_transcript_per_hgnc")
                .d("{\"hgnc_symbol\":\"_EM_3022_XYZ_\", \"ensembl_canonical_gene\":\"_EM_3006_XYZ_\", \"ensembl_canonical_transcript\":\"_EM_3007_XYZ_\", \"genome_nexus_canonical_transcript\":\"ptt\", \"uniprot_canonical_transcript\":\"LQ0Lqs48k8iwYVh\", \"mskcc_canonical_transcript\":\"Y26wLqt6NU\", \"hgnc_id\":\"Iny6NyRdNsEFSDzN\", \"approved_name\":\"4jPO62ScGoIZj4U\", \"status\":\"_EM_3023_XYZ_\", \"previous_symbols\":\"_EM_3024_XYZ_\", \"synonyms\":\"Z1PPfaXiEYAF1b\", \"accession_numbers\":\"E\", \"refseq_ids\":\"_EM_3025_XYZ_\", \"uniprot_id\":\"Vi01\", \"entrez_gene_id\":\"GR2\", \"_id\":{\"$oid\":\"27e4aae41b4bfc08132b91b7\"}}")
            .and().insertInto("annotator", "ensembl.canonical_transcript_per_hgnc")
                .d("{\"hgnc_symbol\":\"_EM_3011_XYZ_\", \"ensembl_canonical_gene\":\"N7a5cqsO6iPqPGJ\", \"ensembl_canonical_transcript\":\"_EM_3012_XYZ_\", \"genome_nexus_canonical_transcript\":\"o0eKAfkE8HJ\", \"uniprot_canonical_transcript\":\"TQmgNF\", \"mskcc_canonical_transcript\":\"8pn\", \"hgnc_id\":\"XYqOdkOgHiAqEr\", \"approved_name\":\"PUC3\", \"status\":\"H3UFsMoVAY\", \"previous_symbols\":\"Jnl3Qq_\", \"synonyms\":\"wO5\", \"accession_numbers\":\"bKp5KUo\", \"refseq_ids\":\"\", \"uniprot_id\":\"ksPdeDsFKD(LaP\", \"entrez_gene_id\":\"9rASzLl7ZA\", \"_id\":{\"$oid\":\"0d2fadbc0e3eec782db88b4d\"}}")
            .and().insertInto("annotator", "ensembl.canonical_transcript_per_hgnc")
                .d("{\"hgnc_symbol\":\"_EM_3026_XYZ_\", \"ensembl_canonical_gene\":\"R\", \"ensembl_canonical_transcript\":\"qgoGS\", \"genome_nexus_canonical_transcript\":\"_EM_3027_XYZ_\", \"uniprot_canonical_transcript\":\"HWiZsOsDEMoc3fW\", \"mskcc_canonical_transcript\":\"N3\", \"hgnc_id\":\"brrCwC1U_hPbaYZa\", \"approved_name\":\"VewRF7vRo\", \"status\":\"MSM2Ki\", \"previous_symbols\":\"p_QB5ZfJ6FnAt\", \"synonyms\":\"GCnQMG\", \"accession_numbers\":\"xkVx_9\", \"refseq_ids\":\"TyD\", \"uniprot_id\":\"JS\", \"entrez_gene_id\":\"swqdWiwH8dalmC3\", \"_id\":{\"$oid\":\"0c71a0648b5fcd20fac1ed0e\"}}")
            .and().insertInto("annotator", "ensembl.canonical_transcript_per_hgnc")
                .d("{\"hgnc_symbol\":\"SE_eDq2\", \"ensembl_canonical_gene\":\"_EM_3015_XYZ_\", \"ensembl_canonical_transcript\":\"OQSj68r\", \"genome_nexus_canonical_transcript\":\"_EM_3028_XYZ_\", \"uniprot_canonical_transcript\":\"mv\", \"mskcc_canonical_transcript\":\"]Fw\", \"hgnc_id\":\"_EM_3029_XYZ_\", \"approved_name\":\"04MqkSRltN1kePs\", \"status\":\"8HzqtLyqUnIB\", \"previous_symbols\":\"_EM_3030_XYZ_\", \"synonyms\":\"cAry2xNm\", \"accession_numbers\":\"mttyK6dMn012p\", \"refseq_ids\":\"_EM_3016_XYZ_\", \"uniprot_id\":\"5YUG\", \"entrez_gene_id\":\"q\", \"_id\":{\"$oid\":\"4eee6d0fbcc0de83fae4d33b\"}}")
            .and().insertInto("annotator", "ensembl.canonical_transcript_per_hgnc")
                .d("{\"hgnc_symbol\":\"Nvfez_\", \"ensembl_canonical_gene\":\"5Z00\", \"ensembl_canonical_transcript\":\"PRZh\", \"genome_nexus_canonical_transcript\":\"6StLKoRcXqQclG\", \"uniprot_canonical_transcript\":\"TZRQOx7Ur\", \"mskcc_canonical_transcript\":\"shYrLtg\", \"hgnc_id\":\"lTyu\", \"approved_name\":\"Ye_uO7a\", \"status\":\"JYEFmthTLk3FB1\", \"previous_symbols\":\"Sk6iWiHGExv\", \"synonyms\":\"5f3wEtVfUpR1\", \"accession_numbers\":\"b4P4ZZBk3\", \"refseq_ids\":\"RFzGlrFOqff078zN\", \"uniprot_id\":\"4bJvm1hHp4Rvk\", \"entrez_gene_id\":\"Fye8vsdqz62yi\", \"_id\":{\"$oid\":\"37dfbfb5fdd1e0225b343d68\"}}")
            .and().insertInto("annotator", "ensembl.canonical_transcript_per_hgnc")
                .d("{\"hgnc_symbol\":\"jydiMn2\", \"ensembl_canonical_gene\":\"8th\", \"ensembl_canonical_transcript\":\"p5JNs7\", \"genome_nexus_canonical_transcript\":\"AoF7cgTM\", \"uniprot_canonical_transcript\":\"_EM_3017_XYZ_\", \"mskcc_canonical_transcript\":\"n2m5\", \"hgnc_id\":\"b79aRiv_O\", \"approved_name\":\"_EM_3018_XYZ_\", \"status\":\"0JM\", \"previous_symbols\":\"NsgOCl\", \"synonyms\":\"_EM_3019_XYZ_\", \"accession_numbers\":\"mJfFj32tQ8C8\", \"refseq_ids\":\"_EM_3020_XYZ_\", \"uniprot_id\":\"_EM_3021_XYZ_\", \"entrez_gene_id\":\"\", \"_id\":{\"$oid\":\"f00eebc1b6cd4a6ead5ca90e\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/ensembl/canonical-transcript/hgnc/V%7BM4Yt0a0ZRy?isoformOverrideSource=CF9MCP2v")
                .then()
                .statusCode(404)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (404) POST:/ensembl/canonical-gene/entrez
    */
    @Test(timeout = 60000)
    public void test_3_postOnEntrezReturns404() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" [ " + 
                    " \"_EM_184_XYZ_\" " + 
                    " ] ")
                .post(baseUrlOfSut + "/ensembl/canonical-gene/entrez?EMextraParam123=_EM_185_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (404) GET:/pfam/domain/{pfamAccession}
    */
    @Test(timeout = 60000)
    public void test_4_getOnDomainReturns404() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_16_XYZ_")
                .get(baseUrlOfSut + "/pfam/domain/_EM_14_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'message'", containsString("PFAM domain not found: _EM_14_XYZ_"));
    }
    
    
    /**
    * Calls:
    * (404) GET:/ensembl/canonical-gene/entrez/{entrezGeneId}
    */
    @Test(timeout = 60000)
    public void test_5_getOnEntrezReturns404() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/ensembl/canonical-gene/entrez/352?EMextraParam123=42")
                .then()
                .statusCode(404)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (404) GET:/ensembl/canonical-gene/entrez/{entrezGeneId}
    */
    @Test(timeout = 60000)
    public void test_6_getOnEntrezReturns404UsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("annotator", "ensembl.canonical_transcript_per_hgnc")
                .d("{\"hgnc_symbol\":\"4W_jlknbInL0\", \"ensembl_canonical_gene\":\"thJ4VsCRMZA\", \"ensembl_canonical_transcript\":\"ww\", \"genome_nexus_canonical_transcript\":\"U73748\", \"uniprot_canonical_transcript\":\"Wm88SeBKfyR8Mn\", \"mskcc_canonical_transcript\":\"\", \"hgnc_id\":\"ULWg\", \"approved_name\":\"cGXD\", \"status\":\"8Riw4o\", \"previous_symbols\":\"4Rwi9hKhqbTc\", \"synonyms\":\"q7zll40_h296\", \"accession_numbers\":\"0\", \"refseq_ids\":\"pGcRKeWNqQbsU\", \"uniprot_id\":\"o0VBLkLElLAC\", \"entrez_gene_id\":\"ifp\", \"_id\":{\"$oid\":\"e6ff9f4fe1e4a2cd9aa1f81b\"}}")
            .and().insertInto("annotator", "ensembl.canonical_transcript_per_hgnc")
                .d("{\"hgnc_symbol\":\"b5\", \"ensembl_canonical_gene\":\"tZL0wKSK\", \"ensembl_canonical_transcript\":\"a_PDAIDLANLVSPc0\", \"genome_nexus_canonical_transcript\":\"6qsbXVQI\", \"uniprot_canonical_transcript\":\"VrCrphqEEYbNu\", \"mskcc_canonical_transcript\":\"j4NdwYBv3aIi\", \"hgnc_id\":\"8ziOgIZ89KF41\", \"approved_name\":\"VOWierZ0\", \"status\":\"RILFzKf44\", \"previous_symbols\":\"BVysV\", \"synonyms\":\"VD7F8F\", \"accession_numbers\":\"A4He\", \"refseq_ids\":\"tQzA\", \"uniprot_id\":\"53jEa2_1dmcvNfNo\", \"entrez_gene_id\":\"eWxMcXY\", \"_id\":{\"$oid\":\"a4f6acb66dbe37ac1a8afdcc\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/ensembl/canonical-gene/entrez/-1073741392")
                .then()
                .statusCode(404)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (404) GET:/ensembl/canonical-gene/hgnc/{hugoSymbol}
    */
    @Test(timeout = 60000)
    public void test_7_getOnCanonical_geneHgncReturns404() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_3_XYZ_")
                .get(baseUrlOfSut + "/ensembl/canonical-gene/hgnc/_EM_1_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (404) POST:/ensembl/canonical-gene/hgnc
    */
    @Test(timeout = 60000)
    public void test_8_postOnHgncReturns404UsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("annotator", "ensembl.canonical_transcript_per_hgnc")
                .d("{\"hgnc_symbol\":\"2qhYo3\", \"ensembl_canonical_gene\":\"Klye4zkWbgG51e\", \"ensembl_canonical_transcript\":\"9EbHPuv_E8EBew0\", \"genome_nexus_canonical_transcript\":\"N14m1IDzv_\", \"uniprot_canonical_transcript\":\"\", \"mskcc_canonical_transcript\":\"Vp\", \"hgnc_id\":\"CAF846fKE3UkxHL\", \"approved_name\":\"WGW7V\", \"status\":\"rdnqHsmaE\", \"previous_symbols\":\"JfW1B5mjjilfnV\", \"synonyms\":\"7W4rnSTyIcaDzJdY\", \"accession_numbers\":\"yqL7FYrbu0YbUY\", \"refseq_ids\":\"\", \"uniprot_id\":\"HMeyGs6i4T6AW\", \"entrez_gene_id\":\"IWm5jH\", \"_id\":{\"$oid\":\"74e12fba11977ea9efd1e77e\"}}")
            .and().insertInto("annotator", "ensembl.canonical_transcript_per_hgnc")
                .d("{\"hgnc_symbol\":\"_\", \"ensembl_canonical_gene\":\"H_\", \"ensembl_canonical_transcript\":\"UHv\", \"genome_nexus_canonical_transcript\":\"cDZ0DzT\", \"uniprot_canonical_transcript\":\"90j\", \"mskcc_canonical_transcript\":\"_EM_1298_XYZ_\", \"hgnc_id\":\"eNkjw8hVC8W\", \"approved_name\":\"KHe\", \"status\":\"a3IX\", \"previous_symbols\":\"g8KFXmI\", \"synonyms\":\"1XOwBw\", \"accession_numbers\":\"yYhYndyO\", \"refseq_ids\":\"7y\", \"uniprot_id\":\"I\", \"entrez_gene_id\":\"Gn2kZ3d8a\", \"_id\":{\"$oid\":\"f9b5ecbfed6fcfcf4526a19e\"}}")
            .and().insertInto("annotator", "ensembl.canonical_transcript_per_hgnc")
                .d("{\"hgnc_symbol\":\"k88Hnrc2dRc6TF4\", \"ensembl_canonical_gene\":\"w8hDGyud4\", \"ensembl_canonical_transcript\":\"LP_k0BWGGecc2\", \"genome_nexus_canonical_transcript\":\"AlCbXroXH4\", \"uniprot_canonical_transcript\":\"DvTYN\", \"mskcc_canonical_transcript\":\"yJEqejq7wer8F\", \"hgnc_id\":\"lS\", \"approved_name\":\"IJThKN\", \"status\":\"2uiiuC\", \"previous_symbols\":\"IFCYn4\", \"synonyms\":\"3BOC1sq2qG0BPy0\", \"accession_numbers\":\"fn7QfDYc5w\", \"refseq_ids\":\"px_f833H096lc\", \"uniprot_id\":\"jIsAhyzf3NlY_j7\", \"entrez_gene_id\":\"QTUjV92\", \"_id\":{\"$oid\":\"09cbccd4a0ce4ddf9ba2f425\"}}")
            .and().insertInto("annotator", "ensembl.canonical_transcript_per_hgnc")
                .d("{\"hgnc_symbol\":\"DWweHPiFyRtToyz\", \"ensembl_canonical_gene\":\"oiv\", \"ensembl_canonical_transcript\":\"dVLpyP\", \"genome_nexus_canonical_transcript\":\"GShB7w\", \"uniprot_canonical_transcript\":\"7xoMPfolA9_3JW\", \"mskcc_canonical_transcript\":\"H\", \"hgnc_id\":\"PPcUDO\", \"approved_name\":\"KczC\", \"status\":\"QoVP_nJ3GCfoW\", \"previous_symbols\":\"yZ_asjdQ\", \"synonyms\":\"tJiY_X18uzn9Z\", \"accession_numbers\":\"S1SFjju1g6rXM9k\", \"refseq_ids\":\"hyftGvl6SO4X\", \"uniprot_id\":\"1EdgEm3qsS4uP\", \"entrez_gene_id\":\"GETqocNaHu5e6\", \"_id\":{\"$oid\":\"1cb8bf1f93f2184bb87d4b0a\"}}")
            .and().insertInto("annotator", "ensembl.canonical_transcript_per_hgnc")
                .d("{\"hgnc_symbol\":\"0cs\", \"ensembl_canonical_gene\":\"rAQrTGLz2fie\", \"ensembl_canonical_transcript\":\"tVneM_qCycXgQ\", \"genome_nexus_canonical_transcript\":\"PU\", \"uniprot_canonical_transcript\":\"F9\", \"mskcc_canonical_transcript\":\"zFCVVqUU8ER\", \"hgnc_id\":\"IN7H\", \"approved_name\":\"IdaNMaESjL2\", \"status\":\"GCv3OaOjNZDp8dp\", \"previous_symbols\":\"bVc\", \"synonyms\":\"DqYWlNy\", \"accession_numbers\":\"FQ1_hLL8osMylpX\", \"refseq_ids\":\"t0p8wo8UCMMaJ\", \"uniprot_id\":\"\", \"entrez_gene_id\":\"DwoIazX\", \"_id\":{\"$oid\":\"bf3de72cb4c64912393c34d5\"}}")
            .and().insertInto("annotator", "ensembl.canonical_transcript_per_hgnc")
                .d("{\"hgnc_symbol\":\"IQ_\", \"ensembl_canonical_gene\":\"e_\", \"ensembl_canonical_transcript\":\"mnmKdWFhQE\", \"genome_nexus_canonical_transcript\":\"ZRuMXTL6bqcg\", \"uniprot_canonical_transcript\":\"L4mdhZ51SCbR_lJ\", \"mskcc_canonical_transcript\":\"zyfvDJ\", \"hgnc_id\":\"eWezuLIjPoFo\", \"approved_name\":\"A8\", \"status\":\"b5u9RV024W2x9hs9\", \"previous_symbols\":\"I1wpflzLf4\", \"synonyms\":\"bxF\", \"accession_numbers\":\"YJLjJ\", \"refseq_ids\":\"2328Dn8w\", \"uniprot_id\":\"f1qI\", \"entrez_gene_id\":\"nf\", \"_id\":{\"$oid\":\"1a659bb9161aa1a3d2f9b3db\"}}")
            .and().insertInto("annotator", "ensembl.canonical_transcript_per_hgnc")
                .d("{\"hgnc_symbol\":\"8hGpmPicYAT8Ck\", \"ensembl_canonical_gene\":\"JaVj\", \"ensembl_canonical_transcript\":\"pJaPZkVQV0J0aj\", \"genome_nexus_canonical_transcript\":\"AZ6xsdVCkZGpaLE\", \"uniprot_canonical_transcript\":\"\", \"mskcc_canonical_transcript\":\"UbT\", \"hgnc_id\":\"vAdaF\", \"approved_name\":\"D\", \"status\":\"\", \"previous_symbols\":\"KOa0h7vGboO\", \"synonyms\":\"Khepz2I1Dw\", \"accession_numbers\":\"ZkvFNCtNIY8\", \"refseq_ids\":\"ygyz0\", \"uniprot_id\":\"d6plYKaX\", \"entrez_gene_id\":\"r2eeKZCbGcczQUZT\", \"_id\":{\"$oid\":\"a187e22a75a4aaa1ed212c4f\"}}")
            .and().insertInto("annotator", "ensembl.canonical_transcript_per_hgnc")
                .d("{\"hgnc_symbol\":\"vZBMvGirPk1\", \"ensembl_canonical_gene\":\"73jvK3UKbl7O\", \"ensembl_canonical_transcript\":\"BO6L0ApxgWsXmet\", \"genome_nexus_canonical_transcript\":\"U1yi867ss1\", \"uniprot_canonical_transcript\":\"sK8Tqg3irS\", \"mskcc_canonical_transcript\":\"rh68h7gUW_Q4Vl\", \"hgnc_id\":\"u\", \"approved_name\":\"dC41N655yCfk0l68\", \"status\":\"T1ng_TvU\", \"previous_symbols\":\"ASb5nae4FrbpMP\", \"synonyms\":\"vAjQTH4_kyQ4D\", \"accession_numbers\":\"6sJAcvf1V1j\", \"refseq_ids\":\"hfjvTUpMa7NN\", \"uniprot_id\":\"4m_WhNmQjjqtO\", \"entrez_gene_id\":\"Q4VQKCNlr\", \"_id\":{\"$oid\":\"5d2f5aa8c2ddbdb108cac1cd\"}}")
            .and().insertInto("annotator", "ensembl.canonical_transcript_per_hgnc")
                .d("{\"hgnc_symbol\":\"tN5MWq3Jdgh\", \"ensembl_canonical_gene\":\"jsUc1E9TPFARN\", \"ensembl_canonical_transcript\":\"pcsrqn7\", \"genome_nexus_canonical_transcript\":\"p7FdfKWXwE8tLZ\", \"uniprot_canonical_transcript\":\"ZJL\", \"mskcc_canonical_transcript\":\"gflOOZ6RTkT8\", \"hgnc_id\":\"H\", \"approved_name\":\"b.\", \"status\":\"wbnFCj\", \"previous_symbols\":\"dH6k\", \"synonyms\":\"6Pb5\", \"accession_numbers\":\"3iVTNQlxsfVtG\", \"refseq_ids\":\"uoLyJ\", \"uniprot_id\":\"z\", \"entrez_gene_id\":\"sRs7rRPf\", \"_id\":{\"$oid\":\"e3ba61bbfa00b95197e2d2fd\"}}")
            .and().insertInto("annotator", "ensembl.canonical_transcript_per_hgnc")
                .d("{\"hgnc_symbol\":\"_EM_1299_XYZ_\", \"ensembl_canonical_gene\":\"QZLm3hVjz4hdbeX\", \"ensembl_canonical_transcript\":\"_HF\", \"genome_nexus_canonical_transcript\":\"_EM_1300_XYZ_\", \"uniprot_canonical_transcript\":\"_EM_1301_XYZ_\", \"mskcc_canonical_transcript\":\"ytlP4Oz\", \"hgnc_id\":\"o__erLORyv\", \"approved_name\":\"v2o\", \"status\":\"_EM_1302_XYZ_\", \"previous_symbols\":\"TJg_dwV3hIUDDpBK\", \"synonyms\":\"4O\", \"accession_numbers\":\"Hpc\", \"refseq_ids\":\"_EM_1303_XYZ_\", \"uniprot_id\":\"7KG_9KwA\", \"entrez_gene_id\":\"jX\", \"_id\":{\"$oid\":\"921cd042f6e2d9bdead9b7be\"}}")
            .and().insertInto("annotator", "ensembl.canonical_transcript_per_hgnc")
                .d("{\"hgnc_symbol\":\"ui\", \"ensembl_canonical_gene\":\"Ufr\", \"ensembl_canonical_transcript\":\"m1glOU9b\", \"genome_nexus_canonical_transcript\":\"xGSj8rKv51L7g6x4\", \"uniprot_canonical_transcript\":\"HKJ3PCaX\", \"mskcc_canonical_transcript\":\"OylulsXQEjVRq90\", \"hgnc_id\":\"ge\", \"approved_name\":\"wo\", \"status\":\"hP37OX9GbI\", \"previous_symbols\":\"\", \"synonyms\":\"L\", \"accession_numbers\":\"y5mSdSl\", \"refseq_ids\":\"KxXRuGy\", \"uniprot_id\":\"gRIO5dkWeRRRqC34\", \"entrez_gene_id\":\"Kx6LF8CAhBCgg\", \"_id\":{\"$oid\":\"128ecd0f4e5f8dec3ecdc3fd\"}}")
            .and().insertInto("annotator", "ensembl.canonical_transcript_per_hgnc")
                .d("{\"hgnc_symbol\":\"Tr8qiWFLwhd2\", \"ensembl_canonical_gene\":\"zuu8ylGn7wcvAsB\", \"ensembl_canonical_transcript\":\"YR4zP4jldgUffQ\", \"genome_nexus_canonical_transcript\":\"Ncm0Ojks4NMTgcj\", \"uniprot_canonical_transcript\":\"4wxvbe1B\", \"mskcc_canonical_transcript\":\"tnBi8I1Y1\", \"hgnc_id\":\"4PRGhcPTBqTVQt\", \"approved_name\":\"HJGNAbE6\", \"status\":\"bbXktq\", \"previous_symbols\":\"Ee\", \"synonyms\":\"8FrAabxqa9w\", \"accession_numbers\":\"zgbMaUW\", \"refseq_ids\":\"B5z\", \"uniprot_id\":\"xgNsRSPk6Bmk\", \"entrez_gene_id\":\"x\", \"_id\":{\"$oid\":\"eb5c1fa64a6dc779ebea5ee2\"}}")
            .and().insertInto("annotator", "ensembl.canonical_transcript_per_hgnc")
                .d("{\"hgnc_symbol\":\"QVsAEycsT\", \"ensembl_canonical_gene\":\"0a\", \"ensembl_canonical_transcript\":\"Okg\", \"genome_nexus_canonical_transcript\":\"WOYaXymmBYYZnc\", \"uniprot_canonical_transcript\":\"6\", \"mskcc_canonical_transcript\":\"mA\", \"hgnc_id\":\"j09Va\", \"approved_name\":\"bjAI6czx5\", \"status\":\"ROnHyeiRF\", \"previous_symbols\":\"M\", \"synonyms\":\"\", \"accession_numbers\":\"F3kNhMutIHg7Lf95\", \"refseq_ids\":\"ig0\", \"uniprot_id\":\"lFx657QuAOF3\", \"entrez_gene_id\":\"rAi7O\", \"_id\":{\"$oid\":\"fac9a1db9db612ec5491a516\"}}")
            .and().insertInto("annotator", "ensembl.canonical_transcript_per_hgnc")
                .d("{\"hgnc_symbol\":\"fSzrqMLg\", \"ensembl_canonical_gene\":\"_EM_1304_XYZ_\", \"ensembl_canonical_transcript\":\"TR736ScevMPOrr0\", \"genome_nexus_canonical_transcript\":\"u\", \"uniprot_canonical_transcript\":\"tWK9\", \"mskcc_canonical_transcript\":\"DFNsEvC\", \"hgnc_id\":\"x7EPMjkEQk\", \"approved_name\":\"_EM_1305_XYZ_\", \"status\":\"zIzrH04O9L\", \"previous_symbols\":\"2Z\", \"synonyms\":\"_EM_1306_XYZ_\", \"accession_numbers\":\"XMkHJAjfDzKMBx\", \"refseq_ids\":\"f4CJk0miWPVm8Yo\", \"uniprot_id\":\"GmKFdU\", \"entrez_gene_id\":\"ZE\", \"_id\":{\"$oid\":\"f5f83001dfe6f5e58cc725cf\"}}")
            .and().insertInto("annotator", "ensembl.canonical_transcript_per_hgnc")
                .d("{\"hgnc_symbol\":\"oz\", \"ensembl_canonical_gene\":\"jiVwRv7y\", \"ensembl_canonical_transcript\":\"rGohoXhZG7O8Z7v\", \"genome_nexus_canonical_transcript\":\"\", \"uniprot_canonical_transcript\":\"1Eo2J2taq38Fyq\", \"mskcc_canonical_transcript\":\"OnrM\", \"hgnc_id\":\"1S25H\", \"approved_name\":\"cBS2gvntQewPqf8g\", \"status\":\"tx\", \"previous_symbols\":\"0ZjbAzxmj\", \"synonyms\":\"jVt1TFwyQCZZ3h7z\", \"accession_numbers\":\"K3rE6YBn_XGBIg4\", \"refseq_ids\":\"v1bmse2GikI1a\", \"uniprot_id\":\"V7Iz6rBTKHMSW\", \"entrez_gene_id\":\"C1b6C76D0AvlNR\", \"_id\":{\"$oid\":\"2214a4ed216bbeaa547bde18\"}}")
            .and().insertInto("annotator", "ensembl.canonical_transcript_per_hgnc")
                .d("{\"hgnc_symbol\":\"DeB\", \"ensembl_canonical_gene\":\"7vxZDmHZ3ps\", \"ensembl_canonical_transcript\":\"OBLH4xtqvs\", \"genome_nexus_canonical_transcript\":\"L6LUg61zwmsw\", \"uniprot_canonical_transcript\":\"9QpLqxzGS86aS\", \"mskcc_canonical_transcript\":\"hxSJVa7ySWxFCpm\", \"hgnc_id\":\"v6\", \"approved_name\":\"\", \"status\":\"ZVi71A\", \"previous_symbols\":\"u\", \"synonyms\":\"SW72nR2kRq6N\", \"accession_numbers\":\"xFsT4oU7jkj_6MQU\", \"refseq_ids\":\"TWlO4bObSZ_e\", \"uniprot_id\":\"Z_ZhV\", \"entrez_gene_id\":\"9dypJDPWB_9pGDb\", \"_id\":{\"$oid\":\"2af0cea1dda736ffde09d883\"}}")
            .and().insertInto("annotator", "ensembl.canonical_transcript_per_hgnc")
                .d("{\"hgnc_symbol\":\"2BD0G4pExDCfgRcq\", \"ensembl_canonical_gene\":\"jRcb_VNiq7YS1Gr\", \"ensembl_canonical_transcript\":\"mlkBsj\", \"genome_nexus_canonical_transcript\":\"oWvFNW_MbeybOcqa\", \"uniprot_canonical_transcript\":\"4kBwyo95Wen\", \"mskcc_canonical_transcript\":\"Z\", \"hgnc_id\":\"TX3JjbUOYyXSVh\", \"approved_name\":\"C\", \"status\":\"SZ7as\", \"previous_symbols\":\"7WTBbocH\", \"synonyms\":\"_EM_1307_XYZ_\", \"accession_numbers\":\"Blvif\", \"refseq_ids\":\"P0CtZa5LgmyaB\", \"uniprot_id\":\"qZq5rUni5MX0P\", \"entrez_gene_id\":\"petwtxs_bZm\", \"_id\":{\"$oid\":\"ff9aefb35df7d0b7fd7d06db\"}}")
            .and().insertInto("annotator", "ensembl.canonical_transcript_per_hgnc")
                .d("{\"hgnc_symbol\":\"VzqeGKTpCiDnOm1\", \"ensembl_canonical_gene\":\"WgviNVn_Zr75F\", \"ensembl_canonical_transcript\":\"k\", \"genome_nexus_canonical_transcript\":\"fMUlpOV\", \"uniprot_canonical_transcript\":\"yrfWgAXMUFmyEZ\", \"mskcc_canonical_transcript\":\"ef8CxJlU0dK\", \"hgnc_id\":\"t6V8K\", \"approved_name\":\"bqO9E\", \"status\":\"e06aDk\", \"previous_symbols\":\"oD8FJWpCwSyt\", \"synonyms\":\"GYqWXyx2D3t\", \"accession_numbers\":\"vEj9uDzJMsm\", \"refseq_ids\":\"UIs8A\", \"uniprot_id\":\"uxwVuBJ\", \"entrez_gene_id\":\"cjeqmgGZRLqbmN5\", \"_id\":{\"$oid\":\"91f5def6d9afdb682445f0ab\"}}")
            .and().insertInto("annotator", "ensembl.canonical_transcript_per_hgnc")
                .d("{\"hgnc_symbol\":\"6xDJP_1xxV7_cdd\", \"ensembl_canonical_gene\":\"N\", \"ensembl_canonical_transcript\":\"_EM_1308_XYZ_\", \"genome_nexus_canonical_transcript\":\"UgrHV7u6zbWZew\", \"uniprot_canonical_transcript\":\"_EM_1309_XYZ_\", \"mskcc_canonical_transcript\":\"BsLt93blUrlB\", \"hgnc_id\":\"_EM_1310_XYZ_\", \"approved_name\":\"_EM_1311_XYZ_\", \"status\":\"g9y9Ea4uW9xvZ5K5\", \"previous_symbols\":\"_EM_1312_XYZ_\", \"synonyms\":\"\", \"accession_numbers\":\"_EM_1313_XYZ_\", \"refseq_ids\":\"_EM_1314_XYZ_\", \"uniprot_id\":\"LXUhZR6bxMKnl\", \"entrez_gene_id\":\"6k_Ne9tC\", \"_id\":{\"$oid\":\"6036e237d2da2ceec9cccc15\"}}")
            .and().insertInto("annotator", "ensembl.canonical_transcript_per_hgnc")
                .d("{\"hgnc_symbol\":\"yXcfOUFcB\", \"ensembl_canonical_gene\":\"kdkMdwSReuZkVk\", \"ensembl_canonical_transcript\":\"fMO\", \"genome_nexus_canonical_transcript\":\"CgwPSb1\", \"uniprot_canonical_transcript\":\"\", \"mskcc_canonical_transcript\":\"Og7HXTDNUEgC6ay\", \"hgnc_id\":\"ix6kq\", \"approved_name\":\"HR\", \"status\":\"qjRAgLU3SCRYf\", \"previous_symbols\":\"\", \"synonyms\":\"rtoW\", \"accession_numbers\":\"lNS\", \"refseq_ids\":\"RmCQ1f4hROJTGMWP\", \"uniprot_id\":\"MAdd\", \"entrez_gene_id\":\"N5OotVwiJqm4lEI\", \"_id\":{\"$oid\":\"1a515b90939d14349ebb6c35\"}}")
            .and().insertInto("annotator", "ensembl.canonical_transcript_per_hgnc")
                .d("{\"hgnc_symbol\":\"4PHX\", \"ensembl_canonical_gene\":\"uCytSiT\", \"ensembl_canonical_transcript\":\"QRkm\", \"genome_nexus_canonical_transcript\":\"4bRaKmxvi6Xke93b\", \"uniprot_canonical_transcript\":\"\", \"mskcc_canonical_transcript\":\"TQDm\", \"hgnc_id\":\"Ejq_z\", \"approved_name\":\"Dl6ZoGAlDFx9\", \"status\":\"PgkX\", \"previous_symbols\":\"4agF01ongQo7Hd\", \"synonyms\":\"_uCR99Caqq\", \"accession_numbers\":\"kQ\", \"refseq_ids\":\"QVyGBFk1VS_mXfX\", \"uniprot_id\":\"5WlxU\", \"entrez_gene_id\":\"BtoJzu\", \"_id\":{\"$oid\":\"da51cdc8a0e40a1f62cdbae0\"}}")
            .and().insertInto("annotator", "ensembl.canonical_transcript_per_hgnc")
                .d("{\"hgnc_symbol\":\"1AiqNYa8ay_\", \"ensembl_canonical_gene\":\"zXNe\", \"ensembl_canonical_transcript\":\"gahO4h\", \"genome_nexus_canonical_transcript\":\"o8gdffkMsMTsL\", \"uniprot_canonical_transcript\":\"VvwxPGH_gyZ177\", \"mskcc_canonical_transcript\":\"GG44mo_TXd_20QZW\", \"hgnc_id\":\"4\", \"approved_name\":\"aww\", \"status\":\"NxkDZSop1AB\", \"previous_symbols\":\"Ti1opHOorWAa5\", \"synonyms\":\"pdwJccq\", \"accession_numbers\":\"nVSswSPbAKE5A\", \"refseq_ids\":\"Bq8Cs1UvKMcA8jjy\", \"uniprot_id\":\"up4\", \"entrez_gene_id\":\"lUKfw64lObfyS3\", \"_id\":{\"$oid\":\"c54ba14eea4d2490a85966ac\"}}")
            .and().insertInto("annotator", "ensembl.canonical_transcript_per_hgnc")
                .d("{\"hgnc_symbol\":\"L_KHAc\", \"ensembl_canonical_gene\":\"zH95o2_YTq\", \"ensembl_canonical_transcript\":\"eaQtH9gUf16xKp\", \"genome_nexus_canonical_transcript\":\"6eZM1n9\", \"uniprot_canonical_transcript\":\"MS\", \"mskcc_canonical_transcript\":\"AFV5uYs5GCg3XPA3\", \"hgnc_id\":\"dLMhYBAx\", \"approved_name\":\"pfi\", \"status\":\"3KHkWsxMMTNPL7J\", \"previous_symbols\":\"gtcg_w0Trp8pR3RT\", \"synonyms\":\"GM3ItQ0Uu6\", \"accession_numbers\":\"yfrtf7X_iq\", \"refseq_ids\":\"_zp8Cn7G\", \"uniprot_id\":\"RiFrHWIUB\", \"entrez_gene_id\":\"y\", \"_id\":{\"$oid\":\"e26c4ffab7f7ac12306f77e1\"}}")
            .and().insertInto("annotator", "ensembl.canonical_transcript_per_hgnc")
                .d("{\"hgnc_symbol\":\"5x8To1QE72b\", \"ensembl_canonical_gene\":\"_EM_1315_XYZ_\", \"ensembl_canonical_transcript\":\"ewZElfroVaVHL:\", \"genome_nexus_canonical_transcript\":\"JmWfwkyDZ5n7\", \"uniprot_canonical_transcript\":\"eOV9\", \"mskcc_canonical_transcript\":\"_EM_1316_XYZ_\", \"hgnc_id\":\"w\", \"approved_name\":\"9NaccUcw\", \"status\":\"ObPUNgWE9W5S\", \"previous_symbols\":\"iu4XuNREsNLo\", \"synonyms\":\"Zx\", \"accession_numbers\":\"9\", \"refseq_ids\":\"_EM_1317_XYZ_\", \"uniprot_id\":\"vtHJ6zxp\", \"entrez_gene_id\":\"hqIIbowbX\", \"_id\":{\"$oid\":\"6ec9df175690c6c433cce908\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" [ " + 
                    " \"_EM_64_XYZ_\", " + 
                    " \"_EM_1318_XYZ_\", " + 
                    " \")C\" " + 
                    " ] ")
                .post(baseUrlOfSut + "/ensembl/canonical-gene/hgnc")
                .then()
                .statusCode(404)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (404) GET:/pdb/header/{pdbId}
    */
    @Test(timeout = 60000)
    public void test_9_getOnHeaderReturns404() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/pdb/header/_EM_13_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'message'", containsString("PDB web service error for id _EM_13_XYZ_: <!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<html><head>\n<title>404 Not Found</title>\n</head><body>\n<h1>Not Found</h1>\n<p>The requested URL was not found on this server.</p>\n<hr>\n<address>Apache/2.4.52 (Ubuntu) Server at files.rcsb.org Port 80</address>\n</body></html>\n"));
    }
    
    
    /**
    * Calls:
    * (404) GET:/annotation/genomic/{genomicLocation}
    */
    @Test(timeout = 60000)
    public void test_10_getOnGenomReturns404() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/annotation/genomic/yqy?isoformOverrideSource=Ux__s5MjAFT")
                .then()
                .statusCode(404)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (404) GET:/ensembl/canonical-transcript/hgnc/{hugoSymbol}
    */
    @Test(timeout = 60000)
    public void test_11_getOnCanonical_transcriptHgncReturns404() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_5_XYZ_")
                .get(baseUrlOfSut + "/ensembl/canonical-transcript/hgnc/z0eVmzWya")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'message'", containsString("Ensembl transcript not found: z0eVmzWya"));
    }
    
    
    /**
    * Calls:
    * (404) GET:/annotation/genomic/{genomicLocation}
    */
    @Test(timeout = 60000)
    public void test_12_getOnGenomReturns404() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/annotation/genomic/3D?fields=")
                .then()
                .statusCode(404)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (404) GET:/annotation/genomic/{genomicLocation}
    */
    @Test(timeout = 60000)
    public void test_13_getOnGenomReturns404() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/annotation/genomic/EZ_UZ32XmDUU?" + 
                    "token=cNpv21&" + 
                    "fields=_EM_5956_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (404) GET:/annotation/genomic/{genomicLocation}
    */
    @Test(timeout = 60000)
    public void test_14_getOnAnnotationGenomWithQueryParamsEmptyIsoformOverrideSourceReturns404() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/annotation/genomic/_EM_4724_XYZ_?" + 
                    "isoformOverrideSource=&" + 
                    "token=WCDOQkDvc&" + 
                    "fields=&fields=IOOCI&fields=c%40&fields=7FwgLFZr2_T0")
                .then()
                .statusCode(404)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (404) GET:/annotation/genomic/{genomicLocation}
    */
    @Test(timeout = 60000)
    public void test_15_getOnGenomReturns404() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/annotation/genomic/35XYj7wz2C?" + 
                    "isoformOverrideSource=LFUZm&" + 
                    "token=%7B%7D&" + 
                    "fields=qDO")
                .then()
                .statusCode(404)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (404) GET:/ensembl/canonical-transcript/hgnc/{hugoSymbol}
    */
    @Test(timeout = 60000)
    public void test_16_getOnHgncReturns404UsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("annotator", "ensembl.canonical_transcript_per_hgnc")
                .d("{\"hgnc_symbol\":\"heh\", \"ensembl_canonical_gene\":\"ccuw3CMs5dxhS\", \"ensembl_canonical_transcript\":\"XrDNB4TygVyyu\", \"genome_nexus_canonical_transcript\":\"4qv6DFV\", \"uniprot_canonical_transcript\":\"pjmAgWVR0AW\", \"mskcc_canonical_transcript\":\"kLeRUmtgRtZvx\", \"hgnc_id\":\"w4MXaBUzh\", \"approved_name\":\"jeiHCnBU\", \"status\":\"UdOI\", \"previous_symbols\":\"gOqKO\", \"synonyms\":\"zfEAJI5mBU\", \"accession_numbers\":\"\", \"refseq_ids\":\"zARRO_tKN6J\", \"uniprot_id\":\"2U3kKVMKFBMJd\", \"entrez_gene_id\":\"ia6\", \"_id\":{\"$oid\":\"2ed3c06fb928fb1b3d3d31e9\"}}")
            .and().insertInto("annotator", "ensembl.canonical_transcript_per_hgnc")
                .d("{\"hgnc_symbol\":\"MGTsaFA5eIXC0o\", \"ensembl_canonical_gene\":\"2PQRhlv7\", \"ensembl_canonical_transcript\":\"W\", \"genome_nexus_canonical_transcript\":\"StbypO\", \"uniprot_canonical_transcript\":\"tl3PW_Kle_TADSyS\", \"mskcc_canonical_transcript\":\"o9vRJK90\", \"hgnc_id\":\"LuffMo0\", \"approved_name\":\"dXMNNQp\", \"status\":\"_X3AdIkDkVgn\", \"previous_symbols\":\"YqtqYASGS\", \"synonyms\":\"rW8rojP5BptU\", \"accession_numbers\":\"b3n97\", \"refseq_ids\":\"11K9RFbPxzT6MA6J\", \"uniprot_id\":\"EfDW8n8oPqFlz\", \"entrez_gene_id\":\"\", \"_id\":{\"$oid\":\"10cea3fe8546a00cbb3c0fa5\"}}")
            .and().insertInto("annotator", "ensembl.canonical_transcript_per_hgnc")
                .d("{\"hgnc_symbol\":\"OXrcG7\", \"ensembl_canonical_gene\":\"1z_2b\", \"ensembl_canonical_transcript\":\"aIrZPYbHuL\", \"genome_nexus_canonical_transcript\":\"AF4hlAf\", \"uniprot_canonical_transcript\":\"sV4_lA\", \"mskcc_canonical_transcript\":\"u\", \"hgnc_id\":\"lboXCbAeYBCDDPAu\", \"approved_name\":\"J79mdh2L5V\", \"status\":\"TNSAEzMMoYT\", \"previous_symbols\":\"BoX64rCFFlbmB\", \"synonyms\":\"JWNyuwACsN5g\", \"accession_numbers\":\"sd2z\", \"refseq_ids\":\"nAviOx0\", \"uniprot_id\":\"FjFmo\", \"entrez_gene_id\":\"8Ta_hVZ9Oj8\", \"_id\":{\"$oid\":\"6efedadb6feb1b2d3aecd7a6\"}}")
            .and().insertInto("annotator", "ensembl.canonical_transcript_per_hgnc")
                .d("{\"hgnc_symbol\":\"ku\", \"ensembl_canonical_gene\":\"iDFawZmYtYKb\", \"ensembl_canonical_transcript\":\"mKdpcqxtg\", \"genome_nexus_canonical_transcript\":\"40B\", \"uniprot_canonical_transcript\":\"Am6m6HR\", \"mskcc_canonical_transcript\":\"nSrWXLd7Gi\", \"hgnc_id\":\"lA\", \"approved_name\":\"hT77\", \"status\":\"knsV0qCKQ\", \"previous_symbols\":\"y4zn\", \"synonyms\":\"X\", \"accession_numbers\":\"4hJW3n2KGBEUZaj\", \"refseq_ids\":\"pLM\", \"uniprot_id\":\"J\", \"entrez_gene_id\":\"K6jaFkge0n8\", \"_id\":{\"$oid\":\"36a7c0615fd45f33d2e104ac\"}}")
            .and().insertInto("annotator", "ensembl.canonical_transcript_per_hgnc")
                .d("{\"hgnc_symbol\":\"rMjA\", \"ensembl_canonical_gene\":\"G67A\", \"ensembl_canonical_transcript\":\"tM2XR0paRQbuT4J\", \"genome_nexus_canonical_transcript\":\"owsJ7cai\", \"uniprot_canonical_transcript\":\"L11ZuOg\", \"mskcc_canonical_transcript\":\"lRQ5Aeny7QPo\", \"hgnc_id\":\"5FI4L\", \"approved_name\":\"65J1wY\", \"status\":\"RXJEeLgaz_5n7RU\", \"previous_symbols\":\"pf2eo_2SWdc\", \"synonyms\":\"mtGWu9\", \"accession_numbers\":\"8qpicCkyNLCvAmm\", \"refseq_ids\":\"n\", \"uniprot_id\":\"zKhW5uG22jqxi3o\", \"entrez_gene_id\":\"KpOFW\", \"_id\":{\"$oid\":\"d83cc3f865cde4d4cf1c938a\"}}")
            .and().insertInto("annotator", "ensembl.canonical_transcript_per_hgnc")
                .d("{\"hgnc_symbol\":\"_EM_2882_XYZ_\", \"ensembl_canonical_gene\":\"svA\", \"ensembl_canonical_transcript\":\"5WDz\", \"genome_nexus_canonical_transcript\":\"Vu2_Mi81jxalKPGW\", \"uniprot_canonical_transcript\":\"ItL57H3jkE0\", \"mskcc_canonical_transcript\":\"2EOxP\", \"hgnc_id\":\"jgqWezDc7_\", \"approved_name\":\"gfXY4\", \"status\":\"U\", \"previous_symbols\":\"_EM_2883_XYZ_\", \"synonyms\":\"xlw8cBuR_VyRf\", \"accession_numbers\":\"_IsB\", \"refseq_ids\":\"_EM_2884_XYZ_\", \"uniprot_id\":\"mygoXTnC4F\", \"entrez_gene_id\":\"Qdpoe9Uosb9X6dK\", \"_id\":{\"$oid\":\"9dc6c3c85ba0387f89a1cd9e\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/ensembl/canonical-transcript/hgnc/x?isoformOverrideSource=vHIQ")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'message'", containsString("Ensembl transcript not found: x"));
    }
    
    
    /**
    * Calls:
    * (404) POST:/annotation/genomic
    */
    @Test(timeout = 60000)
    public void test_17_postOnGenomicReturns404() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" [ " + 
                    " { " + 
                    " \"chromosome\": \"_EM_2849_XYZ_\", " + 
                    " \"start\": 106, " + 
                    " \"end\": 53, " + 
                    " \"referenceAllele\": \"aGRGqv\", " + 
                    " \"variantAllele\": \"_EM_2850_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"chromosome\": \"nauYz\", " + 
                    " \"start\": 765, " + 
                    " \"end\": 72, " + 
                    " \"referenceAllele\": \"XGtkjKFbz\", " + 
                    " \"variantAllele\": \"IyKjUXQ65q691aFi\" " + 
                    " }, " + 
                    " { " + 
                    " \"chromosome\": \"_EM_2851_XYZ_\", " + 
                    " \"start\": 408, " + 
                    " \"end\": 814, " + 
                    " \"referenceAllele\": \"_EM_2852_XYZ_\", " + 
                    " \"variantAllele\": \"\" " + 
                    " } " + 
                    " ] ")
                .post(baseUrlOfSut + "/annotation/genomic?fields=Y3")
                .then()
                .statusCode(404)
                .assertThat()
                .body(isEmptyOrNullString());
    }


}
